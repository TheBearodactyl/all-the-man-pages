CCMAKE(1)                                                                                          CMake                                                                                         CCMAKE(1)

NAME
       ccmake - CMake Curses Dialog Command-Line Reference

SYNOPSIS
          ccmake [<options>] <path-to-source | path-to-existing-build>

DESCRIPTION
       The  ccmake executable is the CMake curses interface.  Project configuration settings may be specified interactively through this GUI.  Brief instructions are provided at the bottom of the termi‐
       nal when the program is running.

       CMake is a cross-platform build system generator.  Projects specify their build process with platform-independent CMake listfiles included in each directory of a source tree with the name  CMake‐
       Lists.txt.  Users build a project by using CMake to generate a build system for a native tool on their platform.

OPTIONS
       -S <path-to-source>
              Path to root directory of the CMake project to build.

       -B <path-to-build>
              Path to directory which CMake will use as the root of build directory.

              If the directory doesn't already exist CMake will make it.

       -C <initial-cache>
              Pre-load a script to populate the cache.

              When  CMake  is  first  run in an empty build tree, it creates a CMakeCache.txt file and populates it with customizable settings for the project.  This option may be used to specify a file
              from which to load cache entries before the first pass through the project's CMake listfiles.  The loaded entries take priority over the project's default values.  The given file should be
              a CMake script containing set() commands that use the CACHE option, not a cache-format file.

              References to CMAKE_SOURCE_DIR and CMAKE_BINARY_DIR within the script evaluate to the top-level source and build tree.

       -D <var>:<type>=<value>, -D <var>=<value>
              Create or update a CMake CACHE entry.

              When  CMake is first run in an empty build tree, it creates a CMakeCache.txt file and populates it with customizable settings for the project.  This option may be used to specify a setting
              that takes priority over the project's default value.  The option may be repeated for as many CACHE entries as desired.

              If the :<type> portion is given it must be one of the types specified by the set() command documentation for its CACHE signature.  If the :<type> portion is omitted the entry will be  cre‐
              ated with no type if it does not exist with a type already.  If a command in the project sets the type to PATH or FILEPATH then the <value> will be converted to an absolute path.

              This option may also be given as a single argument: -D<var>:<type>=<value> or -D<var>=<value>.

              It's important to note that the order of -C and -D arguments is significant. They will be carried out in the order they are listed, with the last argument taking precedence over the previ‐
              ous ones. For example, if you specify -DCMAKE_BUILD_TYPE=Debug, followed by a -C argument with a file that calls:

                 set(CMAKE_BUILD_TYPE "Release" CACHE STRING "" FORCE)

              then the -C argument will take precedence, and CMAKE_BUILD_TYPE will be set to Release. However, if the -D argument comes after the -C argument, it will be set to Debug.

              If a set(... CACHE ...) call in the -C file does not use FORCE, and a -D argument sets the same variable, the -D argument will take precedence regardless of order because of the nature  of
              non-FORCE set(... CACHE ...) calls.

       -U <globbing_expr>
              Remove matching entries from CMake CACHE.

              This  option  may  be used to remove one or more variables from the CMakeCache.txt file, globbing expressions using * and ? are supported.  The option may be repeated for as many CACHE en‐
              tries as desired.

              Use with care, you can make your CMakeCache.txt non-working.

       -G <generator-name>
              Specify a build system generator.

              CMake may support multiple native build systems on certain platforms.  A generator is responsible for generating a particular build system.  Possible generator names are specified  in  the
              cmake-generators(7) manual.

              If not specified, CMake checks the CMAKE_GENERATOR environment variable and otherwise falls back to a builtin default selection.

       -T <toolset-spec>
              Toolset specification for the generator, if supported.

              Some CMake generators support a toolset specification to tell the native build system how to choose a compiler.  See the CMAKE_GENERATOR_TOOLSET variable for details.

       -A <platform-name>
              Specify platform name if supported by generator.

              Some CMake generators support a platform name to be given to the native build system to choose a compiler or SDK.  See the CMAKE_GENERATOR_PLATFORM variable for details.

       --toolchain <path-to-file>
              Specify the cross compiling toolchain file, equivalent to setting CMAKE_TOOLCHAIN_FILE variable.

       --install-prefix <directory>
              Specify the installation directory, used by the CMAKE_INSTALL_PREFIX variable. Must be an absolute path.

       -Wno-dev
              Suppress developer warnings.

              Suppress warnings that are meant for the author of the CMakeLists.txt files. By default this will also turn off deprecation warnings.

       -Wdev  Enable developer warnings.

              Enable warnings that are meant for the author of the CMakeLists.txt files. By default this will also turn on deprecation warnings.

       -Wdeprecated
              Enable deprecated functionality warnings.

              Enable warnings for usage of deprecated functionality, that are meant for the author of the CMakeLists.txt files.

       -Wno-deprecated
              Suppress deprecated functionality warnings.

              Suppress warnings for usage of deprecated functionality, that are meant for the author of the CMakeLists.txt files.

       -Werror=<what>
              Treat CMake warnings as errors. <what> must be one of the following:

              dev    Make developer warnings errors.

                     Make warnings that are meant for the author of the CMakeLists.txt files errors. By default this will also turn on deprecated warnings as errors.

              deprecated
                     Make deprecated macro and function warnings errors.

                     Make warnings for usage of deprecated macros and functions, that are meant for the author of the CMakeLists.txt files, errors.

       -Wno-error=<what>
              Do not treat CMake warnings as errors. <what> must be one of the following:

              dev    Make warnings that are meant for the author of the CMakeLists.txt files not errors. By default this will also turn off deprecated warnings as errors.

              deprecated
                     Make warnings for usage of deprecated macros and functions, that are meant for the author of the CMakeLists.txt files, not errors.

       -version [<file>], --version [<file>], /V [<file>]
              Show program name/version banner and exit.  The output is printed to a named <file> if given.

       -h, -H, --help, -help, -usage, /?
              Print usage information and exit.

              Usage describes the basic command line interface and its options.

       --help-full [<file>]
              Print all help manuals and exit.

              All manuals are printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-manual <man> [<file>]
              Print one help manual and exit.

              The specified manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-manual-list [<file>]
              List help manuals available and exit.

              The list contains all manuals for which help may be obtained by using the --help-manual option followed by a manual name.  The output is printed to a named <file> if given.

       --help-command <cmd> [<file>]
              Print help for one command and exit.

              The cmake-commands(7) manual entry for <cmd> is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-command-list [<file>]
              List commands with help available and exit.

              The list contains all commands for which help may be obtained by using the --help-command option followed by a command name.  The output is printed to a named <file> if given.

       --help-commands [<file>]
              Print cmake-commands manual and exit.

              The cmake-commands(7) manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-module <mod> [<file>]
              Print help for one module and exit.

              The cmake-modules(7) manual entry for <mod> is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-module-list [<file>]
              List modules with help available and exit.

              The list contains all modules for which help may be obtained by using the --help-module option followed by a module name.  The output is printed to a named <file> if given.

       --help-modules [<file>]
              Print cmake-modules manual and exit.

              The cmake-modules(7) manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-policy <cmp> [<file>]
              Print help for one policy and exit.

              The cmake-policies(7) manual entry for <cmp> is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-policy-list [<file>]
              List policies with help available and exit.

              The list contains all policies for which help may be obtained by using the --help-policy option followed by a policy name.  The output is printed to a named <file> if given.

       --help-policies [<file>]
              Print cmake-policies manual and exit.

              The cmake-policies(7) manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-property <prop> [<file>]
              Print help for one property and exit.

              The cmake-properties(7) manual entries for <prop> are printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-property-list [<file>]
              List properties with help available and exit.

              The list contains all properties for which help may be obtained by using the --help-property option followed by a property name.  The output is printed to a named <file> if given.

       --help-properties [<file>]
              Print cmake-properties manual and exit.

              The cmake-properties(7) manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-variable <var> [<file>]
              Print help for one variable and exit.

              The cmake-variables(7) manual entry for <var> is printed in a human-readable text format.  The output is printed to a named <file> if given.

       --help-variable-list [<file>]
              List variables with help available and exit.

              The list contains all variables for which help may be obtained by using the --help-variable option followed by a variable name.  The output is printed to a named <file> if given.

       --help-variables [<file>]
              Print cmake-variables manual and exit.

              The cmake-variables(7) manual is printed in a human-readable text format.  The output is printed to a named <file> if given.

SEE ALSO
       The following resources are available to get help using CMake:

       Home Page
              https://cmake.org

              The primary starting point for learning about CMake.

       Online Documentation and Community Resources
              https://cmake.org/documentation

              Links to available documentation and community resources may be found on this web page.

       Discourse Forum
              https://discourse.cmake.org

              The Discourse Forum hosts discussion and questions about CMake.

COPYRIGHT
       2000-2023 Kitware, Inc. and Contributors

3.26.3                                                                                         Apr 06, 2023                                                                                      CCMAKE(1)
