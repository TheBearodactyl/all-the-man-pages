strsignal(3)               Library Functions Manual               strsignal(3)

NAME
       strsignal,  sigabbrev_np,  sigdescr_np, sys_siglist - return string de‐
       scribing signal

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <string.h>

       char *strsignal(int sig);
       const char *sigdescr_np(int sig);
       const char *sigabbrev_np(int sig);

       [[deprecated]] extern const char *const sys_siglist[];

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       sigabbrev_np(), sigdescr_np():
           _GNU_SOURCE

       strsignal():
           From glibc 2.10 to glibc 2.31:
               _POSIX_C_SOURCE >= 200809L
           Before glibc 2.10:
               _GNU_SOURCE

       sys_siglist:
           Since glibc 2.19:
               _DEFAULT_SOURCE
           glibc 2.19 and earlier:
               _BSD_SOURCE

DESCRIPTION
       The strsignal() function returns a string describing the signal  number
       passed in the argument sig.  The string can be used only until the next
       call to strsignal().  The string returned by strsignal()  is  localized
       according to the LC_MESSAGES category in the current locale.

       The  sigdescr_np() function returns a string describing the signal num‐
       ber passed in the argument sig.  Unlike strsignal() this string is  not
       influenced by the current locale.

       The sigabbrev_np() function returns the abbreviated name of the signal,
       sig.  For example, given the value SIGINT, it returns the string "INT".

       The (deprecated) array sys_siglist holds the signal description strings
       indexed  by  signal number.  The strsignal() or the sigdescr_np() func‐
       tion should be used instead of this array; see also VERSIONS.

RETURN VALUE
       The strsignal() function returns the appropriate description string, or
       an  unknown  signal  message  if the signal number is invalid.  On some
       systems (but not on Linux), NULL may instead be returned for an invalid
       signal number.

       The  sigdescr_np()  and sigabbrev_np() functions return the appropriate
       description string.  The returned string is  statically  allocated  and
       valid for the lifetime of the program.  These functions return NULL for
       an invalid signal number.

ATTRIBUTES
       For an  explanation  of  the  terms  used  in  this  section,  see  at‐
       tributes(7).

       ┌───────────────┬───────────────┬──────────────────────────────────────┐
       │Interface      │ Attribute     │ Value                                │
       ├───────────────┼───────────────┼──────────────────────────────────────┤
       │strsignal()    │ Thread safety │ MT-Unsafe race:strsignal locale      │
       ├───────────────┼───────────────┼──────────────────────────────────────┤
       │sigdescr_np(), │ Thread safety │ MT-Safe                              │
       │sigabbrev_np() │               │                                      │
       └───────────────┴───────────────┴──────────────────────────────────────┘

STANDARDS
       strsignal()
              POSIX.1-2008.

       sigdescr_np()
       sigabbrev_np()
              GNU.

       sys_siglist
              None.

HISTORY
       strsignal()
              POSIX.1-2008.  Solaris, BSD.

       sigdescr_np()
       sigabbrev_np()
              glibc 2.32.

       sys_siglist
              Removed in glibc 2.32.

NOTES
       sigdescr_np() and sigabbrev_np() are thread-safe and async-signal-safe.

SEE ALSO
       psignal(3), strerror(3)

Linux man-pages 6.04              2023-03-30                      strsignal(3)
STRSIGNAL(3P)              POSIX Programmer's Manual             STRSIGNAL(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       strsignal — get name of signal

SYNOPSIS
       #include <string.h>

       char *strsignal(int signum);

DESCRIPTION
       The strsignal() function shall map the signal number in  signum  to  an
       implementation-defined  string  and  shall  return a pointer to it.  It
       shall use the same set of messages as the psignal() function.

       The application shall not modify  the  string  returned.  The  returned
       pointer might be invalidated or the string content might be overwritten
       by a subsequent call  to  strsignal()  or  setlocale().   The  returned
       pointer might also be invalidated if the calling thread is terminated.

       The  contents  of the message strings returned by strsignal() should be
       determined by the setting of the LC_MESSAGES category  in  the  current
       locale.

       The implementation shall behave as if no function defined in this stan‐
       dard calls strsignal().

       Since no return value is reserved to indicate an error, an  application
       wishing  to check for error situations should set errno to 0, then call
       strsignal(), then check errno.

       The strsignal() function need not be thread-safe.

RETURN VALUE
       Upon successful completion, strsignal() shall return  a  pointer  to  a
       string.  Otherwise,  if signum is not a valid signal number, the return
       value is unspecified.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       If signum is not a valid signal  number,  some  implementations  return
       NULL,  while for others the strsignal() function returns a pointer to a
       string containing an unspecified message denoting  an  unknown  signal.
       POSIX.1‐2008 leaves this return value unspecified.

FUTURE DIRECTIONS
       None.

SEE ALSO
       psiginfo(), setlocale()

       The Base Definitions volume of POSIX.1‐2017, <string.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                        STRSIGNAL(3P)
