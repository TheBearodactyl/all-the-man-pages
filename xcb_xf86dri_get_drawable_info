xcb_xf86dri_get_drawable_info(3)                                                               XCB Requests                                                               xcb_xf86dri_get_drawable_info(3)

NAME
       xcb_xf86dri_get_drawable_info -

SYNOPSIS
       #include <xcb/xf86dri.h>

   Request function
       xcb_xf86dri_get_drawable_info_cookie_t xcb_xf86dri_get_drawable_info(xcb_connection_t *conn, uint32_t screen, uint32_t drawable);

   Reply datastructure
       typedef struct xcb_xf86dri_get_drawable_info_reply_t {
           uint8_t  response_type;
           uint8_t  pad0;
           uint16_t sequence;
           uint32_t length;
           uint32_t drawable_table_index;
           uint32_t drawable_table_stamp;
           int16_t  drawable_origin_X;
           int16_t  drawable_origin_Y;
           int16_t  drawable_size_W;
           int16_t  drawable_size_H;
           uint32_t num_clip_rects;
           int16_t  back_x;
           int16_t  back_y;
           uint32_t num_back_clip_rects;
       } xcb_xf86dri_get_drawable_info_reply_t;

   Reply function
       xcb_xf86dri_get_drawable_info_reply_t *xcb_xf86dri_get_drawable_info_reply(xcb_connection_t *conn, xcb_xf86dri_get_drawable_info_cookie_t cookie, xcb_generic_error_t **e);

   Reply accessors
       xcb_xf86dri_drm_clip_rect_t *xcb_xf86dri_get_drawable_info_clip_rects(const xcb_xf86dri_get_drawable_info_request_t *reply);

       int xcb_xf86dri_get_drawable_info_clip_rects_length(const xcb_xf86dri_get_drawable_info_reply_t *reply);

       xcb_xf86dri_drm_clip_rect_iterator_t xcb_xf86dri_get_drawable_info_clip_rects_iterator(const xcb_xf86dri_get_drawable_info_reply_t *reply);

       xcb_xf86dri_drm_clip_rect_t *xcb_xf86dri_get_drawable_info_back_clip_rects(const xcb_xf86dri_get_drawable_info_request_t *reply);

       int xcb_xf86dri_get_drawable_info_back_clip_rects_length(const xcb_xf86dri_get_drawable_info_reply_t *reply);

       xcb_xf86dri_drm_clip_rect_iterator_t xcb_xf86dri_get_drawable_info_back_clip_rects_iterator(const xcb_xf86dri_get_drawable_info_reply_t *reply);

REQUEST ARGUMENTS
       conn      The XCB connection to X11.

       screen    TODO: NOT YET DOCUMENTED.

       drawable  TODO: NOT YET DOCUMENTED.

REPLY FIELDS
       response_type
                 The type of this reply, in this case XCB_XF86DRI_GET_DRAWABLE_INFO. This field is also present in the xcb_generic_reply_t and can be used to tell replies apart from each other.

       sequence  The sequence number of the last request processed by the X11 server.

       length    The length of the reply, in words (a word is 4 bytes).

       drawable_table_index
                 TODO: NOT YET DOCUMENTED.

       drawable_table_stamp
                 TODO: NOT YET DOCUMENTED.

       drawable_origin_X
                 TODO: NOT YET DOCUMENTED.

       drawable_origin_Y
                 TODO: NOT YET DOCUMENTED.

       drawable_size_W
                 TODO: NOT YET DOCUMENTED.

       drawable_size_H
                 TODO: NOT YET DOCUMENTED.

       num_clip_rects
                 TODO: NOT YET DOCUMENTED.

       back_x    TODO: NOT YET DOCUMENTED.

       back_y    TODO: NOT YET DOCUMENTED.

       num_back_clip_rects
                 TODO: NOT YET DOCUMENTED.

DESCRIPTION
RETURN VALUE
       Returns an xcb_xf86dri_get_drawable_info_cookie_t. Errors have to be handled when calling the reply function xcb_xf86dri_get_drawable_info_reply.

       If you want to handle errors in the event loop instead, use xcb_xf86dri_get_drawable_info_unchecked. See xcb-requests(3) for details.

ERRORS
       This request does never generate any errors.

SEE ALSO
AUTHOR
       Generated from xf86dri.xml. Contact xcb@lists.freedesktop.org for corrections and improvements.

X Version 11                                                                                    libxcb 1.15                                                               xcb_xf86dri_get_drawable_info(3)
