std::__debug::list< _Tp, _ALibraryrFunstd::__debug::list< _Tp, _Allocator >(3)

NAME
       std::__debug::list< _Tp, _Allocator > - Class std::list with
       safety/checking/debug instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and list< _Tp, std::allocator< _Tp
       > >.

   Public Types
       typedef _Allocator allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator, list >
           const_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef _Base::difference_type difference_type
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, list > iterator
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef _Base::size_type size_type
       typedef _Tp value_type

   Public Member Functions
       list (_Base_ref __x)
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> list (_InputIterator
           __first, _InputIterator __last, const _Allocator &__a=_Allocator())
       list (const _Allocator &__a) noexcept
       list (const list &)=default
       list (const list &__x, const __type_identity_t< allocator_type > &__a)
       list (initializer_list< value_type > __l, const allocator_type
           &__a=allocator_type())
       list (list &&)=default
       list (list &&__x, const __type_identity_t< allocator_type > &__a)
           noexcept(std::is_nothrow_constructible< _Base, _Base, const
           allocator_type & >::value)
       list (size_type __n, const __type_identity_t< _Tp > &__value, const
           _Allocator &__a=_Allocator())
       list (size_type __n, const allocator_type &__a=allocator_type())
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> void assign (_InputIterator
           __first, _InputIterator __last)
       void assign (initializer_list< value_type > __l)
       void assign (size_type __n, const _Tp &__t)
       const_reference back () const noexcept
       reference back () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       const_iterator cbegin () const noexcept
       const_iterator cend () const noexcept
       void clear () noexcept
       const_reverse_iterator crbegin () const noexcept
       const_reverse_iterator crend () const noexcept
       template<typename... _Args> iterator emplace (const_iterator
           __position, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       iterator erase (const_iterator __first, const_iterator __last) noexcept
       iterator erase (const_iterator __position) noexcept
       const_reference front () const noexcept
       reference front () noexcept
       iterator insert (const_iterator __p, initializer_list< value_type >
           __l)
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> iterator insert
           (const_iterator __position, _InputIterator __first, _InputIterator
           __last)
       iterator insert (const_iterator __position, _Tp &&__x)
       iterator insert (const_iterator __position, const _Tp &__x)
       iterator insert (const_iterator __position, size_type __n, const _Tp
           &__x)
       void merge (list &&__x)
       template<class _Compare > void merge (list &&__x, _Compare __comp)
       void merge (list &__x)
       template<typename _Compare > void merge (list &__x, _Compare __comp)
       list & operator= (const list &)=default
       list & operator= (initializer_list< value_type > __l)
       list & operator= (list &&)=default
       void pop_back () noexcept
       void pop_front () noexcept
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       __remove_return_type remove (const _Tp &__value)
       template<class _Predicate > __remove_return_type remove_if (_Predicate
           __pred)
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       void resize (size_type __sz)
       void resize (size_type __sz, const _Tp &__c)
       void sort ()
       template<typename _StrictWeakOrdering > void sort (_StrictWeakOrdering
           __pred)
       void splice (const_iterator __position, list &&__x) noexcept
       void splice (const_iterator __position, list &&__x, const_iterator
           __first, const_iterator __last) noexcept
       void splice (const_iterator __position, list &&__x, const_iterator __i)
           noexcept
       void splice (const_iterator __position, list &__x) noexcept
       void splice (const_iterator __position, list &__x, const_iterator
           __first, const_iterator __last) noexcept
       void splice (const_iterator __position, list &__x, const_iterator __i)
           noexcept
       void swap (list &__x) noexcept(/*conditional */)
       __remove_return_type unique ()
       template<class _BinaryPredicate > __remove_return_type unique
           (_BinaryPredicate __binary_pred)

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator

Detailed Description
   template<typename _Tp, typename _Allocator = std::allocator<_Tp>>
       class std::__debug::list< _Tp, _Allocator >"Class std::list with
       safety/checking/debug instrumentation.

       Definition at line 50 of file debug/list.

Member Typedef Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Allocator std::__debug::list< _Tp, _Allocator >::allocator_type
       Definition at line 91 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator<_Base_const_iterator, list>
       std::__debug::list< _Tp, _Allocator >::const_iterator
       Definition at line 85 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_pointer std::__debug::list< _Tp, _Allocator
       >::const_pointer
       Definition at line 93 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_reference std::__debug::list< _Tp, _Allocator
       >::const_reference
       Definition at line 80 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<const_iterator> std::__debug::list< _Tp,
       _Allocator >::const_reverse_iterator
       Definition at line 95 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::difference_type std::__debug::list< _Tp, _Allocator
       >::difference_type
       Definition at line 88 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator<_Base_iterator, list> std::__debug::list<
       _Tp, _Allocator >::iterator
       Definition at line 83 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::pointer std::__debug::list< _Tp, _Allocator >::pointer
       Definition at line 92 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::reference std::__debug::list< _Tp, _Allocator >::reference
       Definition at line 79 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<iterator> std::__debug::list< _Tp, _Allocator
       >::reverse_iterator
       Definition at line 94 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::size_type std::__debug::list< _Tp, _Allocator >::size_type
       Definition at line 87 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Tp std::__debug::list< _Tp, _Allocator >::value_type
       Definition at line 90 of file debug/list.

Constructor & Destructor Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (initializer_list<
       value_type > __l, const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 112 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (const list< _Tp,
       _Allocator > & __x, const __type_identity_t< allocator_type > & __a)
       [inline]
       Definition at line 118 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (list< _Tp, _Allocator > &&
       __x, const __type_identity_t< allocator_type > & __a) [inline],
       [noexcept]
       Definition at line 121 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (const _Allocator & __a)
       [inline],  [explicit],  [noexcept]
       Definition at line 130 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (size_type __n, const
       allocator_type & __a = allocator_type()) [inline],  [explicit]
       Definition at line 135 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (size_type __n, const
       __type_identity_t< _Tp > & __value, const _Allocator & __a =
       _Allocator()) [inline]
       Definition at line 138 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> std::__debug::list< _Tp,
       _Allocator >::list (_InputIterator __first, _InputIterator __last,
       const _Allocator & __a = _Allocator()) [inline]
       Definition at line 154 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::list< _Tp, _Allocator >::list (_Base_ref __x) [inline]
       Definition at line 161 of file debug/list.

Member Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> const
       _Base & std::__debug::list< _Tp, _Allocator >::_M_base () const
       [inline],  [noexcept]
       Definition at line 905 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> _Base &
       std::__debug::list< _Tp, _Allocator >::_M_base () [inline],  [noexcept]
       Definition at line 902 of file debug/list.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> void std::__debug::list< _Tp,
       _Allocator >::assign (_InputIterator __first, _InputIterator __last)
       [inline]
       Definition at line 194 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::assign (initializer_list<
       value_type > __l) [inline]
       Definition at line 180 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::assign (size_type __n, const _Tp
       & __t) [inline]
       Definition at line 209 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::list< _Tp, _Allocator >::back () const
       [inline],  [noexcept]
       Definition at line 389 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::list< _Tp, _Allocator >::back () [inline],
       [noexcept]
       Definition at line 381 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::list< _Tp, _Allocator >::begin () const
       [inline],  [noexcept]
       Definition at line 225 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::begin () [inline],
       [noexcept]
       Definition at line 220 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::list< _Tp, _Allocator >::cbegin () const
       [inline],  [noexcept]
       Definition at line 261 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::list< _Tp, _Allocator >::cend () const
       [inline],  [noexcept]
       Definition at line 266 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::clear () [inline],  [noexcept]
       Definition at line 568 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::list< _Tp, _Allocator >::crbegin
       () const [inline],  [noexcept]
       Definition at line 271 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::list< _Tp, _Allocator >::crend ()
       const [inline],  [noexcept]
       Definition at line 276 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> iterator std::__debug::list< _Tp,
       _Allocator >::emplace (const_iterator __position, _Args &&... __args)
       [inline]
       Definition at line 427 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::list< _Tp, _Allocator >::end () const
       [inline],  [noexcept]
       Definition at line 235 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::end () [inline],
       [noexcept]
       Definition at line 230 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::erase (const_iterator
       __first, const_iterator __last) [inline],  [noexcept]
       Definition at line 538 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::erase (const_iterator
       __position) [inline],  [noexcept]
       Definition at line 527 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::list< _Tp, _Allocator >::front () const
       [inline],  [noexcept]
       Definition at line 373 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::list< _Tp, _Allocator >::front () [inline],
       [noexcept]
       Definition at line 365 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::insert (const_iterator
       __p, initializer_list< value_type > __l) [inline]
       Definition at line 452 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> iterator std::__debug::list<
       _Tp, _Allocator >::insert (const_iterator __position, _InputIterator
       __first, _InputIterator __last) [inline]
       Definition at line 479 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::insert (const_iterator
       __position, _Tp && __x) [inline]
       Definition at line 448 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::insert (const_iterator
       __position, const _Tp & __x) [inline]
       Definition at line 437 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::list< _Tp, _Allocator >::insert (const_iterator
       __position, size_type __n, const _Tp & __x) [inline]
       Definition at line 461 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::merge (list< _Tp, _Allocator >
       && __x) [inline]
       Definition at line 842 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _Compare > void std::__debug::list< _Tp, _Allocator
       >::merge (list< _Tp, _Allocator > && __x, _Compare __comp) [inline]
       Definition at line 867 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::merge (list< _Tp, _Allocator > &
       __x) [inline]
       Definition at line 860 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _Compare > void std::__debug::list< _Tp, _Allocator
       >::merge (list< _Tp, _Allocator > & __x, _Compare __comp) [inline]
       Definition at line 888 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> list &
       std::__debug::list< _Tp, _Allocator >::operator= (initializer_list<
       value_type > __l) [inline]
       Definition at line 172 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::pop_back () [inline],
       [noexcept]
       Definition at line 417 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::pop_front () [inline],
       [noexcept]
       Definition at line 403 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::list< _Tp, _Allocator >::rbegin ()
       const [inline],  [noexcept]
       Definition at line 245 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::list< _Tp, _Allocator >::rbegin ()
       [inline],  [noexcept]
       Definition at line 240 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       __remove_return_type std::__debug::list< _Tp, _Allocator >::remove
       (const _Tp & __value) [inline]
       Definition at line 691 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _Predicate > __remove_return_type std::__debug::list<
       _Tp, _Allocator >::remove_if (_Predicate __pred) [inline]
       Definition at line 730 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::list< _Tp, _Allocator >::rend ()
       const [inline],  [noexcept]
       Definition at line 255 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::list< _Tp, _Allocator >::rend ()
       [inline],  [noexcept]
       Definition at line 250 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::resize (size_type __sz) [inline]
       Definition at line 287 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::resize (size_type __sz, const
       _Tp & __c) [inline]
       Definition at line 312 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::sort () [inline]
       Definition at line 893 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _StrictWeakOrdering > void std::__debug::list< _Tp,
       _Allocator >::sort (_StrictWeakOrdering __pred) [inline]
       Definition at line 897 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > && __x) [inline],  [noexcept]
       Definition at line 577 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > && __x, const_iterator __first,
       const_iterator __last) [inline],  [noexcept]
       Definition at line 629 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > && __x, const_iterator __i)
       [inline],  [noexcept]
       Definition at line 597 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > & __x) [inline],  [noexcept]
       Definition at line 591 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > & __x, const_iterator __first,
       const_iterator __last) [inline],  [noexcept]
       Definition at line 671 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::splice (const_iterator
       __position, list< _Tp, _Allocator > & __x, const_iterator __i)
       [inline],  [noexcept]
       Definition at line 623 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::list< _Tp, _Allocator >::swap (list< _Tp, _Allocator > &
       __x) [inline],  [noexcept]
       Definition at line 560 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       __remove_return_type std::__debug::list< _Tp, _Allocator >::unique ()
       [inline]
       Definition at line 764 of file debug/list.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _BinaryPredicate > __remove_return_type
       std::__debug::list< _Tp, _Allocator >::unique (_BinaryPredicate
       __binary_pred) [inline]
       Definition at line 801 of file debug/list.

Friends And Related Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _ItT , typename _SeqT , typename _CatT > friend class
       ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 66 of file debug/list.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Festd::__debug::list< _Tp, _Allocator >(3)
