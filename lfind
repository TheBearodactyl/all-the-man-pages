lsearch(3)                                                                               Library Functions Manual                                                                               lsearch(3)

NAME
       lfind, lsearch - linear search of an array

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <search.h>

       void *lfind(const void key[.size], const void base[.size * .nmemb],
                   size_t *nmemb, size_t size,
                   int(*compar)(const void [.size], const void [.size]));
       void *lsearch(const void key[.size], void base[.size * .nmemb],
                   size_t *nmemb, size_t size,
                   int(*compar)(const void [.size], const void [.size]));

DESCRIPTION
       lfind()  and  lsearch() perform a linear search for key in the array base which has *nmemb elements of size bytes each.  The comparison function referenced by compar is expected to have two argu‐
       ments which point to the key object and to an array member, in that order, and which returns zero if the key object matches the array member, and nonzero otherwise.

       If lsearch() does not find a matching element, then the key object is inserted at the end of the table, and *nmemb is incremented.  In particular, one should know that a matching element  exists,
       or that more room is available.

RETURN VALUE
       lfind() returns a pointer to a matching member of the array, or NULL if no match is found.  lsearch() returns a pointer to a matching member of the array, or to the newly added member if no match
       is found.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │lfind(), lsearch()                                                                                                                                                      │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, SVr4, 4.3BSD.  libc-4.6.27.

BUGS
       The naming is unfortunate.

SEE ALSO
       bsearch(3), hsearch(3), tsearch(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                      lsearch(3)
LFIND(3P)                                                                                POSIX Programmer's Manual                                                                               LFIND(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       lfind — find entry in a linear search table

SYNOPSIS
       #include <search.h>

       void *lfind(const void *key, const void *base, size_t *nelp,
           size_t width, int (*compar)(const void *, const void *));

DESCRIPTION
       Refer to lsearch().

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          LFIND(3P)
