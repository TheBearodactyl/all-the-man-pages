std::__debug::multiset<std::__debug::multiset<a_Key,(_Compare, _Allocator >(3)

NAME
       std::__debug::multiset< _Key, _Compare, _Allocator > - Class
       std::multiset with safety/checking/debug instrumentation.

SYNOPSIS
       #include <set>

       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and multiset< _Key, std::less<
       _Key >, std::allocator< _Key > >.

   Public Types
       typedef _Allocator allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator, multiset >
           const_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef _Base::difference_type difference_type
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, multiset >
           iterator
       typedef _Compare key_compare
       typedef _Key key_type
       using node_type = typename _Base::node_type
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef _Base::size_type size_type
       typedef _Compare value_compare
       typedef _Key value_type

   Public Member Functions
       multiset (_Base_ref __x)
       template<typename _InputIterator > multiset (_InputIterator __first,
           _InputIterator __last, const _Compare &__comp=_Compare(), const
           _Allocator &__a=_Allocator())
       template<typename _InputIterator > multiset (_InputIterator __first,
           _InputIterator __last, const allocator_type &__a)
       multiset (const _Compare &__comp, const _Allocator &__a=_Allocator())
       multiset (const allocator_type &__a)
       multiset (const multiset &)=default
       multiset (const multiset &__m, const __type_identity_t< allocator_type
           > &__a)
       multiset (initializer_list< value_type > __l, const _Compare
           &__comp=_Compare(), const allocator_type &__a=allocator_type())
       multiset (initializer_list< value_type > __l, const allocator_type
           &__a)
       multiset (multiset &&)=default
       multiset (multiset &&__m, const __type_identity_t< allocator_type >
           &__a) noexcept(noexcept(_Base(std::move(__m), __a)))
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       const_iterator cbegin () const noexcept
       const_iterator cend () const noexcept
       void clear () noexcept
       const_reverse_iterator crbegin () const noexcept
       const_reverse_iterator crend () const noexcept
       template<typename... _Args> iterator emplace (_Args &&... __args)
       template<typename... _Args> iterator emplace_hint (const_iterator
           __pos, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> std::pair< iterator,
           iterator > equal_range (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> std::pair<
           const_iterator, const_iterator > equal_range (const _Kt &__x) const
       std::pair< iterator, iterator > equal_range (const key_type &__x)
       std::pair< const_iterator, const_iterator > equal_range (const key_type
           &__x) const
       _Base_iterator erase (_Base_const_iterator __position)
       size_type erase (const key_type &__x)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (const_iterator __first,
           const_iterator __last)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (const_iterator __position)
       node_type extract (const key_type &__key)
       node_type extract (const_iterator __position)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator find (const _Kt
           &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator find
           (const _Kt &__x) const
       iterator find (const key_type &__x)
       const_iterator find (const key_type &__x) const
       template<typename _InputIterator > void insert (_InputIterator __first,
           _InputIterator __last)
       iterator insert (const value_type &__x)
       iterator insert (const_iterator __hint, node_type &&__nh)
       iterator insert (const_iterator __position, const value_type &__x)
       iterator insert (const_iterator __position, value_type &&__x)
       void insert (initializer_list< value_type > __l)
       iterator insert (node_type &&__nh)
       iterator insert (value_type &&__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator lower_bound
           (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator
           lower_bound (const _Kt &__x) const
       iterator lower_bound (const key_type &__x)
       const_iterator lower_bound (const key_type &__x) const
       multiset & operator= (const multiset &)=default
       multiset & operator= (initializer_list< value_type > __l)
       multiset & operator= (multiset &&)=default
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       void swap (multiset &__x) noexcept(/*conditional */)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator upper_bound
           (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator
           upper_bound (const _Kt &__x) const
       iterator upper_bound (const key_type &__x)
       const_iterator upper_bound (const key_type &__x) const

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator

Detailed Description
   template<typename _Key, typename _Compare = std::less<_Key>, typename
       _Allocator = std::allocator<_Key>>
       class std::__debug::multiset< _Key, _Compare, _Allocator >"Class
       std::multiset with safety/checking/debug instrumentation.

       Definition at line 44 of file set.

Member Typedef Documentation
   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Allocator
       std::__debug::multiset< _Key, _Compare, _Allocator >::allocator_type
       Definition at line 77 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef
       __gnu_debug::_Safe_iterator<_Base_const_iterator, multiset>
       std::__debug::multiset< _Key, _Compare, _Allocator >::const_iterator
       Definition at line 84 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::const_pointer
       std::__debug::multiset< _Key, _Compare, _Allocator >::const_pointer
       Definition at line 89 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::const_reference
       std::__debug::multiset< _Key, _Compare, _Allocator >::const_reference
       Definition at line 79 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef
       std::reverse_iterator<const_iterator> std::__debug::multiset< _Key,
       _Compare, _Allocator >::const_reverse_iterator
       Definition at line 91 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::difference_type
       std::__debug::multiset< _Key, _Compare, _Allocator >::difference_type
       Definition at line 87 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef
       __gnu_debug::_Safe_iterator<_Base_iterator, multiset>
       std::__debug::multiset< _Key, _Compare, _Allocator >::iterator
       Definition at line 82 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Compare
       std::__debug::multiset< _Key, _Compare, _Allocator >::key_compare
       Definition at line 75 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Key
       std::__debug::multiset< _Key, _Compare, _Allocator >::key_type
       Definition at line 73 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> using std::__debug::multiset< _Key,
       _Compare, _Allocator >::node_type =  typename _Base::node_type
       Definition at line 296 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::pointer
       std::__debug::multiset< _Key, _Compare, _Allocator >::pointer
       Definition at line 88 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::reference
       std::__debug::multiset< _Key, _Compare, _Allocator >::reference
       Definition at line 78 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef
       std::reverse_iterator<iterator> std::__debug::multiset< _Key, _Compare,
       _Allocator >::reverse_iterator
       Definition at line 90 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Base::size_type
       std::__debug::multiset< _Key, _Compare, _Allocator >::size_type
       Definition at line 86 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Compare
       std::__debug::multiset< _Key, _Compare, _Allocator >::value_compare
       Definition at line 76 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> typedef _Key
       std::__debug::multiset< _Key, _Compare, _Allocator >::value_type
       Definition at line 74 of file set.

Constructor & Destructor Documentation
   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (initializer_list< value_type > __l,
       const _Compare & __comp = _Compare(), const allocator_type & __a =
       allocator_type()) [inline]
       Definition at line 107 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (const allocator_type & __a) [inline],
       [explicit]
       Definition at line 113 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (const multiset< _Key, _Compare,
       _Allocator > & __m, const __type_identity_t< allocator_type > & __a)
       [inline]
       Definition at line 116 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (multiset< _Key, _Compare, _Allocator
       > && __m, const __type_identity_t< allocator_type > & __a) [inline],
       [noexcept]
       Definition at line 120 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (initializer_list< value_type > __l,
       const allocator_type & __a) [inline]
       Definition at line 125 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _InputIterator >
       std::__debug::multiset< _Key, _Compare, _Allocator >::multiset
       (_InputIterator __first, _InputIterator __last, const allocator_type &
       __a) [inline]
       Definition at line 130 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (const _Compare & __comp, const
       _Allocator & __a = _Allocator()) [inline],  [explicit]
       Definition at line 139 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _InputIterator >
       std::__debug::multiset< _Key, _Compare, _Allocator >::multiset
       (_InputIterator __first, _InputIterator __last, const _Compare & __comp
       = _Compare(), const _Allocator & __a = _Allocator()) [inline]
       Definition at line 144 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::__debug::multiset< _Key,
       _Compare, _Allocator >::multiset (_Base_ref __x) [inline]
       Definition at line 152 of file set.

Member Function Documentation
   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const _Base &
       std::__debug::multiset< _Key, _Compare, _Allocator >::_M_base () const
       [inline],  [noexcept]
       Definition at line 557 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> _Base & std::__debug::multiset<
       _Key, _Compare, _Allocator >::_M_base () [inline],  [noexcept]
       Definition at line 554 of file set.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::begin () const
       [inline],  [noexcept]
       Definition at line 179 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::begin () [inline],  [noexcept]
       Definition at line 175 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::cbegin () const
       [inline],  [noexcept]
       Definition at line 208 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::cend () const
       [inline],  [noexcept]
       Definition at line 212 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> void std::__debug::multiset< _Key,
       _Compare, _Allocator >::clear () [inline],  [noexcept]
       Definition at line 420 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::crbegin () const
       [inline],  [noexcept]
       Definition at line 216 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::crend () const
       [inline],  [noexcept]
       Definition at line 220 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename... _Args>
       iterator std::__debug::multiset< _Key, _Compare, _Allocator >::emplace
       (_Args &&... __args) [inline]
       Definition at line 233 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename... _Args>
       iterator std::__debug::multiset< _Key, _Compare, _Allocator
       >::emplace_hint (const_iterator __pos, _Args &&... __args) [inline]
       Definition at line 238 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::end () const
       [inline],  [noexcept]
       Definition at line 187 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::end () [inline],  [noexcept]
       Definition at line 183 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type> std::pair<
       iterator, iterator > std::__debug::multiset< _Key, _Compare, _Allocator
       >::equal_range (const _Kt & __x) [inline]
       Definition at line 536 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type> std::pair<
       const_iterator, const_iterator > std::__debug::multiset< _Key,
       _Compare, _Allocator >::equal_range (const _Kt & __x) const [inline]
       Definition at line 546 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::pair< iterator, iterator >
       std::__debug::multiset< _Key, _Compare, _Allocator >::equal_range
       (const key_type & __x) [inline]
       Definition at line 512 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> std::pair< const_iterator,
       const_iterator > std::__debug::multiset< _Key, _Compare, _Allocator
       >::equal_range (const key_type & __x) const [inline]
       Definition at line 523 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> _Base_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::erase
       (_Base_const_iterator __position) [inline]
       Definition at line 339 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> size_type std::__debug::multiset<
       _Key, _Compare, _Allocator >::erase (const key_type & __x) [inline]
       Definition at line 356 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> _GLIBCXX_ABI_TAG_CXX11 iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::erase
       (const_iterator __first, const_iterator __last) [inline]
       Definition at line 374 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> _GLIBCXX_ABI_TAG_CXX11 iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::erase
       (const_iterator __position) [inline]
       Definition at line 332 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> node_type std::__debug::multiset<
       _Key, _Compare, _Allocator >::extract (const key_type & __key) [inline]
       Definition at line 307 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> node_type std::__debug::multiset<
       _Key, _Compare, _Allocator >::extract (const_iterator __position)
       [inline]
       Definition at line 299 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::find (const _Kt &
       __x) [inline]
       Definition at line 446 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type>
       const_iterator std::__debug::multiset< _Key, _Compare, _Allocator
       >::find (const _Kt & __x) const [inline]
       Definition at line 453 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::find (const key_type & __x) [inline]
       Definition at line 432 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::find (const
       key_type & __x) const [inline]
       Definition at line 438 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _InputIterator >
       void std::__debug::multiset< _Key, _Compare, _Allocator >::insert
       (_InputIterator __first, _InputIterator __last) [inline]
       Definition at line 277 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (const value_type & __x) [inline]
       Definition at line 250 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (const_iterator __hint, node_type
       && __nh) [inline]
       Definition at line 320 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (const_iterator __position, const
       value_type & __x) [inline]
       Definition at line 260 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (const_iterator __position,
       value_type && __x) [inline]
       Definition at line 268 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> void std::__debug::multiset< _Key,
       _Compare, _Allocator >::insert (initializer_list< value_type > __l)
       [inline]
       Definition at line 291 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (node_type && __nh) [inline]
       Definition at line 316 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::insert (value_type && __x) [inline]
       Definition at line 255 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::lower_bound
       (const _Kt & __x) [inline]
       Definition at line 474 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type>
       const_iterator std::__debug::multiset< _Key, _Compare, _Allocator
       >::lower_bound (const _Kt & __x) const [inline]
       Definition at line 481 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::lower_bound (const key_type & __x)
       [inline]
       Definition at line 460 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::lower_bound
       (const key_type & __x) const [inline]
       Definition at line 466 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> multiset & std::__debug::multiset<
       _Key, _Compare, _Allocator >::operator= (initializer_list< value_type >
       __l) [inline]
       Definition at line 163 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::rbegin () const
       [inline],  [noexcept]
       Definition at line 195 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::rbegin ()
       [inline],  [noexcept]
       Definition at line 191 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::rend () const
       [inline],  [noexcept]
       Definition at line 203 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> reverse_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::rend () [inline],
       [noexcept]
       Definition at line 199 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> void std::__debug::multiset< _Key,
       _Compare, _Allocator >::swap (multiset< _Key, _Compare, _Allocator > &
       __x) [inline],  [noexcept]
       Definition at line 412 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::upper_bound
       (const _Kt & __x) [inline]
       Definition at line 500 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _Kt , typename
       _Req  = typename __has_is_transparent<_Compare, _Kt>::type>
       const_iterator std::__debug::multiset< _Key, _Compare, _Allocator
       >::upper_bound (const _Kt & __x) const [inline]
       Definition at line 507 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> iterator std::__debug::multiset<
       _Key, _Compare, _Allocator >::upper_bound (const key_type & __x)
       [inline]
       Definition at line 486 of file set.

   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> const_iterator
       std::__debug::multiset< _Key, _Compare, _Allocator >::upper_bound
       (const key_type & __x) const [inline]
       Definition at line 492 of file set.

Friends And Related Function Documentation
   template<typename _Key , typename _Compare  = std::less<_Key>, typename
       _Allocator  = std::allocator<_Key>> template<typename _ItT , typename
       _SeqT , typename _CatT > friend class ::__gnu_debug::_Safe_iterator
       [friend]
       Definition at line 59 of file set.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++              std::__debug::multiset< _Key, _Compare, _Allocator >(3)
