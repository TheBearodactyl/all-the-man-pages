__gnu_cxx::new_allocator< _Tp >(3)                                                       Library Functions Manual                                                       __gnu_cxx::new_allocator< _Tp >(3)

NAME
       __gnu_cxx::new_allocator< _Tp > - An allocator that uses global new, as per C++03 [20.4.1].

SYNOPSIS
       #include <new_allocator.h>

       Inherits std::__new_allocator< _Tp >.

   Public Types
       typedef std::ptrdiff_t difference_type
       typedef std::true_type propagate_on_container_move_assignment
       typedef std::size_t size_type
       typedef _Tp value_type

   Public Member Functions
       new_allocator (const new_allocator &) noexcept
       template<typename _Tp1 > new_allocator (const new_allocator< _Tp1 > &) noexcept
       _Tp * allocate (size_type __n, const void *=static_cast< const void * >(0))
       void deallocate (_Tp *__p, size_type __n)

Detailed Description
   template<typename _Tp>
       class __gnu_cxx::new_allocator< _Tp >"An allocator that uses global new, as per C++03 [20.4.1].

       This is precisely the allocator defined in the C++ Standard.

       • all allocation calls operator new

       • all deallocation calls operator delete

       Template Parameters
           _Tp Type of allocated object.

       Definition at line 49 of file ext/new_allocator.h.

Member Typedef Documentation
   template<typename _Tp > typedef std::ptrdiff_t std::__new_allocator< _Tp >::difference_type [inherited]
       Definition at line 61 of file bits/new_allocator.h.

   template<typename _Tp > typedef std::true_type std::__new_allocator< _Tp >::propagate_on_container_move_assignment [inherited]
       Definition at line 76 of file bits/new_allocator.h.

   template<typename _Tp > typedef std::size_t std::__new_allocator< _Tp >::size_type [inherited]
       Definition at line 60 of file bits/new_allocator.h.

   template<typename _Tp > typedef _Tp std::__new_allocator< _Tp >::value_type [inherited]
       Definition at line 59 of file bits/new_allocator.h.

Constructor & Destructor Documentation
   template<typename _Tp > __gnu_cxx::new_allocator< _Tp >::new_allocator () [inline],  [noexcept]
       Definition at line 58 of file ext/new_allocator.h.

   template<typename _Tp > __gnu_cxx::new_allocator< _Tp >::new_allocator (const new_allocator< _Tp > &) [inline],  [noexcept]
       Definition at line 60 of file ext/new_allocator.h.

   template<typename _Tp > template<typename _Tp1 > __gnu_cxx::new_allocator< _Tp >::new_allocator (const new_allocator< _Tp1 > &) [inline],  [noexcept]
       Definition at line 63 of file ext/new_allocator.h.

Member Function Documentation
   template<typename _Tp > _Tp * std::__new_allocator< _Tp >::allocate (size_type __n, const void * = static_cast<const void*>(0)) [inline],  [inherited]
       Definition at line 112 of file bits/new_allocator.h.

   template<typename _Tp > void std::__new_allocator< _Tp >::deallocate (_Tp * __p, size_type __n) [inline],  [inherited]
       Definition at line 142 of file bits/new_allocator.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                                            __gnu_cxx::new_allocator< _Tp >(3)
