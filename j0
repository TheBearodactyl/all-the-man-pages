j0(3)                                                                                    Library Functions Manual                                                                                    j0(3)

NAME
       j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl - Bessel functions of the first kind

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double j0(double x);
       double j1(double x);
       double jn(int n, double x);

       float j0f(float x);
       float j1f(float x);
       float jnf(int n, float x);

       long double j0l(long double x);
       long double j1l(long double x);
       long double jnl(int n, long double x);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       j0(), j1(), jn():
           _XOPEN_SOURCE
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE

       j0f(), j0l(), j1f(), j1l(), jnf(), jnl():
           _XOPEN_SOURCE >= 600
               || (_ISOC99_SOURCE && _XOPEN_SOURCE)
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE

DESCRIPTION
       The j0() and j1() functions return Bessel functions of x of the first kind of orders 0 and 1, respectively.  The jn() function returns the Bessel function of x of the first kind of order n.

       The j0f(), j1f(), and jnf(), functions are versions that take and return float values.  The j0l(), j1l(), and jnl() functions are versions that take and return long double values.

RETURN VALUE
       On success, these functions return the appropriate Bessel value of the first kind for x.

       If x is a NaN, a NaN is returned.

       If x is too large in magnitude, or the result underflows, a range error occurs, and the return value is 0.

ERRORS
       See math_error(7) for information on how to determine whether an error has occurred when calling these functions.

       The following errors can occur:

       Range error: result underflow, or x is too large in magnitude
              errno is set to ERANGE.

       These functions do not raise exceptions for fetestexcept(3).

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │j0(), j0f(), j0l()                                                                                                                                                      │ Thread safety │ MT-Safe │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │j1(), j1f(), j1l()                                                                                                                                                      │ Thread safety │ MT-Safe │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │jn(), jnf(), jnl()                                                                                                                                                      │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       j0()
       j1()
       jn()   POSIX.1-2008.

       Others:
              BSD.

HISTORY
       j0()
       j1()
       jn()   SVr4, 4.3BSD, POSIX.1-2001, POSIX.1-2008.

       Others:
              BSD.

BUGS
       There are errors of up to 2e-16 in the values returned by j0(), j1(), and jn() for values of x between -8 and 8.

SEE ALSO
       y0(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                           j0(3)
J0(3P)                                                                                   POSIX Programmer's Manual                                                                                  J0(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       j0, j1, jn — Bessel functions of the first kind

SYNOPSIS
       #include <math.h>

       double j0(double x);
       double j1(double x);
       double jn(int n, double x);

DESCRIPTION
       The j0(), j1(), and jn() functions shall compute Bessel functions of x of the first kind of orders 0, 1, and n, respectively.

       An application wishing to check for error situations should set errno to zero and call feclearexcept(FE_ALL_EXCEPT) before calling these functions. On return, if errno is  non-zero  or  fetestex‐
       cept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW) is non-zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return the relevant Bessel value of x of the first kind.

       If the x argument is too large in magnitude, or the correct result would cause underflow, 0 shall be returned and a range error may occur.

       If x is NaN, a NaN shall be returned.

ERRORS
       These functions may fail if:

       Range Error The value of x was too large in magnitude, or an underflow occurred.

                   If the integer expression (math_errhandling & MATH_ERRNO) is non-zero, then errno shall be set to [ERANGE].  If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
                   then the underflow floating-point exception shall be raised.

       No other errors shall occur.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling & MATH_ERREXCEPT) are independent of each other, but at least one of them must be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept(), fetestexcept(), isnan(), y0()

       The Base Definitions volume of POSIX.1‐2017, Section 4.20, Treatment of Error Conditions for Mathematical Functions, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                             J0(3P)
