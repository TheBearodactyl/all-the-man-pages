__gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >(3)                     Library Functions Manual                     __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >(3)

NAME
       __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >

SYNOPSIS
       Inherits std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >.

   Public Types
       template<typename _Iter > using __same_value_type = is_same< value_type, typename iterator_traits< _Iter >::value_type >
       typedef std::_Rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc > _Base
       template<typename _Compare2 > using _Compatible_tree = _Rb_tree< _Key, _Val, _KeyOfValue, _Compare2, _Alloc >
       typedef _Base::allocator_type allocator_type
       typedef _Rb_tree_const_iterator< value_type > const_iterator
       typedef const value_type * const_pointer
       typedef const value_type & const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef ptrdiff_t difference_type
       using insert_return_type = _Node_insert_return< __conditional_t< is_same_v< _Key, _Val >, const_iterator, iterator >, node_type >
       typedef _Rb_tree_iterator< value_type > iterator
       typedef _Key key_type
       using node_type = _Node_handle< _Key, _Val, _Node_allocator >
       typedef value_type * pointer
       typedef value_type & reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef size_t size_type
       typedef _Val value_type

   Public Member Functions
       rb_tree (const _Compare &__comp=_Compare(), const allocator_type &__a=allocator_type())
       bool __rb_verify () const
       template<typename _Iterator > void _M_assign_equal (_Iterator, _Iterator)
       template<typename _Iterator > void _M_assign_unique (_Iterator, _Iterator)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> size_type _M_count_tr (const _Kt &__k) const
       template<typename... _Args> iterator _M_emplace_equal (_Args &&... __args)
       template<typename... _Args> auto _M_emplace_equal (_Args &&... __args) -> iterator
       template<typename... _Args> iterator _M_emplace_hint_equal (const_iterator __pos, _Args &&... __args)
       template<typename... _Args> auto _M_emplace_hint_equal (const_iterator __pos, _Args &&... __args) -> iterator
       template<typename... _Args> iterator _M_emplace_hint_unique (const_iterator __pos, _Args &&... __args)
       template<typename... _Args> auto _M_emplace_hint_unique (const_iterator __pos, _Args &&... __args) -> iterator
       template<typename... _Args> pair< iterator, bool > _M_emplace_unique (_Args &&... __args)
       template<typename... _Args> auto _M_emplace_unique (_Args &&... __args) -> pair< iterator, bool >
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> pair< iterator, iterator > _M_equal_range_tr (const _Kt &__k)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> pair< const_iterator, const_iterator > _M_equal_range_tr (const _Kt &__k) const
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> iterator _M_find_tr (const _Kt &__k)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> const_iterator _M_find_tr (const _Kt &__k) const
       pair< _Base_ptr, _Base_ptr > _M_get_insert_equal_pos (const key_type &__k)
       pair< _Base_ptr, _Base_ptr > _M_get_insert_hint_equal_pos (const_iterator __pos, const key_type &__k)
       pair< _Base_ptr, _Base_ptr > _M_get_insert_hint_unique_pos (const_iterator __pos, const key_type &__k)
       pair< _Base_ptr, _Base_ptr > _M_get_insert_unique_pos (const key_type &__k)
       const _Node_allocator & _M_get_Node_allocator () const noexcept
       _Node_allocator & _M_get_Node_allocator () noexcept
       template<typename _Arg > iterator _M_insert_equal (_Arg &&__x)
       template<typename _Arg > iterator _M_insert_equal_ (const_iterator __pos, _Arg &&__x)
       template<typename _Arg , typename _NodeGen > iterator _M_insert_equal_ (const_iterator __pos, _Arg &&__x, _NodeGen &)
       template<typename _InputIterator > __enable_if_t< __same_value_type< _InputIterator >::value > _M_insert_range_equal (_InputIterator __first, _InputIterator __last)
       template<typename _InputIterator > __enable_if_t<!__same_value_type< _InputIterator >::value > _M_insert_range_equal (_InputIterator __first, _InputIterator __last)
       template<typename _InputIterator > __enable_if_t< __same_value_type< _InputIterator >::value > _M_insert_range_unique (_InputIterator __first, _InputIterator __last)
       template<typename _InputIterator > __enable_if_t<!__same_value_type< _InputIterator >::value > _M_insert_range_unique (_InputIterator __first, _InputIterator __last)
       template<typename _Arg > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::iterator, bool > _M_insert_unique (_Arg &&__v)
       template<typename _Arg > pair< iterator, bool > _M_insert_unique (_Arg &&__x)
       template<typename _Arg > iterator _M_insert_unique_ (const_iterator __pos, _Arg &&__x)
       template<typename _Arg , typename _NodeGen > iterator _M_insert_unique_ (const_iterator __pos, _Arg &&__x, _NodeGen &)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> iterator _M_lower_bound_tr (const _Kt &__k)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> const_iterator _M_lower_bound_tr (const _Kt &__k) const
       template<typename _Compare2 > void _M_merge_equal (_Compatible_tree< _Compare2 > &__src) noexcept
           Merge from a compatible container into one with equivalent keys.
       template<typename _Compare2 > void _M_merge_unique (_Compatible_tree< _Compare2 > &__src) noexcept
           Merge from a compatible container into one with unique keys.
       iterator _M_reinsert_node_equal (node_type &&__nh)
           Re-insert an extracted node.
       iterator _M_reinsert_node_hint_equal (const_iterator __hint, node_type &&__nh)
           Re-insert an extracted node.
       iterator _M_reinsert_node_hint_unique (const_iterator __hint, node_type &&__nh)
           Re-insert an extracted node.
       insert_return_type _M_reinsert_node_unique (node_type &&__nh)
           Re-insert an extracted node.
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> iterator _M_upper_bound_tr (const _Kt &__k)
       template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>> const_iterator _M_upper_bound_tr (const _Kt &__k) const
       const_iterator begin () const noexcept
       iterator begin () noexcept
       void clear () noexcept
       size_type count (const key_type &__k) const
       bool empty () const noexcept
       const_iterator end () const noexcept
       iterator end () noexcept
       pair< iterator, iterator > equal_range (const key_type &__k)
       pair< const_iterator, const_iterator > equal_range (const key_type &__k) const
       size_type erase (const key_type &__x)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (const_iterator __first, const_iterator __last)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (const_iterator __position)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (iterator __position)
       node_type extract (const key_type &__k)
           Extract a node.
       node_type extract (const_iterator __pos)
           Extract a node.
       iterator find (const key_type &__k)
       const_iterator find (const key_type &__k) const
       allocator_type get_allocator () const noexcept
       _Compare key_comp () const
       iterator lower_bound (const key_type &__k)
       const_iterator lower_bound (const key_type &__k) const
       size_type max_size () const noexcept
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       size_type size () const noexcept
       void swap (_Rb_tree &__t) noexcept(/*conditional */)
       iterator upper_bound (const key_type &__k)
       const_iterator upper_bound (const key_type &__k) const

   Protected Types
       typedef _Rb_tree_node_base * _Base_ptr
       typedef const _Rb_tree_node_base * _Const_Base_ptr
       typedef const _Rb_tree_node< _Val > * _Const_Link_type
       typedef _Rb_tree_node< _Val > * _Link_type

   Protected Member Functions
       _Const_Link_type _M_begin () const noexcept
       _Link_type _M_begin () noexcept
       template<bool _MoveValue, typename _NodeGen > _Link_type _M_clone_node (_Link_type __x, _NodeGen &__node_gen)
       template<typename... _Args> void _M_construct_node (_Link_type __node, _Args &&... __args)
       template<typename... _Args> _Link_type _M_create_node (_Args &&... __args)
       void _M_destroy_node (_Link_type __p) noexcept
       void _M_drop_node (_Link_type __p) noexcept
       _Const_Base_ptr _M_end () const noexcept
       _Base_ptr _M_end () noexcept
       _Link_type _M_get_node ()
       _Const_Base_ptr _M_leftmost () const noexcept
       _Base_ptr & _M_leftmost () noexcept
       _Link_type _M_mbegin () const noexcept
       void _M_put_node (_Link_type __p) noexcept
       _Const_Base_ptr _M_rightmost () const noexcept
       _Base_ptr & _M_rightmost () noexcept
       _Const_Base_ptr _M_root () const noexcept
       _Base_ptr & _M_root () noexcept

   Static Protected Member Functions
       static const _Key & _S_key (_Const_Base_ptr __x)
       static const _Key & _S_key (_Const_Link_type __x)
       static _Link_type _S_left (_Base_ptr __x) noexcept
       static _Const_Link_type _S_left (_Const_Base_ptr __x) noexcept
       static _Base_ptr _S_maximum (_Base_ptr __x) noexcept
       static _Const_Base_ptr _S_maximum (_Const_Base_ptr __x) noexcept
       static _Base_ptr _S_minimum (_Base_ptr __x) noexcept
       static _Const_Base_ptr _S_minimum (_Const_Base_ptr __x) noexcept
       static _Link_type _S_right (_Base_ptr __x) noexcept
       static _Const_Link_type _S_right (_Const_Base_ptr __x) noexcept

   Protected Attributes
       _Rb_tree_impl< _Compare > _M_impl

Detailed Description
   template<class _Key, class _Value, class _KeyOfValue, class _Compare, class _Alloc = std::allocator<_Value>>
       struct __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >"This is an SGI extension.

       Todo
           Needs documentation! See http://gcc.gnu.org/onlinedocs/libstdc++/manual/documentation_style.html

       Definition at line 77 of file rb_tree.

Member Typedef Documentation
   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Iter > using std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::__same_value_type =  is_same<value_type, typename iterator_traits<_Iter>::value_type> [inherited]
       Definition at line 1093 of file stl_tree.h.

   template<class _Key , class _Value , class _KeyOfValue , class _Compare , class _Alloc  = std::allocator<_Value>> typedef std::_Rb_tree<_Key, _Value, _KeyOfValue, _Compare, _Alloc>
       __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >::_Base
       Definition at line 80 of file rb_tree.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Rb_tree_node_base* std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_Base_ptr [protected],  [inherited]
       Definition at line 433 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Compare2 > using std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_Compatible_tree =  _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc> [inherited]
       Definition at line 1552 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef const _Rb_tree_node_base* std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_Const_Base_ptr [protected],  [inherited]
       Definition at line 434 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef const _Rb_tree_node<_Val>* std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_Const_Link_type [protected],  [inherited]
       Definition at line 436 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Rb_tree_node<_Val>* std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_Link_type [protected],  [inherited]
       Definition at line 435 of file stl_tree.h.

   template<class _Key , class _Value , class _KeyOfValue , class _Compare , class _Alloc  = std::allocator<_Value>> typedef _Base::allocator_type __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue,
       _Compare, _Alloc >::allocator_type
       Definition at line 81 of file rb_tree.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Rb_tree_const_iterator<value_type> std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::const_iterator [inherited]
       Definition at line 816 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef const value_type* std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::const_pointer [inherited]
       Definition at line 539 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef const value_type& std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::const_reference [inherited]
       Definition at line 541 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef std::reverse_iterator<const_iterator> std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::const_reverse_iterator [inherited]
       Definition at line 819 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef ptrdiff_t std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::difference_type [inherited]
       Definition at line 543 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> using std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::insert_return_type =  _Node_insert_return< __conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>, node_type> [inherited]
       Definition at line 823 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Rb_tree_iterator<value_type> std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::iterator [inherited]
       Definition at line 815 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Key std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::key_type [inherited]
       Definition at line 536 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> using std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::node_type =
       _Node_handle<_Key, _Val, _Node_allocator> [inherited]
       Definition at line 822 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef value_type* std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::pointer [inherited]
       Definition at line 538 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef value_type& std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::reference [inherited]
       Definition at line 540 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef std::reverse_iterator<iterator> std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::reverse_iterator [inherited]
       Definition at line 818 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef size_t std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::size_type [inherited]
       Definition at line 542 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> typedef _Val std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::value_type [inherited]
       Definition at line 537 of file stl_tree.h.

Constructor & Destructor Documentation
   template<class _Key , class _Value , class _KeyOfValue , class _Compare , class _Alloc  = std::allocator<_Value>> __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >::rb_tree (const
       _Compare & __comp = _Compare(), const allocator_type & __a = allocator_type()) [inline]
       Definition at line 83 of file rb_tree.

   template<class _Key , class _Value , class _KeyOfValue , class _Compare , class _Alloc  = std::allocator<_Value>> __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >::~rb_tree ()
       [inline]
       Definition at line 87 of file rb_tree.

Member Function Documentation
   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > bool std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::__rb_verify [inherited]
       Definition at line 2568 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > template<typename _Iterator > void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_assign_equal (_Iterator __first, _Iterator __last) [inherited]
       Definition at line 1764 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > template<typename _Iterator > void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_assign_unique (_Iterator __first, _Iterator __last) [inherited]
       Definition at line 1751 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Const_Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_begin () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 742 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_begin
       () [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 738 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<bool _MoveValue, typename _NodeGen > _Link_type std::_Rb_tree< _Key,
       _Val, _KeyOfValue, _Compare, _Alloc >::_M_clone_node (_Link_type __x, _NodeGen & __node_gen) [inline],  [protected],  [inherited]
       Definition at line 637 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> void std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_construct_node (_Link_type __node, _Args &&... __args) [inline],  [protected],  [inherited]
       Definition at line 590 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       size_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_count_tr (const _Kt & __k) const [inline],  [inherited]
       Definition at line 1314 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_create_node (_Args &&... __args) [inline],  [protected],  [inherited]
       Definition at line 609 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_destroy_node (_Link_type __p) [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 618 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_drop_node
       (_Link_type __p) [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 629 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> auto std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_emplace_equal (_Args &&... __args) -> iterator
              [inherited]"

       Definition at line 2444 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> auto std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_emplace_hint_equal (const_iterator __pos, _Args &&... __args) -> iterator
              [inherited]"

       Definition at line 2472 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> auto std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_emplace_hint_unique (const_iterator __pos, _Args &&... __args) -> iterator
              [inherited]"

       Definition at line 2457 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename... _Args> auto std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_emplace_unique (_Args &&... __args) -> pair<iterator, bool>
              [inherited]"

       Definition at line 2429 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_end () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 753 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_end ()
       [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 749 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       pair< iterator, iterator > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_equal_range_tr (const _Kt & __k) [inline],  [inherited]
       Definition at line 1377 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       pair< const_iterator, const_iterator > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_equal_range_tr (const _Kt & __k) const [inline],  [inherited]
       Definition at line 1387 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_find_tr (const _Kt & __k) [inline],  [inherited]
       Definition at line 1294 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_find_tr (const _Kt & __k) const [inline],  [inherited]
       Definition at line 1303 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_get_insert_equal_pos (const key_type & __k) [inherited]
       Definition at line 2139 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_get_insert_hint_equal_pos (const_iterator __pos, const key_type &
       __k) [inherited]
       Definition at line 2295 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_get_insert_hint_unique_pos (const_iterator __pos, const key_type
       & __k) [inherited]
       Definition at line 2209 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_Base_ptr > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_get_insert_unique_pos (const key_type & __k) [inherited]
       Definition at line 2107 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_get_node () [inline],  [protected],  [inherited]
       Definition at line 560 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const _Node_allocator & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_M_get_Node_allocator () const [inline],  [noexcept],  [inherited]
       Definition at line 551 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Node_allocator & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_get_Node_allocator () [inline],  [noexcept],  [inherited]
       Definition at line 547 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > template<typename _Arg > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::iterator
       std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_equal (_Arg && __x) [inherited]
       Definition at line 2189 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Arg > iterator std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_insert_equal_ (const_iterator __pos, _Arg && __x) [inline],  [inherited]
       Definition at line 1070 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > template<typename _Arg , typename _NodeGen > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_equal_ (const_iterator __pos, _Arg && __x, _NodeGen & __node_gen) [inherited]
       Definition at line 2352 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _InputIterator > __enable_if_t< __same_value_type<
       _InputIterator >::value > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_range_equal (_InputIterator __first, _InputIterator __last) [inline],  [inherited]
       Definition at line 1115 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _InputIterator > __enable_if_t<!__same_value_type<
       _InputIterator >::value > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_range_equal (_InputIterator __first, _InputIterator __last) [inline],  [inherited]
       Definition at line 1124 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _InputIterator > __enable_if_t< __same_value_type<
       _InputIterator >::value > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_range_unique (_InputIterator __first, _InputIterator __last) [inline],  [inherited]
       Definition at line 1098 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _InputIterator > __enable_if_t<!__same_value_type<
       _InputIterator >::value > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_range_unique (_InputIterator __first, _InputIterator __last) [inline],  [inherited]
       Definition at line 1107 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Arg > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::iterator, bool > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_unique (_Arg && __v) [inherited]
       Definition at line 2161 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Arg > iterator std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_insert_unique_ (const_iterator __pos, _Arg && __x) [inline],  [inherited]
       Definition at line 1058 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > template<typename _Arg , typename _NodeGen > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_insert_unique_ (const_iterator __pos, _Arg && __x, _NodeGen & __node_gen) [inherited]
       Definition at line 2270 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_leftmost () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 722 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Base_ptr & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_leftmost () [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 718 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_lower_bound_tr (const _Kt & __k) [inline],  [inherited]
       Definition at line 1323 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_lower_bound_tr (const _Kt & __k) const [inline],  [inherited]
       Definition at line 1332 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_mbegin () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 734 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Compare2 > void std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_merge_equal (_Compatible_tree< _Compare2 > & __src) [inline],  [noexcept],  [inherited]
       Merge from a compatible container into one with equivalent keys.

       Definition at line 1583 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Compare2 > void std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::_M_merge_unique (_Compatible_tree< _Compare2 > & __src) [inline],  [noexcept],  [inherited]
       Merge from a compatible container into one with unique keys.

       Definition at line 1561 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_put_node
       (_Link_type __p) [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 564 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_reinsert_node_equal (node_type && __nh) [inline],  [inherited]
       Re-insert an extracted node.

       Definition at line 1470 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_reinsert_node_hint_equal (const_iterator __hint, node_type && __nh) [inline],  [inherited]
       Re-insert an extracted node.

       Definition at line 1512 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_reinsert_node_hint_unique (const_iterator __hint, node_type && __nh) [inline],  [inherited]
       Re-insert an extracted node.

       Definition at line 1490 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> insert_return_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_reinsert_node_unique (node_type && __nh) [inline],  [inherited]
       Re-insert an extracted node.

       Definition at line 1441 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_rightmost () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 730 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Base_ptr & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_rightmost () [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 726 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_M_root () const [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 714 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Base_ptr & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_root
       () [inline],  [protected],  [noexcept],  [inherited]
       Definition at line 710 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_upper_bound_tr (const _Kt & __k) [inline],  [inherited]
       Definition at line 1350 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> template<typename _Kt , typename _Req  = __has_is_transparent_t<_Compare, _Kt>>
       const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::_M_upper_bound_tr (const _Kt & __k) const [inline],  [inherited]
       Definition at line 1359 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static const _Key & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_key (_Const_Base_ptr __x) [inline],  [static],  [protected],  [inherited]
       Definition at line 795 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static const _Key & std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_key (_Const_Link_type __x) [inline],  [static],  [protected],  [inherited]
       Definition at line 757 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_left (_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 779 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Const_Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_S_left (_Const_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 783 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_maximum (_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 807 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_maximum (_Const_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 811 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_minimum (_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 799 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Const_Base_ptr std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_minimum (_Const_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 803 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::_S_right (_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 787 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> static _Const_Link_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_S_right (_Const_Base_ptr __x) [inline],  [static],  [protected],  [noexcept],  [inherited]
       Definition at line 791 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::begin () const [inline],  [noexcept],  [inherited]
       Definition at line 999 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::begin ()
       [inline],  [noexcept],  [inherited]
       Definition at line 995 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::clear ()
       [inline],  [noexcept],  [inherited]
       Definition at line 1252 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::size_type std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::count (const key_type & __k) const [inherited]
       Definition at line 2553 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> bool std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::empty () const
       [inline],  [noexcept],  [inherited]
       Definition at line 1027 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::end
       () const [inline],  [noexcept],  [inherited]
       Definition at line 1007 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::end ()
       [inline],  [noexcept],  [inherited]
       Definition at line 1003 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::iterator, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::iterator > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::equal_range (const key_type & __k) [inherited]
       Definition at line 2012 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > pair< typename _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::const_iterator, typename
       _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::const_iterator > std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::equal_range (const key_type & __k) const [inherited]
       Definition at line 2044 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::size_type std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::erase (const key_type & __x) [inherited]
       Definition at line 2515 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _GLIBCXX_ABI_TAG_CXX11 iterator std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::erase (const_iterator __first, const_iterator __last) [inline],  [inherited]
       Definition at line 1236 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _GLIBCXX_ABI_TAG_CXX11 iterator std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::erase (const_iterator __position) [inline],  [inherited]
       Definition at line 1192 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _GLIBCXX_ABI_TAG_CXX11 iterator std::_Rb_tree< _Key, _Val, _KeyOfValue,
       _Compare, _Alloc >::erase (iterator __position) [inline],  [inherited]
       Definition at line 1204 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> node_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::extract
       (const key_type & __k) [inline],  [inherited]
       Extract a node.

       Definition at line 1542 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> node_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::extract
       (const_iterator __pos) [inline],  [inherited]
       Extract a node.

       Definition at line 1532 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::iterator std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::find (const key_type & __k) [inherited]
       Definition at line 2528 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > _Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::const_iterator std::_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc >::find (const key_type & __k) const [inherited]
       Definition at line 2541 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> allocator_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::get_allocator () const [inline],  [noexcept],  [inherited]
       Definition at line 555 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Compare std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::key_comp
       () const [inline],  [inherited]
       Definition at line 991 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::lower_bound (const key_type & __k) [inline],  [inherited]
       Definition at line 1269 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::lower_bound (const key_type & __k) const [inline],  [inherited]
       Definition at line 1273 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> size_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::max_size
       () const [inline],  [noexcept],  [inherited]
       Definition at line 1035 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_reverse_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::rbegin () const [inline],  [noexcept],  [inherited]
       Definition at line 1015 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> reverse_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::rbegin () [inline],  [noexcept],  [inherited]
       Definition at line 1011 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_reverse_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::rend () const [inline],  [noexcept],  [inherited]
       Definition at line 1023 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> reverse_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::rend () [inline],  [noexcept],  [inherited]
       Definition at line 1019 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> size_type std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::size ()
       const [inline],  [noexcept],  [inherited]
       Definition at line 1031 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc > void std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc >::swap (_Rb_tree< _Key, _Val,
       _KeyOfValue, _Compare, _Alloc > & __t) [noexcept],  [inherited]
       Definition at line 2073 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::upper_bound (const key_type & __k) [inline],  [inherited]
       Definition at line 1277 of file stl_tree.h.

   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> const_iterator std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare, _Alloc
       >::upper_bound (const key_type & __k) const [inline],  [inherited]
       Definition at line 1281 of file stl_tree.h.

Member Data Documentation
   template<typename _Key , typename _Val , typename _KeyOfValue , typename _Compare , typename _Alloc  = allocator<_Val>> _Rb_tree_impl<_Compare> std::_Rb_tree< _Key, _Val, _KeyOfValue, _Compare,
       _Alloc >::_M_impl [protected],  [inherited]
       Definition at line 706 of file stl_tree.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                          __gnu_cxx::rb_tree< _Key, _Value, _KeyOfValue, _Compare, _Alloc >(3)
