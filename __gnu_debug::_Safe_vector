__gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >(3)                             Library Functions Manual                             __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >(3)

NAME
       __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence > - Base class for Debug Mode vector.

SYNOPSIS
       Inherited by std::__debug::vector< _Tp, _Allocator >.

   Protected Member Functions
       _Safe_vector (_Safe_vector &&__x) noexcept
       _Safe_vector (const _Safe_vector &) noexcept
       _Safe_vector (size_type __n) noexcept
       bool _M_requires_reallocation (size_type __elements) const noexcept
       void _M_update_guaranteed_capacity () noexcept
       _Safe_vector & operator= (_Safe_vector &&__x) noexcept
       _Safe_vector & operator= (const _Safe_vector &) noexcept

   Protected Attributes
       size_type _M_guaranteed_capacity

Detailed Description
   template<typename _SafeSequence, typename _BaseSequence>
       class __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >"Base class for Debug Mode vector.

       Adds information about the guaranteed capacity, which is useful for detecting code which relies on non-portable implementation details of the libstdc++ reallocation policy.

       Definition at line 54 of file debug/vector.

Constructor & Destructor Documentation
   template<typename _SafeSequence , typename _BaseSequence > __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_Safe_vector () [inline],  [protected],  [noexcept]
       Definition at line 62 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_Safe_vector (const _Safe_vector< _SafeSequence, _BaseSequence > &) [inline],
       [protected],  [noexcept]
       Definition at line 66 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_Safe_vector (size_type __n) [inline],  [protected],  [noexcept]
       Definition at line 70 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_Safe_vector (_Safe_vector< _SafeSequence, _BaseSequence > && __x) [inline],
       [protected],  [noexcept]
       Definition at line 82 of file debug/vector.

Member Function Documentation
   template<typename _SafeSequence , typename _BaseSequence > bool __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_M_requires_reallocation (size_type __elements) const [inline],
       [protected],  [noexcept]
       Definition at line 98 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > void __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_M_update_guaranteed_capacity () [inline],  [protected],  [noexcept]
       Definition at line 102 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > _Safe_vector & __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::operator= (_Safe_vector< _SafeSequence, _BaseSequence > && __x)
       [inline],  [protected],  [noexcept]
       Definition at line 87 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > _Safe_vector & __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::operator= (const _Safe_vector< _SafeSequence, _BaseSequence > &)
       [inline],  [protected],  [noexcept]
       Definition at line 75 of file debug/vector.

Member Data Documentation
   template<typename _SafeSequence , typename _BaseSequence > size_type __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >::_M_guaranteed_capacity [protected]
       Definition at line 95 of file debug/vector.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                  __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >(3)
