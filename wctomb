wctomb(3)                                                                                Library Functions Manual                                                                                wctomb(3)

NAME
       wctomb - convert a wide character to a multibyte sequence

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdlib.h>

       int wctomb(char *s, wchar_t wc);

DESCRIPTION
       If s is not NULL, the wctomb() function converts the wide character wc to its multibyte representation and stores it at the beginning of the character array pointed to by s.  It updates the shift
       state, which is stored in a static anonymous variable known only to the wctomb() function, and returns the length of said multibyte representation, that is, the number of bytes written at s.

       The programmer must ensure that there is room for at least MB_CUR_MAX bytes at s.

       If s is NULL, the wctomb() function resets the shift state, known only to this function, to the initial state, and returns nonzero if the encoding has nontrivial shift state, or zero if  the  en‐
       coding is stateless.

RETURN VALUE
       If  s is not NULL, the wctomb() function returns the number of bytes that have been written to the byte array at s.  If wc can not be represented as a multibyte sequence (according to the current
       locale), -1 is returned.

       If s is NULL, the wctomb() function returns nonzero if the encoding has nontrivial shift state, or zero if the encoding is stateless.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────────┐
       │Interface                                                                                                                                                        │ Attribute     │ Value          │
       ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────────┤
       │wctomb()                                                                                                                                                         │ Thread safety │ MT-Unsafe race │
       └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────────┘

VERSIONS
       The function wcrtomb(3) provides a better interface to the same functionality.

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of wctomb() depends on the LC_CTYPE category of the current locale.

SEE ALSO
       MB_CUR_MAX(3), mblen(3), mbstowcs(3), mbtowc(3), wcrtomb(3), wcstombs(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       wctomb(3)
WCTOMB(3P)                                                                               POSIX Programmer's Manual                                                                              WCTOMB(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       wctomb — convert a wide-character code to a character

SYNOPSIS
       #include <stdlib.h>

       int wctomb(char *s, wchar_t wchar);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The  wctomb()  function  shall  determine  the  number  of bytes needed to represent the character corresponding to the wide-character code whose value is wchar (including any change in the shift
       state). It shall store the character representation (possibly multiple bytes and any special bytes to change shift state) in the array object pointed to by s (if s is not a null pointer). At most
       {MB_CUR_MAX} bytes shall be stored. If wchar is 0, a null byte shall be stored, preceded by any shift sequence needed to restore the initial shift state, and wctomb() shall be left in the initial
       shift state.

       The behavior of this function is affected by the LC_CTYPE category of the current locale. For a state-dependent encoding, this function shall be placed into its initial state by a call for  which
       its character pointer argument, s, is a null pointer. Subsequent calls with s as other than a null pointer shall cause the internal state of the function to be altered as necessary. A call with s
       as a null pointer shall cause this function to return a non-zero value if encodings have state dependency, and 0 otherwise. Changing the LC_CTYPE category causes the shift state of this  function
       to be unspecified.

       The wctomb() function need not be thread-safe.

       The implementation shall behave as if no function defined in this volume of POSIX.1‐2017 calls wctomb().

RETURN VALUE
       If  s is a null pointer, wctomb() shall return a non-zero or 0 value, if character encodings, respectively, do or do not have state-dependent encodings. If s is not a null pointer, wctomb() shall
       return -1 if the value of wchar does not correspond to a valid character, or return the number of bytes that constitute the character corresponding to the value of wchar.

       In no case shall the value returned be greater than the value of the {MB_CUR_MAX} macro.

ERRORS
       The wctomb() function shall fail if:

       EILSEQ An invalid wide-character code is detected.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mblen(), mbtowc(), mbstowcs(), wcstombs()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         WCTOMB(3P)
