std::filesystem(3)         Library Functions Manual         std::filesystem(3)

NAME
       std::filesystem - ISO C++ 2017 namespace for File System library.

SYNOPSIS
   Classes
       struct __directory_iterator_proxy
           Proxy returned by post-increment on directory iterators.
       class directory_entry
           The value type used by directory iterators.
       class directory_iterator
           Iterator type for traversing the entries in a single directory.
       class file_status
           Information about a file's type and permissions.
       class filesystem_error
           Exception type thrown by the Filesystem library.
       class path
           A filesystem path.
       class recursive_directory_iterator
           Iterator type for recursively traversing a directory hierarchy.
       struct space_info
           Information about free space on a disk.

   Typedefs
       using file_time_type = __file_clock::time_point
           The type used for file timestamps.

   Enumerations
       enum class copy_options : unsigned short { none, skip_existing,
           overwrite_existing, update_existing, recursive, copy_symlinks,
           skip_symlinks, directories_only, create_symlinks, create_hard_links
           }
           Bitmask type controlling effects of filesystem::copy
       enum class directory_options : unsigned char { none,
           follow_directory_symlink, skip_permission_denied }
           Bitmask type controlling directory iteration.
       enum class file_type : signed char { none, not_found, regular,
           directory, symlink, block, character, fifo, socket, unknown }
           Enumerated type representing the type of a file.
       enum class perm_options : unsigned { replace, add, remove, nofollow }
           Bitmask type controlling changes to permissions.
       enum class perms : unsigned { none, owner_read, owner_write,
           owner_exec, owner_all, group_read, group_write, group_exec,
           group_all, others_read, others_write, others_exec, others_all, all,
           set_uid, set_gid, sticky_bit, mask, unknown }
           Bitmask type representing file access permissions.

   Functions
       path absolute (const path &__p)
       path absolute (const path &__p, error_code &__ec)
       path canonical (const path &__p)
       path canonical (const path &__p, error_code &__ec)
       void copy (const path &__from, const path &__to)
       void copy (const path &__from, const path &__to, copy_options
           __options)
       void copy (const path &__from, const path &__to, copy_options
           __options, error_code &)
       void copy (const path &__from, const path &__to, error_code &__ec)
       bool copy_file (const path &__from, const path &__to)
       bool copy_file (const path &__from, const path &__to, copy_options
           __option)
       bool copy_file (const path &__from, const path &__to, copy_options
           __option, error_code &)
       bool copy_file (const path &__from, const path &__to, error_code &__ec)
       void copy_symlink (const path &__existing_symlink, const path
           &__new_symlink)
       void copy_symlink (const path &__existing_symlink, const path
           &__new_symlink, error_code &__ec) noexcept
       bool create_directories (const path &__p)
       bool create_directories (const path &__p, error_code &__ec)
       bool create_directory (const path &__p)
       bool create_directory (const path &__p, const path &attributes)
       bool create_directory (const path &__p, const path &attributes,
           error_code &__ec) noexcept
       bool create_directory (const path &__p, error_code &__ec) noexcept
       void create_directory_symlink (const path &__to, const path
           &__new_symlink)
       void create_directory_symlink (const path &__to, const path
           &__new_symlink, error_code &__ec) noexcept
       void create_hard_link (const path &__to, const path &__new_hard_link)
       void create_hard_link (const path &__to, const path &__new_hard_link,
           error_code &__ec) noexcept
       void create_symlink (const path &__to, const path &__new_symlink)
       void create_symlink (const path &__to, const path &__new_symlink,
           error_code &__ec) noexcept
       path current_path ()
       void current_path (const path &__p)
       void current_path (const path &__p, error_code &__ec) noexcept
       path current_path (error_code &__ec)
       bool equivalent (const path &__p1, const path &__p2)
       bool equivalent (const path &__p1, const path &__p2, error_code &__ec)
           noexcept
       bool exists (const path &__p)
       bool exists (const path &__p, error_code &__ec) noexcept
       bool exists (file_status) noexcept
       uintmax_t file_size (const path &)
       uintmax_t file_size (const path &, error_code &) noexcept
       uintmax_t hard_link_count (const path &)
       uintmax_t hard_link_count (const path &, error_code &) noexcept
       size_t hash_value (const path &__p) noexcept
       bool is_block_file (const path &__p)
       bool is_block_file (const path &__p, error_code &__ec) noexcept
       bool is_block_file (file_status __s) noexcept
       bool is_character_file (const path &__p)
       bool is_character_file (const path &__p, error_code &__ec) noexcept
       bool is_character_file (file_status __s) noexcept
       bool is_directory (const path &__p)
       bool is_directory (const path &__p, error_code &__ec) noexcept
       bool is_directory (file_status __s) noexcept
       bool is_empty (const path &__p)
       bool is_empty (const path &__p, error_code &__ec)
       bool is_fifo (const path &__p)
       bool is_fifo (const path &__p, error_code &__ec) noexcept
       bool is_fifo (file_status __s) noexcept
       bool is_other (const path &__p)
       bool is_other (const path &__p, error_code &__ec) noexcept
       bool is_other (file_status) noexcept
       bool is_regular_file (const path &__p)
       bool is_regular_file (const path &__p, error_code &__ec) noexcept
       bool is_regular_file (file_status) noexcept
       bool is_socket (const path &__p)
       bool is_socket (const path &__p, error_code &__ec) noexcept
       bool is_socket (file_status __s) noexcept
       bool is_symlink (const path &__p)
       bool is_symlink (const path &__p, error_code &__ec) noexcept
       bool is_symlink (file_status) noexcept
       file_time_type last_write_time (const path &)
       file_time_type last_write_time (const path &, error_code &) noexcept
       void last_write_time (const path &__p, file_time_type __new_time)
       void last_write_time (const path &__p, file_time_type __new_time,
           error_code &__ec) noexcept
       copy_options & operator&= (copy_options &__x, copy_options __y)
           noexcept
       constexpr copy_options operator^ (copy_options __x, copy_options __y)
           noexcept
       copy_options & operator^= (copy_options &__x, copy_options __y)
           noexcept
       constexpr copy_options operator| (copy_options __x, copy_options __y)
           noexcept
       copy_options & operator|= (copy_options &__x, copy_options __y)
           noexcept
       constexpr copy_options operator~ (copy_options __x) noexcept
       void permissions (const path &, perms, perm_options, error_code &)
           noexcept
       void permissions (const path &__p, perms __prms, error_code &__ec)
           noexcept
       void permissions (const path &__p, perms __prms, perm_options
           __opts=perm_options::replace)
       path proximate (const path &__p, const path &__base, error_code &__ec)
       path proximate (const path &__p, const path &__base=current_path())
       path proximate (const path &__p, error_code &__ec)
       path read_symlink (const path &__p)
       path read_symlink (const path &__p, error_code &__ec)
       path relative (const path &__p, const path &__base, error_code &__ec)
       path relative (const path &__p, const path &__base=current_path())
       path relative (const path &__p, error_code &__ec)
       bool remove (const path &, error_code &) noexcept
       bool remove (const path &__p)
       uintmax_t remove_all (const path &)
       uintmax_t remove_all (const path &, error_code &)
       void rename (const path &__from, const path &__to)
       void rename (const path &__from, const path &__to, error_code &__ec)
           noexcept
       void resize_file (const path &__p, uintmax_t __size)
       void resize_file (const path &__p, uintmax_t __size, error_code &__ec)
           noexcept
       space_info space (const path &__p)
       space_info space (const path &__p, error_code &__ec) noexcept
       file_status status (const path &)
       file_status status (const path &, error_code &) noexcept
       bool status_known (file_status) noexcept
       file_status symlink_status (const path &)
       file_status symlink_status (const path &, error_code &) noexcept
       path temp_directory_path ()
       path temp_directory_path (error_code &__ec)
       path weakly_canonical (const path &__p)
       path weakly_canonical (const path &__p, error_code &__ec)

           constexpr perms operator| (perms __x, perms __y) noexcept
           constexpr perms operator^ (perms __x, perms __y) noexcept
           constexpr perms operator~ (perms __x) noexcept
           perms & operator&= (perms &__x, perms __y) noexcept
           perms & operator|= (perms &__x, perms __y) noexcept
           perms & operator^= (perms &__x, perms __y) noexcept

           constexpr perm_options operator| (perm_options __x, perm_options
               __y) noexcept
           constexpr perm_options operator^ (perm_options __x, perm_options
               __y) noexcept
           constexpr perm_options operator~ (perm_options __x) noexcept
           perm_options & operator&= (perm_options &__x, perm_options __y)
               noexcept
           perm_options & operator|= (perm_options &__x, perm_options __y)
               noexcept
           perm_options & operator^= (perm_options &__x, perm_options __y)
               noexcept

           constexpr directory_options operator| (directory_options __x,
               directory_options __y) noexcept
           constexpr directory_options operator^ (directory_options __x,
               directory_options __y) noexcept
           constexpr directory_options operator~ (directory_options __x)
               noexcept
           directory_options & operator&= (directory_options &__x,
               directory_options __y) noexcept
           directory_options & operator|= (directory_options &__x,
               directory_options __y) noexcept
           directory_options & operator^= (directory_options &__x,
               directory_options __y) noexcept

Detailed Description
       ISO C++ 2017 namespace for File System library.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023              std::filesystem(3)
