modf(3)                                                                                  Library Functions Manual                                                                                  modf(3)

NAME
       modf, modff, modfl - extract signed integral and fractional values from floating-point number

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double modf(double x, double *iptr);
       float modff(float x, float *iptr);
       long double modfl(long double x, long double *iptr);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       modff(), modfl():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

DESCRIPTION
       These functions break the argument x into an integral part and a fractional part, each of which has the same sign as x.  The integral part is stored in the location pointed to by iptr.

RETURN VALUE
       These functions return the fractional part of x.

       If x is a NaN, a NaN is returned, and *iptr is set to a NaN.

       If x is positive infinity (negative infinity), +0 (-0) is returned, and *iptr is set to positive infinity (negative infinity).

ERRORS
       No errors occur.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │modf(), modff(), modfl()                                                                                                                                                │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       C99, POSIX.1-2001.

       The variant returning double also conforms to SVr4, 4.3BSD, C89.

SEE ALSO
       frexp(3), ldexp(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                         modf(3)
MODF(3P)                                                                                 POSIX Programmer's Manual                                                                                MODF(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       modf, modff, modfl — decompose a floating-point number

SYNOPSIS
       #include <math.h>

       double modf(double x, double *iptr);
       float modff(float value, float *iptr);
       long double modfl(long double value, long double *iptr);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       These  functions shall break the argument x into integral and fractional parts, each of which has the same sign as the argument. It stores the integral part as a double (for the modf() function),
       a float (for the modff() function), or a long double (for the modfl() function), in the object pointed to by iptr.

RETURN VALUE
       Upon successful completion, these functions shall return the signed fractional part of x.

       If x is NaN, a NaN shall be returned, and *iptr shall be set to a NaN.

       If x is ±Inf, ±0 shall be returned, and *iptr shall be set to ±Inf.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       The modf() function computes the function result and *iptr such that:

           a = modf(x, iptr) ;
           x == a+*iptr ;

       allowing for the usual floating-point inaccuracies.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       frexp(), isnan(), ldexp()

       The Base Definitions volume of POSIX.1‐2017, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                           MODF(3P)
