CURLOPT_COOKIEJAR(3)                                                                     curl_easy_setopt options                                                                     CURLOPT_COOKIEJAR(3)

NAME
       CURLOPT_COOKIEJAR - file name to store cookies to

SYNOPSIS
       #include <curl/curl.h>

       CURLcode curl_easy_setopt(CURL *handle, CURLOPT_COOKIEJAR, char *filename);

DESCRIPTION
       Pass  a  filename as char *, null-terminated. This will make libcurl write all internally known cookies to the specified file when curl_easy_cleanup(3) is called. If no cookies are known, no file
       will be created. Specify "-" as filename to instead have the cookies written to stdout. Using this option also enables cookies for this session, so if you for example follow a  location  it  will
       make matching cookies get sent accordingly.

       Note that libcurl does not read any cookies from the cookie jar. If you want to read cookies from a file, use CURLOPT_COOKIEFILE(3).

       If  the cookie jar file cannot be created or written to (when the curl_easy_cleanup(3) is called), libcurl will not and cannot report an error for this. Using CURLOPT_VERBOSE(3) or CURLOPT_DEBUG‚Äê
       FUNCTION(3) will get a warning to display, but that is the only visible feedback you get about this possibly lethal situation.

       Since 7.43.0 cookies that were imported in the Set-Cookie format without a domain name are not exported by this option.

       The application does not have to keep the string around after setting this option.

DEFAULT
       NULL

PROTOCOLS
       HTTP

EXAMPLE
       CURL *curl = curl_easy_init();
       if(curl) {
         curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/foo.bin");

         /* export cookies to this file when closing the handle */
         curl_easy_setopt(curl, CURLOPT_COOKIEJAR, "/tmp/cookies.txt");

         ret = curl_easy_perform(curl);

         /* close the handle, write the cookies! */
         curl_easy_cleanup(curl);
       }

AVAILABILITY
       Along with HTTP

RETURN VALUE
       Returns CURLE_OK if HTTP is supported, CURLE_UNKNOWN_OPTION if not, or CURLE_OUT_OF_MEMORY if there was insufficient heap space.

SEE ALSO
       CURLOPT_COOKIEFILE(3), CURLOPT_COOKIE(3), CURLOPT_COOKIELIST(3),

libcurl 7.37.0                                                                                  17 Jun 2014                                                                           CURLOPT_COOKIEJAR(3)
