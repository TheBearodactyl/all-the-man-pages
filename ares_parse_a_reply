ARES_PARSE_A_REPLY(3)                                                                    Library Functions Manual                                                                    ARES_PARSE_A_REPLY(3)

NAME
       ares_parse_a_reply - Parse a reply to a DNS query of type A

SYNOPSIS
       #include <ares.h>

       int ares_parse_a_reply(const unsigned char *abuf, int alen,
                              struct hostent **host,
                              struct ares_addrttl *addrttls, int *naddrttls);

DESCRIPTION
       The  ares_parse_a_reply function parses the response to a query of type A into a struct hostent and/or an array of struct ares_addrttls.  The parameters abuf and alen give the contents of the re‚Äê
       sponse.  The result is stored in allocated memory and a pointer to it stored into the variable pointed to by host, if host is nonnull.  It is the caller's responsibility  to  free  the  resulting
       host structure using ares_free_hostent(3) when it is no longer needed.

       If  addrttls  and naddrttls are both nonnull, then up to *naddrttls struct ares_addrttl records are stored in the array pointed to by addrttls, and then *naddrttls is set to the number of records
       so stored.  Note that the memory for these records is supplied by the caller.

RETURN VALUES
       ares_parse_a_reply can return any of the following values:

       ARES_SUCCESS   The response was successfully parsed.

       ARES_EBADRESP  The response was malformatted.

       ARES_ENODATA   The response did not contain an answer to the query.

       ARES_ENOMEM    Memory was exhausted.

SEE ALSO
       ares_gethostbyname(3), ares_free_hostent(3)

AUTHOR
       Greg Hudson, MIT Information Systems
       Andrew Selivanov <andrew.selivanov@gmail.com>
       Copyright 1998 by the Massachusetts Institute of Technology.

                                                                                               25 July 1998                                                                          ARES_PARSE_A_REPLY(3)
