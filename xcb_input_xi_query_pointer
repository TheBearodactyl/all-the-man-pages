xcb_input_xi_query_pointer(3)                                                                  XCB Requests                                                                  xcb_input_xi_query_pointer(3)

NAME
       xcb_input_xi_query_pointer -

SYNOPSIS
       #include <xcb/xinput.h>

   Request function
       xcb_input_xi_query_pointer_cookie_t xcb_input_xi_query_pointer(xcb_connection_t *conn, xcb_window_t window, xcb_input_device_id_t deviceid);

   Reply datastructure
       typedef struct xcb_input_xi_query_pointer_reply_t {
           uint8_t                   response_type;
           uint8_t                   pad0;
           uint16_t                  sequence;
           uint32_t                  length;
           xcb_window_t              root;
           xcb_window_t              child;
           xcb_input_fp1616_t        root_x;
           xcb_input_fp1616_t        root_y;
           xcb_input_fp1616_t        win_x;
           xcb_input_fp1616_t        win_y;
           uint8_t                   same_screen;
           uint8_t                   pad1;
           uint16_t                  buttons_len;
           xcb_input_modifier_info_t mods;
           xcb_input_group_info_t    group;
       } xcb_input_xi_query_pointer_reply_t;

   Reply function
       xcb_input_xi_query_pointer_reply_t *xcb_input_xi_query_pointer_reply(xcb_connection_t *conn, xcb_input_xi_query_pointer_cookie_t cookie, xcb_generic_error_t **e);

   Reply accessors
       uint32_t *xcb_input_xi_query_pointer_buttons(const xcb_input_xi_query_pointer_request_t *reply);

       int xcb_input_xi_query_pointer_buttons_length(const xcb_input_xi_query_pointer_reply_t *reply);

       xcb_generic_iterator_t xcb_input_xi_query_pointer_buttons_end(const xcb_input_xi_query_pointer_reply_t *reply);

REQUEST ARGUMENTS
       conn      The XCB connection to X11.

       window    TODO: NOT YET DOCUMENTED.

       deviceid  TODO: NOT YET DOCUMENTED.

REPLY FIELDS
       response_type
                 The type of this reply, in this case XCB_INPUT_XI_QUERY_POINTER. This field is also present in the xcb_generic_reply_t and can be used to tell replies apart from each other.

       sequence  The sequence number of the last request processed by the X11 server.

       length    The length of the reply, in words (a word is 4 bytes).

       root      TODO: NOT YET DOCUMENTED.

       child     TODO: NOT YET DOCUMENTED.

       root_x    TODO: NOT YET DOCUMENTED.

       root_y    TODO: NOT YET DOCUMENTED.

       win_x     TODO: NOT YET DOCUMENTED.

       win_y     TODO: NOT YET DOCUMENTED.

       same_screen
                 TODO: NOT YET DOCUMENTED.

       buttons_len
                 TODO: NOT YET DOCUMENTED.

       mods      TODO: NOT YET DOCUMENTED.

       group     TODO: NOT YET DOCUMENTED.

DESCRIPTION
RETURN VALUE
       Returns an xcb_input_xi_query_pointer_cookie_t. Errors have to be handled when calling the reply function xcb_input_xi_query_pointer_reply.

       If you want to handle errors in the event loop instead, use xcb_input_xi_query_pointer_unchecked. See xcb-requests(3) for details.

ERRORS
       This request does never generate any errors.

SEE ALSO
AUTHOR
       Generated from xinput.xml. Contact xcb@lists.freedesktop.org for corrections and improvements.

X Version 11                                                                                    libxcb 1.15                                                                  xcb_input_xi_query_pointer(3)
