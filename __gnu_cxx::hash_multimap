__gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc >(3)                     Library Functions Manual                     __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc >(3)

NAME
       __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc >

SYNOPSIS
   Public Types
       typedef _Ht::allocator_type allocator_type
       typedef _Ht::const_iterator const_iterator
       typedef _Ht::const_pointer const_pointer
       typedef _Ht::const_reference const_reference
       typedef _Tp data_type
       typedef _Ht::difference_type difference_type
       typedef _Ht::hasher hasher
       typedef _Ht::iterator iterator
       typedef _Ht::key_equal key_equal
       typedef _Ht::key_type key_type
       typedef _Tp mapped_type
       typedef _Ht::pointer pointer
       typedef _Ht::reference reference
       typedef _Ht::size_type size_type
       typedef _Ht::value_type value_type

   Public Member Functions
       template<class _InputIterator > hash_multimap (_InputIterator __f, _InputIterator __l)
       template<class _InputIterator > hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n)
       template<class _InputIterator > hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf)
       template<class _InputIterator > hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
       hash_multimap (size_type __n)
       hash_multimap (size_type __n, const hasher &__hf)
       hash_multimap (size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
       iterator begin ()
       const_iterator begin () const
       size_type bucket_count () const
       void clear ()
       size_type count (const key_type &__key) const
       size_type elems_in_bucket (size_type __n) const
       bool empty () const
       iterator end ()
       const_iterator end () const
       pair< iterator, iterator > equal_range (const key_type &__key)
       pair< const_iterator, const_iterator > equal_range (const key_type &__key) const
       size_type erase (const key_type &__key)
       void erase (iterator __f, iterator __l)
       void erase (iterator __it)
       iterator find (const key_type &__key)
       const_iterator find (const key_type &__key) const
       allocator_type get_allocator () const
       hasher hash_funct () const
       template<class _InputIterator > void insert (_InputIterator __f, _InputIterator __l)
       iterator insert (const value_type &__obj)
       iterator insert_noresize (const value_type &__obj)
       key_equal key_eq () const
       size_type max_bucket_count () const
       size_type max_size () const
       void resize (size_type __hint)
       size_type size () const
       void swap (hash_multimap &__hs)

   Friends
       template<class _K1 , class _T1 , class _HF , class _EqK , class _Al > bool operator== (const hash_multimap< _K1, _T1, _HF, _EqK, _Al > &, const hash_multimap< _K1, _T1, _HF, _EqK, _Al > &)

Detailed Description
   template<class _Key, class _Tp, class _HashFn = hash<_Key>, class _EqualKey = equal_to<_Key>, class _Alloc = allocator<_Tp>>
       class __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc >"This is an SGI extension.

       Todo
           Needs documentation! See http://gcc.gnu.org/onlinedocs/libstdc++/manual/documentation_style.html

       Definition at line 296 of file hash_map.

Member Typedef Documentation
   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::allocator_type __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::allocator_type
       Definition at line 329 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::const_iterator __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::const_iterator
       Definition at line 327 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::const_pointer __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::const_pointer
       Definition at line 322 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::const_reference __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::const_reference
       Definition at line 324 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Tp __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::data_type
       Definition at line 313 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::difference_type __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::difference_type
       Definition at line 320 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::hasher __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::hasher
       Definition at line 316 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::iterator
       Definition at line 326 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::key_equal __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::key_equal
       Definition at line 317 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::key_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::key_type
       Definition at line 312 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Tp __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::mapped_type
       Definition at line 314 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::pointer __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::pointer
       Definition at line 321 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::reference __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::reference
       Definition at line 323 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::size_type
       Definition at line 319 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> typedef _Ht::value_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::value_type
       Definition at line 315 of file hash_map.

Constructor & Destructor Documentation
   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::hash_multimap () [inline]
       Definition at line 343 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::hash_multimap (size_type __n) [inline],  [explicit]
       Definition at line 347 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::hash_multimap (size_type __n, const hasher & __hf) [inline]
       Definition at line 350 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::hash_multimap (size_type __n, const hasher & __hf, const key_equal & __eql, const allocator_type & __a = allocator_type()) [inline]
       Definition at line 353 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> template<class _InputIterator > __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::hash_multimap (_InputIterator __f, _InputIterator __l) [inline]
       Definition at line 358 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> template<class _InputIterator > __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n) [inline]
       Definition at line 363 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> template<class _InputIterator > __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n, const hasher & __hf) [inline]
       Definition at line 368 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> template<class _InputIterator > __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::hash_multimap (_InputIterator __f, _InputIterator __l, size_type __n, const hasher & __hf, const key_equal & __eql, const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 374 of file hash_map.

Member Function Documentation
   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::begin () [inline]
       Definition at line 402 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> const_iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::begin () const [inline]
       Definition at line 410 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::bucket_count () const [inline]
       Definition at line 471 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> void __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::clear () [inline]
       Definition at line 463 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::count (const key_type & __key) const [inline]
       Definition at line 439 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::elems_in_bucket (size_type __n) const [inline]
       Definition at line 479 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> bool __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::empty () const [inline]
       Definition at line 389 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::end () [inline]
       Definition at line 406 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> const_iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::end () const [inline]
       Definition at line 414 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> pair< iterator, iterator > __gnu_cxx::hash_multimap< _Key, _Tp,
       _HashFn, _EqualKey, _Alloc >::equal_range (const key_type & __key) [inline]
       Definition at line 443 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> pair< const_iterator, const_iterator > __gnu_cxx::hash_multimap<
       _Key, _Tp, _HashFn, _EqualKey, _Alloc >::equal_range (const key_type & __key) const [inline]
       Definition at line 447 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::erase (const key_type & __key) [inline]
       Definition at line 451 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> void __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::erase (iterator __f, iterator __l) [inline]
       Definition at line 459 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> void __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::erase (iterator __it) [inline]
       Definition at line 455 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::find (const key_type & __key) [inline]
       Definition at line 431 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> const_iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::find (const key_type & __key) const [inline]
       Definition at line 435 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> allocator_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn,
       _EqualKey, _Alloc >::get_allocator () const [inline]
       Definition at line 340 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> hasher __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::hash_funct () const [inline]
       Definition at line 332 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> template<class _InputIterator > void __gnu_cxx::hash_multimap< _Key,
       _Tp, _HashFn, _EqualKey, _Alloc >::insert (_InputIterator __f, _InputIterator __l) [inline]
       Definition at line 423 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::insert (const value_type & __obj) [inline]
       Definition at line 418 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> iterator __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::insert_noresize (const value_type & __obj) [inline]
       Definition at line 427 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> key_equal __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::key_eq () const [inline]
       Definition at line 336 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::max_bucket_count () const [inline]
       Definition at line 475 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::max_size () const [inline]
       Definition at line 385 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> void __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::resize (size_type __hint) [inline]
       Definition at line 467 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> size_type __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey,
       _Alloc >::size () const [inline]
       Definition at line 381 of file hash_map.

   template<class _Key , class _Tp , class _HashFn  = hash<_Key>, class _EqualKey  = equal_to<_Key>, class _Alloc  = allocator<_Tp>> void __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc
       >::swap (hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc > & __hs) [inline]
       Definition at line 393 of file hash_map.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                          __gnu_cxx::hash_multimap< _Key, _Tp, _HashFn, _EqualKey, _Alloc >(3)
