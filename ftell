fseek(3)                                                                                 Library Functions Manual                                                                                 fseek(3)

NAME
       fgetpos, fseek, fsetpos, ftell, rewind - reposition a stream

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>

       int fseek(FILE *stream, long offset, int whence);
       long ftell(FILE *stream);

       void rewind(FILE *stream);

       int fgetpos(FILE *restrict stream, fpos_t *restrict pos);
       int fsetpos(FILE *stream, const fpos_t *pos);

DESCRIPTION
       The  fseek()  function  sets the file position indicator for the stream pointed to by stream.  The new position, measured in bytes, is obtained by adding offset bytes to the position specified by
       whence.  If whence is set to SEEK_SET, SEEK_CUR, or SEEK_END, the offset is relative to the start of the file, the current position indicator, or end-of-file, respectively.  A successful call  to
       the fseek() function clears the end-of-file indicator for the stream and undoes any effects of the ungetc(3) function on the same stream.

       The ftell() function obtains the current value of the file position indicator for the stream pointed to by stream.

       The rewind() function sets the file position indicator for the stream pointed to by stream to the beginning of the file.  It is equivalent to:

              (void) fseek(stream, 0L, SEEK_SET)

       except that the error indicator for the stream is also cleared (see clearerr(3)).

       The  fgetpos()  and  fsetpos() functions are alternate interfaces equivalent to ftell() and fseek() (with whence set to SEEK_SET), setting and storing the current value of the file offset into or
       from the object referenced by pos.  On some non-UNIX systems, an fpos_t object may be a complex object and these routines may be the only way to portably reposition a text stream.

       If the stream refers to a regular file and the resulting stream offset is beyond the size of the file, subsequent writes will extend the file with a hole, up to the offset, before committing  any
       data.  See lseek(2) for details on file seeking semantics.

RETURN VALUE
       The rewind() function returns no value.  Upon successful completion, fgetpos(), fseek(), fsetpos() return 0, and ftell() returns the current offset.  Otherwise, -1 is returned and errno is set to
       indicate the error.

ERRORS
       EINVAL The whence argument to fseek() was not SEEK_SET, SEEK_END, or SEEK_CUR.  Or: the resulting file offset would be negative.

       ESPIPE The file descriptor underlying stream is not seekable (e.g., it refers to a pipe, FIFO, or socket).

       The functions fgetpos(), fseek(), fsetpos(), and ftell() may also fail and set errno for any of the errors specified for the routines fflush(3), fstat(2), lseek(2), and malloc(3).

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fseek(), ftell(), rewind(), fgetpos(), fsetpos()                                                                                                                        │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C89.

SEE ALSO
       lseek(2), fseeko(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                        fseek(3)
FTELL(3P)                                                                                POSIX Programmer's Manual                                                                               FTELL(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       ftell, ftello — return a file offset in a stream

SYNOPSIS
       #include <stdio.h>

       long ftell(FILE *stream);
       off_t ftello(FILE *stream);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The ftell() function shall obtain the current value of the file-position indicator for the stream pointed to by stream.

       The ftell() function shall not change the setting of errno if successful.

       The ftello() function shall be equivalent to ftell(), except that the return value is of type off_t and the ftello() function may change the setting of errno if successful.

RETURN VALUE
       Upon successful completion, ftell() and ftello() shall return the current value of the file-position indicator for the stream measured in bytes from the beginning of the file.

       Otherwise, ftell() and ftello() shall return -1, and set errno to indicate the error.

ERRORS
       The ftell() and ftello() functions shall fail if:

       EBADF  The file descriptor underlying stream is not an open file descriptor.

       EOVERFLOW
              For ftell(), the current file offset cannot be represented correctly in an object of type long.

       EOVERFLOW
              For ftello(), the current file offset cannot be represented correctly in an object of type off_t.

       ESPIPE The file descriptor underlying stream is associated with a pipe, FIFO, or socket.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5, Standard I/O Streams, fgetpos(), fopen(), fseek(), lseek()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          FTELL(3P)
