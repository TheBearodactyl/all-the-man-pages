fseeko(3)                                                                                Library Functions Manual                                                                                fseeko(3)

NAME
       fseeko, ftello - seek to or report file position

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>

       int fseeko(FILE *stream, off_t offset, int whence);
       off_t ftello(FILE *stream);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       fseeko(), ftello():
           _FILE_OFFSET_BITS == 64 || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       The  fseeko()  and  ftello() functions are identical to fseek(3) and ftell(3) (see fseek(3)), respectively, except that the offset argument of fseeko() and the return value of ftello() is of type
       off_t instead of long.

       On some architectures, both off_t and long are 32-bit types, but defining _FILE_OFFSET_BITS with the value 64 (before including any header files) will turn off_t into a 64-bit type.

RETURN VALUE
       On successful completion, fseeko() returns 0, while ftello() returns the current offset.  Otherwise, -1 is returned and errno is set to indicate the error.

ERRORS
       See the ERRORS in fseek(3).

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fseeko(), ftello()                                                                                                                                                      │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       glibc 2.1.  POSIX.1-2001, SUSv2.

NOTES
       The declarations of these functions can also be obtained by defining the obsolete _LARGEFILE_SOURCE feature test macro.

SEE ALSO
       fseek(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       fseeko(3)
FTELL(3P)                                                                                POSIX Programmer's Manual                                                                               FTELL(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       ftell, ftello — return a file offset in a stream

SYNOPSIS
       #include <stdio.h>

       long ftell(FILE *stream);
       off_t ftello(FILE *stream);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The ftell() function shall obtain the current value of the file-position indicator for the stream pointed to by stream.

       The ftell() function shall not change the setting of errno if successful.

       The ftello() function shall be equivalent to ftell(), except that the return value is of type off_t and the ftello() function may change the setting of errno if successful.

RETURN VALUE
       Upon successful completion, ftell() and ftello() shall return the current value of the file-position indicator for the stream measured in bytes from the beginning of the file.

       Otherwise, ftell() and ftello() shall return -1, and set errno to indicate the error.

ERRORS
       The ftell() and ftello() functions shall fail if:

       EBADF  The file descriptor underlying stream is not an open file descriptor.

       EOVERFLOW
              For ftell(), the current file offset cannot be represented correctly in an object of type long.

       EOVERFLOW
              For ftello(), the current file offset cannot be represented correctly in an object of type off_t.

       ESPIPE The file descriptor underlying stream is associated with a pipe, FIFO, or socket.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5, Standard I/O Streams, fgetpos(), fopen(), fseek(), lseek()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          FTELL(3P)
