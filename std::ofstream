std::basic_ofstream< _CharTLibrarytFustd::basic_ofstream< _CharT, _Traits >(3)

NAME
       std::basic_ofstream< _CharT, _Traits > - Controlling output for files.

SYNOPSIS
       Inherits std::basic_ostream< _CharT, _Traits >.

   Public Types
       typedef ctype< _CharT > __ctype_type
       typedef basic_filebuf< char_type, traits_type > __filebuf_type
       typedef basic_ios< _CharT, _Traits > __ios_type
       typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits > >
           __num_put_type
       typedef basic_ostream< char_type, traits_type > __ostream_type
       typedef basic_streambuf< _CharT, _Traits > __streambuf_type
       typedef _CharT char_type
       enum event { erase_event, imbue_event, copyfmt_event }
           The set of events that may be passed to an event callback.
       typedef void(* event_callback) (event __e, ios_base &__b, int __i)
           The type of an event callback function.
       typedef _Ios_Fmtflags fmtflags
           This is a bitmask type.
       typedef traits_type::int_type int_type
       typedef _Ios_Iostate iostate
           This is a bitmask type.
       typedef traits_type::off_type off_type
       typedef _Ios_Openmode openmode
           This is a bitmask type.
       typedef traits_type::pos_type pos_type
       typedef _Ios_Seekdir seekdir
           This is an enumerated type.
       typedef _Traits traits_type

           typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits > >
               __num_get_type

   Public Member Functions
       basic_ofstream ()
           Default constructor.
       basic_ofstream (basic_ofstream &&__rhs)
       template<typename _Path , typename _Require  = _If_fs_path<_Path>>
           basic_ofstream (const _Path &__s, ios_base::openmode
           __mode=ios_base::out)
           Create an output file stream.
       basic_ofstream (const basic_ofstream &)=delete
       basic_ofstream (const char *__s, ios_base::openmode
           __mode=ios_base::out)
           Create an output file stream.
       basic_ofstream (const std::string &__s, ios_base::openmode
           __mode=ios_base::out)
           Create an output file stream.
       ~basic_ofstream ()
           The destructor does nothing.
       const locale & _M_getloc () const
           Locale access.
       template<typename _ValueT > basic_ostream< _CharT, _Traits > &
           _M_insert (_ValueT __v)
       void _M_setstate (iostate __state)
       bool bad () const
           Fast error checking.
       void clear (iostate __state=goodbit)
           [Re]sets the error state.
       void close ()
           Close the file.
       basic_ios & copyfmt (const basic_ios &__rhs)
           Copies fields of __rhs into this.
       bool eof () const
           Fast error checking.
       iostate exceptions () const
           Throwing exceptions on errors.
       void exceptions (iostate __except)
           Throwing exceptions on errors.
       bool fail () const
           Fast error checking.
       char_type fill () const
           Retrieves the empty character.
       char_type fill (char_type __ch)
           Sets a new empty character.
       fmtflags flags () const
           Access to format flags.
       fmtflags flags (fmtflags __fmtfl)
           Setting new format flags all at once.
       __ostream_type & flush ()
           Synchronizing the stream buffer.
       locale getloc () const
           Locale access.
       bool good () const
           Fast error checking.
       locale imbue (const locale &__loc)
           Moves to a new locale.
       bool is_open ()
           Wrapper to test for an open file.
       bool is_open () const
       long & iword (int __ix)
           Access to integer array.
       char narrow (char_type __c, char __dfault) const
           Squeezes characters.
       template<typename _Path > _If_fs_path< _Path, void > open (const _Path
           &__s, ios_base::openmode __mode=ios_base::out)
           Opens an external file.
       void open (const char *__s, ios_base::openmode __mode=ios_base::out)
           Opens an external file.
       void open (const std::string &__s, ios_base::openmode
           __mode=ios_base::out)
           Opens an external file.
       __ostream_type & operator<< (__streambuf_type *__sb)
           Extracting from another streambuf.
       __ostream_type & operator<< (const void *__p)
           Pointer arithmetic inserters.
       __ostream_type & operator<< (nullptr_t)
       basic_ofstream & operator= (basic_ofstream &&__rhs)
       basic_ofstream & operator= (const basic_ofstream &)=delete
       streamsize precision () const
           Flags access.
       streamsize precision (streamsize __prec)
           Changing flags.
       void *& pword (int __ix)
           Access to void pointer array.
       __filebuf_type * rdbuf () const
           Accessing the underlying buffer.
       basic_streambuf< _CharT, _Traits > * rdbuf (basic_streambuf< _CharT,
           _Traits > *__sb)
           Changing the underlying buffer.
       iostate rdstate () const
           Returns the error state of the stream buffer.
       void register_callback (event_callback __fn, int __index)
           Add the callback __fn with parameter __index.
       __ostream_type & seekp (off_type, ios_base::seekdir)
           Changing the current write position.
       __ostream_type & seekp (pos_type)
           Changing the current write position.
       fmtflags setf (fmtflags __fmtfl)
           Setting new format flags.
       fmtflags setf (fmtflags __fmtfl, fmtflags __mask)
           Setting new format flags.
       void setstate (iostate __state)
           Sets additional flags in the error state.
       void swap (basic_ofstream &__rhs)
       pos_type tellp ()
           Getting the current write position.
       basic_ostream< _CharT, _Traits > * tie () const
           Fetches the current tied stream.
       basic_ostream< _CharT, _Traits > * tie (basic_ostream< _CharT, _Traits
           > *__tiestr)
           Ties this stream to an output stream.
       void unsetf (fmtflags __mask)
           Clearing format flags.
       char_type widen (char __c) const
           Widens characters.
       streamsize width () const
           Flags access.
       streamsize width (streamsize __wide)
           Changing flags.

           __ostream_type & operator<< (__ostream_type &(*__pf)(__ostream_type
               &))
               Interface for manipulators.
           __ostream_type & operator<< (__ios_type &(*__pf)(__ios_type &))
               Interface for manipulators.
           __ostream_type & operator<< (ios_base &(*__pf)(ios_base &))
               Interface for manipulators.

       Inserters
       All the operator<< functions (aka formatted output functions) have some
       common behavior. Each starts by constructing a temporary object of type
       std::basic_ostream::sentry. This can have several effects, concluding
       with the setting of a status flag; see the sentry documentation for
       more.

       If the sentry status is good, the function tries to generate whatever
       data is appropriate for the type of the argument.

       If an exception is thrown during insertion, ios_base::badbit will be
       turned on in the stream's error state without causing an
       ios_base::failure to be thrown. The original exception will then be
       rethrown.

           __ostream_type & operator<< (long __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (unsigned long __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (bool __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (short __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (unsigned short __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (int __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (unsigned int __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (long long __n)
               Integer arithmetic inserters.
           __ostream_type & operator<< (unsigned long long __n)
               Integer arithmetic inserters.

           __ostream_type & operator<< (double __f)
               Floating point arithmetic inserters.
           __ostream_type & operator<< (float __f)
               Floating point arithmetic inserters.
           __ostream_type & operator<< (long double __f)
               Floating point arithmetic inserters.

       Unformatted Output Functions
       All the unformatted output functions have some common behavior. Each
       starts by constructing a temporary object of type
       std::basic_ostream::sentry. This has several effects, concluding with
       the setting of a status flag; see the sentry documentation for more.

       If the sentry status is good, the function tries to generate whatever
       data is appropriate for the type of the argument.

       If an exception is thrown during insertion, ios_base::badbit will be
       turned on in the stream's error state. If badbit is on in the stream's
       exceptions mask, the exception will be rethrown without completing its
       actions.

           __ostream_type & put (char_type __c)
               Simple insertion.
           __ostream_type & write (const char_type *__s, streamsize __n)
               Character string insertion.

           operator bool () const
               The quick-and-easy status check.
           bool operator! () const
               The quick-and-easy status check.

   Static Public Member Functions
       static bool sync_with_stdio (bool __sync=true)
           Interaction with the standard C I/O objects.
       static int xalloc ()  throw ()
           Access to unique indices.

   Static Public Attributes
       static const openmode __noreplace
       static const fmtflags adjustfield
           A mask of left|right|internal. Useful for the 2-arg form of setf.
       static const openmode app
           Seek to end before each write.
       static const openmode ate
           Open and seek to end immediately after opening.
       static const iostate badbit
           Indicates a loss of integrity in an input or output sequence (such
           as an irrecoverable read error from a file).
       static const fmtflags basefield
           A mask of dec|oct|hex. Useful for the 2-arg form of setf.
       static const seekdir beg
           Request a seek relative to the beginning of the stream.
       static const openmode binary
           Perform input and output in binary mode (as opposed to text mode).
           This is probably not what you think it is; see
           https://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary.
       static const fmtflags boolalpha
           Insert/extract bool in alphabetic rather than numeric format.
       static const seekdir cur
           Request a seek relative to the current position within the
           sequence.
       static const fmtflags dec
           Converts integer input or generates integer output in decimal base.
       static const seekdir end
           Request a seek relative to the current end of the sequence.
       static const iostate eofbit
           Indicates that an input operation reached the end of an input
           sequence.
       static const iostate failbit
           Indicates that an input operation failed to read the expected
           characters, or that an output operation failed to generate the
           desired characters.
       static const fmtflags fixed
           Generate floating-point output in fixed-point notation.
       static const fmtflags floatfield
           A mask of scientific|fixed. Useful for the 2-arg form of setf.
       static const iostate goodbit
           Indicates all is well.
       static const fmtflags hex
           Converts integer input or generates integer output in hexadecimal
           base.
       static const openmode in
           Open for input. Default for ifstream and fstream.
       static const fmtflags internal
           Adds fill characters at a designated internal point in certain
           generated output, or identical to right if no such point is
           designated.
       static const fmtflags left
           Adds fill characters on the right (final positions) of certain
           generated output. (I.e., the thing you print is flush left.)
       static const fmtflags oct
           Converts integer input or generates integer output in octal base.
       static const openmode out
           Open for output. Default for ofstream and fstream.
       static const fmtflags right
           Adds fill characters on the left (initial positions) of certain
           generated output. (I.e., the thing you print is flush right.)
       static const fmtflags scientific
           Generates floating-point output in scientific notation.
       static const fmtflags showbase
           Generates a prefix indicating the numeric base of generated integer
           output.
       static const fmtflags showpoint
           Generates a decimal-point character unconditionally in generated
           floating-point output.
       static const fmtflags showpos
           Generates a + sign in non-negative generated numeric output.
       static const fmtflags skipws
           Skips leading white space before certain input operations.
       static const openmode trunc
           Truncate an existing stream when opening. Default for ofstream.
       static const fmtflags unitbuf
           Flushes output after each output operation.
       static const fmtflags uppercase
           Replaces certain lowercase letters with their uppercase equivalents
           in generated output.

   Protected Types
       enum { _S_local_word_size }

   Protected Member Functions
       void _M_cache_locale (const locale &__loc)
       void _M_call_callbacks (event __ev)  throw ()
       void _M_dispose_callbacks (void)  throw ()
       _Words & _M_grow_words (int __index, bool __iword)
       void _M_init ()  throw ()
       template<typename _ValueT > __ostream_type & _M_insert (_ValueT __v)
       void _M_move (ios_base &) noexcept
       void _M_swap (ios_base &__rhs) noexcept
       void init (basic_streambuf< _CharT, _Traits > *__sb)
           All setup is performed here.
       void move (basic_ios &&__rhs)
       void move (basic_ios &__rhs)
       void set_rdbuf (basic_streambuf< _CharT, _Traits > *__sb)
       void swap (basic_ios &__rhs) noexcept
       void swap (basic_ostream &__rhs)

   Protected Attributes
       _Callback_list * _M_callbacks
       const __ctype_type * _M_ctype
       iostate _M_exception
       char_type _M_fill
       bool _M_fill_init
       fmtflags _M_flags
       locale _M_ios_locale
       _Words _M_local_word [_S_local_word_size]
       const __num_get_type * _M_num_get
       const __num_put_type * _M_num_put
       streamsize _M_precision
       basic_streambuf< _CharT, _Traits > * _M_streambuf
       iostate _M_streambuf_state
       basic_ostream< _CharT, _Traits > * _M_tie
       streamsize _M_width
       _Words * _M_word
       int _M_word_size
       _Words _M_word_zero

Detailed Description
   template<typename _CharT, typename _Traits>
       class std::basic_ofstream< _CharT, _Traits >"Controlling output for
       files.

       Template Parameters
           _CharT Type of character stream.
           _Traits Traits for character type, defaults to char_traits<_CharT>.

       This class supports reading from named files, using the inherited
       functions from std::basic_ostream. To control the associated sequence,
       an instance of std::basic_filebuf is used, which this page refers to as
       sb.

       Definition at line 758 of file fstream.

Member Typedef Documentation
   template<typename _CharT , typename _Traits > typedef ctype<_CharT>
       std::basic_ostream< _CharT, _Traits >::__ctype_type [inherited]
       Definition at line 74 of file ostream.

   template<typename _CharT , typename _Traits > typedef
       basic_filebuf<char_type, traits_type> std::basic_ofstream< _CharT,
       _Traits >::__filebuf_type
       Definition at line 769 of file fstream.

   template<typename _CharT , typename _Traits > typedef basic_ios<_CharT,
       _Traits> std::basic_ostream< _CharT, _Traits >::__ios_type [inherited]
       Definition at line 70 of file ostream.

   template<typename _CharT , typename _Traits > typedef num_get<_CharT,
       istreambuf_iterator<_CharT, _Traits> > std::basic_ios< _CharT, _Traits
       >::__num_get_type [inherited]
       These are non-standard types.

       Definition at line 91 of file basic_ios.h.

   template<typename _CharT , typename _Traits > typedef num_put<_CharT,
       ostreambuf_iterator<_CharT, _Traits> > std::basic_ostream< _CharT,
       _Traits >::__num_put_type [inherited]
       Definition at line 73 of file ostream.

   template<typename _CharT , typename _Traits > typedef
       basic_ostream<char_type, traits_type> std::basic_ofstream< _CharT,
       _Traits >::__ostream_type
       Definition at line 770 of file fstream.

   template<typename _CharT , typename _Traits > typedef
       basic_streambuf<_CharT, _Traits> std::basic_ostream< _CharT, _Traits
       >::__streambuf_type [inherited]
       Definition at line 69 of file ostream.

   template<typename _CharT , typename _Traits > typedef _CharT
       std::basic_ofstream< _CharT, _Traits >::char_type
       Definition at line 762 of file fstream.

   typedef void(* std::ios_base::event_callback) (event __e, ios_base &__b,
       int __i) [inherited]
       The type of an event callback function.

       Parameters
           __e One of the members of the event enum.
           __b Reference to the ios_base object.
           __i The integer provided when the callback was registered.

       Event callbacks are user defined functions that get called during
       several ios_base and basic_ios functions, specifically imbue(),
       copyfmt(), and ~ios().

       Definition at line 538 of file ios_base.h.

   typedef _Ios_Fmtflags std::ios_base::fmtflags [inherited]
       This is a bitmask type. _Ios_Fmtflags is implementation-defined, but it
       is valid to perform bitwise operations on these values and expect the
       Right Thing to happen. Defined objects of type fmtflags are:

       • boolalpha

       • dec

       • fixed

       • hex

       • internal

       • left

       • oct

       • right

       • scientific

       • showbase

       • showpoint

       • showpos

       • skipws

       • unitbuf

       • uppercase

       • adjustfield

       • basefield

       • floatfield

       Definition at line 342 of file ios_base.h.

   template<typename _CharT , typename _Traits > typedef traits_type::int_type
       std::basic_ofstream< _CharT, _Traits >::int_type
       Definition at line 764 of file fstream.

   typedef _Ios_Iostate std::ios_base::iostate [inherited]
       This is a bitmask type. _Ios_Iostate is implementation-defined, but it
       is valid to perform bitwise operations on these values and expect the
       Right Thing to happen. Defined objects of type iostate are:

       • badbit

       • eofbit

       • failbit

       • goodbit

       Definition at line 417 of file ios_base.h.

   template<typename _CharT , typename _Traits > typedef traits_type::off_type
       std::basic_ofstream< _CharT, _Traits >::off_type
       Definition at line 766 of file fstream.

   typedef _Ios_Openmode std::ios_base::openmode [inherited]
       This is a bitmask type. _Ios_Openmode is implementation-defined, but it
       is valid to perform bitwise operations on these values and expect the
       Right Thing to happen. Defined objects of type openmode are:

       • app

       • ate

       • binary

       • in

       • out

       • trunc

       Definition at line 448 of file ios_base.h.

   template<typename _CharT , typename _Traits > typedef traits_type::pos_type
       std::basic_ofstream< _CharT, _Traits >::pos_type
       Definition at line 765 of file fstream.

   typedef _Ios_Seekdir std::ios_base::seekdir [inherited]
       This is an enumerated type. _Ios_Seekdir is implementation-defined.
       Defined values of type seekdir are:

       • beg

       • cur, equivalent to SEEK_CUR in the C standard library.

       • end, equivalent to SEEK_END in the C standard library.

       Definition at line 488 of file ios_base.h.

   template<typename _CharT , typename _Traits > typedef _Traits
       std::basic_ofstream< _CharT, _Traits >::traits_type
       Definition at line 763 of file fstream.

Member Enumeration Documentation
   anonymous enum [protected],  [inherited]
       Definition at line 613 of file ios_base.h.

   enum std::ios_base::event [inherited]
       The set of events that may be passed to an event callback. erase_event
       is used during ~ios() and copyfmt(). imbue_event is used during
       imbue(). copyfmt_event is used during copyfmt().

       Definition at line 521 of file ios_base.h.

Constructor & Destructor Documentation
   template<typename _CharT , typename _Traits > std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream () [inline]
       Default constructor. Initializes sb using its default constructor, and
       passes &sb to the base class initializer. Does not open any files (you
       haven't given it a filename to open).

       Definition at line 784 of file fstream.

       References std::basic_ios< _CharT, _Traits >::init().

   template<typename _CharT , typename _Traits > std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream (const char * __s, ios_base::openmode __mode
       = ios_base::out) [inline],  [explicit]
       Create an output file stream.

       Parameters
           __s Null terminated string specifying the filename.
           __mode Open file in specified mode (see std::ios_base).

       ios_base::out is automatically included in __mode.

       Definition at line 795 of file fstream.

       References std::basic_ios< _CharT, _Traits >::init(), and
       std::basic_ofstream< _CharT, _Traits >::open().

   template<typename _CharT , typename _Traits > std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream (const std::string & __s, ios_base::openmode
       __mode = ios_base::out) [inline],  [explicit]
       Create an output file stream.

       Parameters
           __s std::string specifying the filename.
           __mode Open file in specified mode (see std::ios_base).

       ios_base::out is automatically included in __mode.

       Definition at line 830 of file fstream.

       References std::basic_ios< _CharT, _Traits >::init(), and
       std::basic_ofstream< _CharT, _Traits >::open().

   template<typename _CharT , typename _Traits > template<typename _Path ,
       typename _Require  = _If_fs_path<_Path>> std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream (const _Path & __s, ios_base::openmode __mode
       = ios_base::out) [inline]
       Create an output file stream.

       Parameters
           __s filesystem::path specifying the filename.
           __mode Open file in specified mode (see std::ios_base).

       ios_base::out is automatically included in __mode.

       Definition at line 847 of file fstream.

   template<typename _CharT , typename _Traits > std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream (basic_ofstream< _CharT, _Traits > && __rhs)
       [inline]
       Definition at line 855 of file fstream.

   template<typename _CharT , typename _Traits > std::basic_ofstream< _CharT,
       _Traits >::~basic_ofstream () [inline]
       The destructor does nothing. The file is closed by the filebuf object,
       not the formatting stream.

       Definition at line 867 of file fstream.

Member Function Documentation
   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::_M_cache_locale (const locale & __loc) [protected],
       [inherited]
       Definition at line 157 of file basic_ios.tcc.

   const locale & std::ios_base::_M_getloc () const [inline],  [inherited]
       Locale access.

       Returns
           A reference to the current locale.

       Like getloc above, but returns a reference instead of generating a
       copy.

       Definition at line 813 of file ios_base.h.

       Referenced by std::money_get< _CharT, _InIter >::do_get(),
       std::time_get< _CharT, _InIter >::do_get(), std::num_get< _CharT,
       _InIter >::do_get(), std::time_get< _CharT, _InIter >::do_get_date(),
       std::time_get< _CharT, _InIter >::do_get_monthname(), std::time_get<
       _CharT, _InIter >::do_get_time(), std::time_get< _CharT, _InIter
       >::do_get_weekday(), std::time_get< _CharT, _InIter >::do_get_year(),
       std::num_put< _CharT, _OutIter >::do_put(), std::time_put< _CharT,
       _OutIter >::do_put(), std::time_get< _CharT, _InIter >::get(), and
       std::time_put< _CharT, _OutIter >::put().

   template<typename _CharT , typename _Traits > template<typename _ValueT >
       basic_ostream< _CharT, _Traits > & std::basic_ostream< _CharT, _Traits
       >::_M_insert (_ValueT __v) [inherited]
       Definition at line 63 of file ostream.tcc.

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::_M_setstate (iostate __state) [inline],  [inherited]
       Definition at line 164 of file basic_ios.h.

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::bad () const [inline],  [inherited]
       Fast error checking.

       Returns
           True if the badbit is set.

       Note that other iostate flags may also be set.

       Definition at line 211 of file basic_ios.h.

       References std::ios_base::badbit, and std::basic_ios< _CharT, _Traits
       >::rdstate().

       Referenced by std::basic_ostream< _CharT, _Traits >::sentry::sentry().

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::clear (iostate __state = goodbit) [inherited]
       [Re]sets the error state.

       Parameters
           __state The new state flag(s) to set.

       See std::ios_base::iostate for the possible bit values. Most users will
       not need to pass an argument.

       Definition at line 41 of file basic_ios.tcc.

       Referenced by std::basic_ios< _CharT, _Traits >::exceptions(),
       std::basic_ifstream< _CharT, _Traits >::open(), std::basic_fstream<
       _CharT, _Traits >::open(), std::basic_ofstream< _CharT, _Traits
       >::open(), std::__detail::operator>>(), std::basic_istream< _CharT,
       _Traits >::putback(), std::basic_istream< _CharT, _Traits >::seekg(),
       std::basic_ios< _CharT, _Traits >::setstate(), and std::basic_istream<
       _CharT, _Traits >::unget().

   template<typename _CharT , typename _Traits > void std::basic_ofstream<
       _CharT, _Traits >::close () [inline]
       Close the file. Calls std::basic_filebuf::close(). If that function
       fails, failbit is set in the stream's error state.

       Definition at line 998 of file fstream.

       References std::basic_filebuf< _CharT, _Traits >::close(),
       std::ios_base::failbit, and std::basic_ios< _CharT, _Traits
       >::setstate().

   template<typename _CharT , typename _Traits > basic_ios< _CharT, _Traits >
       & std::basic_ios< _CharT, _Traits >::copyfmt (const basic_ios< _CharT,
       _Traits > & __rhs) [inherited]
       Copies fields of __rhs into this.

       Parameters
           __rhs The source values for the copies.

       Returns
           Reference to this object.

       All fields of __rhs are copied into this object except that rdbuf() and
       rdstate() remain unchanged. All values in the pword and iword arrays
       are copied. Before copying, each callback is invoked with erase_event.
       After copying, each (new) callback is invoked with copyfmt_event. The
       final step is to copy exceptions().

       Definition at line 63 of file basic_ios.tcc.

       References std::__addressof(), std::basic_ios< _CharT, _Traits
       >::exceptions(), std::basic_ios< _CharT, _Traits >::fill(),
       std::ios_base::flags(), std::ios_base::getloc(),
       std::ios_base::precision(), std::basic_ios< _CharT, _Traits >::tie(),
       std::tie(), and std::ios_base::width().

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::eof () const [inline],  [inherited]
       Fast error checking.

       Returns
           True if the eofbit is set.

       Note that other iostate flags may also be set.

       Definition at line 190 of file basic_ios.h.

       References std::ios_base::eofbit, and std::basic_ios< _CharT, _Traits
       >::rdstate().

   template<typename _CharT , typename _Traits > iostate std::basic_ios<
       _CharT, _Traits >::exceptions () const [inline],  [inherited]
       Throwing exceptions on errors.

       Returns
           The current exceptions mask.

       This changes nothing in the stream. See the one-argument version of
       exceptions(iostate) for the meaning of the return value.

       Definition at line 222 of file basic_ios.h.

       Referenced by std::basic_ios< _CharT, _Traits >::copyfmt().

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::exceptions (iostate __except) [inline],  [inherited]
       Throwing exceptions on errors.

       Parameters
           __except The new exceptions mask.

       By default, error flags are set silently. You can set an exceptions
       mask for each stream; if a bit in the mask becomes set in the error
       flags, then an exception of type std::ios_base::failure is thrown.

       If the error flag is already set when the exceptions mask is added, the
       exception is immediately thrown. Try running the following under GCC
       3.1 or later:

       #include <iostream>
       #include <fstream>
       #include <exception>

       int main()
       {
           std::set_terminate (__gnu_cxx::__verbose_terminate_handler);

           std::ifstream f ("/etc/motd");

           std::cerr << "Setting badbit\n";
           f.setstate (std::ios_base::badbit);

           std::cerr << "Setting exception mask\n";
           f.exceptions (std::ios_base::badbit);
       }

       Definition at line 257 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::clear().

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::fail () const [inline],  [inherited]
       Fast error checking.

       Returns
           True if either the badbit or the failbit is set.

       Checking the badbit in fail() is historical practice. Note that other
       iostate flags may also be set.

       Definition at line 201 of file basic_ios.h.

       References std::ios_base::badbit, std::ios_base::failbit, and
       std::basic_ios< _CharT, _Traits >::rdstate().

       Referenced by std::basic_ios< _CharT, _Traits >::operator bool(),
       std::basic_ios< _CharT, _Traits >::operator!(), std::basic_ostream<
       char, _Traits >::operator<<(), std::basic_istream< _CharT, _Traits
       >::seekg(), std::basic_ostream< _CharT, _Traits >::seekp(),
       std::basic_istream< _CharT, _Traits >::tellg(), and std::basic_ostream<
       _CharT, _Traits >::tellp().

   template<typename _CharT , typename _Traits > char_type std::basic_ios<
       _CharT, _Traits >::fill () const [inline],  [inherited]
       Retrieves the empty character.

       Returns
           The current fill character.

       It defaults to a space (' ') in the current locale.

       Definition at line 370 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::widen().

       Referenced by std::basic_ios< _CharT, _Traits >::copyfmt(), and
       std::basic_ios< _CharT, _Traits >::fill().

   template<typename _CharT , typename _Traits > char_type std::basic_ios<
       _CharT, _Traits >::fill (char_type __ch) [inline],  [inherited]
       Sets a new empty character.

       Parameters
           __ch The new character.

       Returns
           The previous fill character.

       The fill character is used to fill out space when P+ characters have
       been requested (e.g., via setw), Q characters are actually used, and
       Q<P. It defaults to a space (' ') in the current locale.

       Definition at line 390 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::fill().

   fmtflags std::ios_base::flags () const [inline],  [inherited]
       Access to format flags.

       Returns
           The format control flags for both input and output.

       Definition at line 658 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::~sentry(),
       std::basic_ios< _CharT, _Traits >::copyfmt(), std::num_get< _CharT,
       _InIter >::do_get(), std::num_put< _CharT, _OutIter >::do_put(),
       std::operator<<(), std::operator>>(), and std::__detail::operator>>().

   fmtflags std::ios_base::flags (fmtflags __fmtfl) [inline],  [inherited]
       Setting new format flags all at once.

       Parameters
           __fmtfl The new flags to set.

       Returns
           The previous format control flags.

       This function overwrites all the format flags with __fmtfl.

       Definition at line 669 of file ios_base.h.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::flush [inherited]
       Synchronizing the stream buffer.

       Returns
           *this

       If rdbuf() is a null pointer, changes nothing.

       Otherwise, calls rdbuf()->pubsync(), and if that returns -1, sets
       badbit.

       Definition at line 216 of file ostream.tcc.

       References std::ios_base::badbit, std::ios_base::goodbit,
       std::basic_ios< _CharT, _Traits >::rdbuf(), and std::basic_ios< _CharT,
       _Traits >::setstate().

       Referenced by std::flush().

   locale std::ios_base::getloc () const [inline],  [inherited]
       Locale access.

       Returns
           A copy of the current locale.

       If imbue(loc) has previously been called, then this function returns
       loc. Otherwise, it returns a copy of std::locale(), the global C++
       locale.

       Definition at line 802 of file ios_base.h.

       Referenced by std::basic_ios< _CharT, _Traits >::copyfmt(),
       std::money_put< _CharT, _OutIter >::do_put(), std::operator>>(), and
       std::ws().

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::good () const [inline],  [inherited]
       Fast error checking.

       Returns
           True if no error flags are set.

       A wrapper around rdstate.

       Definition at line 180 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::rdstate().

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::sentry(), and
       std::__detail::operator>>().

   template<typename _CharT , typename _Traits > locale std::basic_ios<
       _CharT, _Traits >::imbue (const locale & __loc) [inherited]
       Moves to a new locale.

       Parameters
           __loc The new locale.

       Returns
           The previous locale.

       Calls ios_base::imbue(loc), and if a stream buffer is associated with
       this stream, calls that buffer's pubimbue(loc).

       Additional l10n notes are at
       http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html

       Definition at line 114 of file basic_ios.tcc.

       References std::ios_base::imbue().

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::init (basic_streambuf< _CharT, _Traits > * __sb)
       [protected],  [inherited]
       All setup is performed here. This is called from the public
       constructor. It is not virtual and cannot be redefined.

       Definition at line 126 of file basic_ios.tcc.

       Referenced by std::basic_fstream< _CharT, _Traits >::basic_fstream(),
       std::basic_ifstream< _CharT, _Traits >::basic_ifstream(),
       std::basic_ios< _CharT, _Traits >::basic_ios(), std::basic_istream<
       _CharT, _Traits >::basic_istream(), std::basic_istringstream< _CharT,
       _Traits, _Alloc >::basic_istringstream(), std::basic_ofstream< _CharT,
       _Traits >::basic_ofstream(), std::basic_ostream< _CharT, _Traits
       >::basic_ostream(), std::basic_ostringstream< _CharT, _Traits, _Alloc
       >::basic_ostringstream(), and std::basic_stringstream< _CharT, _Traits,
       _Alloc >::basic_stringstream().

   template<typename _CharT , typename _Traits > bool std::basic_ofstream<
       _CharT, _Traits >::is_open () [inline]
       Wrapper to test for an open file.

       Returns
           rdbuf()->is_open()

       Definition at line 908 of file fstream.

       References std::basic_filebuf< _CharT, _Traits >::is_open().

   template<typename _CharT , typename _Traits > bool std::basic_ofstream<
       _CharT, _Traits >::is_open () const [inline]
       Definition at line 914 of file fstream.

   long & std::ios_base::iword (int __ix) [inline],  [inherited]
       Access to integer array.

       Parameters
           __ix Index into the array.

       Returns
           A reference to an integer associated with the index.

       The iword function provides access to an array of integers that can be
       used for any purpose. The array grows as required to hold the supplied
       index. All integers in the array are initialized to 0.

       The implementation reserves several indices. You should use xalloc to
       obtain an index that is safe to use. Also note that since the array can
       grow dynamically, it is not safe to hold onto the reference.

       Definition at line 848 of file ios_base.h.

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::move (basic_ios< _CharT, _Traits > && __rhs) [inline],
       [protected],  [inherited]
       Definition at line 490 of file basic_ios.h.

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::move (basic_ios< _CharT, _Traits > & __rhs) [inline],
       [protected],  [inherited]
       Definition at line 479 of file basic_ios.h.

   template<typename _CharT , typename _Traits > char std::basic_ios< _CharT,
       _Traits >::narrow (char_type __c, char __dfault) const [inline],
       [inherited]
       Squeezes characters.

       Parameters
           __c The character to narrow.
           __dfault The character to narrow.

       Returns
           The narrowed character.

       Maps a character of char_type to a character of char, if possible.

       Returns the result of

       std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)

       Additional l10n notes are at
       http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html

       Definition at line 430 of file basic_ios.h.

   template<typename _CharT , typename _Traits > template<typename _Path >
       _If_fs_path< _Path, void > std::basic_ofstream< _CharT, _Traits >::open
       (const _Path & __s, ios_base::openmode __mode = ios_base::out) [inline]
       Opens an external file.

       Parameters
           __s The name of the file, as a filesystem::path.
           __mode The open mode flags.

       Calls std::basic_filebuf::open(__s,__mode|out). If that function fails,
       failbit is set in the stream's error state.

       Definition at line 986 of file fstream.

       References std::basic_ofstream< _CharT, _Traits >::open().

   template<typename _CharT , typename _Traits > void std::basic_ofstream<
       _CharT, _Traits >::open (const char * __s, ios_base::openmode __mode =
       ios_base::out) [inline]
       Opens an external file.

       Parameters
           __s The name of the file.
           __mode The open mode flags.

       Calls std::basic_filebuf::open(__s,__mode|out). If that function fails,
       failbit is set in the stream's error state.

       Definition at line 926 of file fstream.

       References std::basic_ios< _CharT, _Traits >::clear(),
       std::ios_base::failbit, std::basic_filebuf< _CharT, _Traits >::open(),
       std::ios_base::out, and std::basic_ios< _CharT, _Traits >::setstate().

       Referenced by std::basic_ofstream< _CharT, _Traits >::basic_ofstream(),
       and std::basic_ofstream< _CharT, _Traits >::open().

   template<typename _CharT , typename _Traits > void std::basic_ofstream<
       _CharT, _Traits >::open (const std::string & __s, ios_base::openmode
       __mode = ios_base::out) [inline]
       Opens an external file.

       Parameters
           __s The name of the file.
           __mode The open mode flags.

       Calls std::basic_filebuf::open(s,mode|out). If that function fails,
       failbit is set in the stream's error state.

       Definition at line 965 of file fstream.

       References std::basic_ios< _CharT, _Traits >::clear(),
       std::ios_base::failbit, std::basic_filebuf< _CharT, _Traits >::open(),
       std::ios_base::out, and std::basic_ios< _CharT, _Traits >::setstate().

   template<typename _CharT , typename _Traits > std::basic_ios< _CharT,
       _Traits >::operator bool () const [inline],  [explicit],  [inherited]
       The quick-and-easy status check. This allows you to write constructs
       such as if (!a_stream) ... and while (a_stream) ...

       Definition at line 117 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::fail().

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::operator! () const [inline],  [inherited]
       The quick-and-easy status check. This allows you to write constructs
       such as if (!a_stream) ... and while (a_stream) ...

       Definition at line 125 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::fail().

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (__ios_type
       &(*)(__ios_type &) __pf) [inline],  [inherited]
       Interface for manipulators. Manipulators such as std::endl and std::hex
       use these functions in constructs like 'std::cout << std::endl'. For
       more information, see the iomanip header.

       Definition at line 116 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (__ostream_type
       &(*)(__ostream_type &) __pf) [inline],  [inherited]
       Interface for manipulators. Manipulators such as std::endl and std::hex
       use these functions in constructs like 'std::cout << std::endl'. For
       more information, see the iomanip header.

       Definition at line 107 of file ostream.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::operator<<
       (__streambuf_type * __sb) [inherited]
       Extracting from another streambuf.

       Parameters
           __sb A pointer to a streambuf

       This function behaves like one of the basic arithmetic extractors, in
       that it also constructs a sentry object and has the same error handling
       behavior.

       If __sb is NULL, the stream will set failbit in its error state.

       Characters are extracted from __sb and inserted into *this until one of
       the following occurs:

       • the input stream reaches end-of-file,

       • insertion into the output sequence fails (in this case, the character
         that would have been inserted is not extracted), or

       • an exception occurs while getting a character from __sb, which sets
         failbit in the error state

       If the function inserts no characters, failbit is set.

       Definition at line 63 of file ostream.tcc.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (bool __n) [inline],
       [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 173 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (const void * __p)
       [inline],  [inherited]
       Pointer arithmetic inserters.

       Parameters
           __p A variable of pointer type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 244 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (double __f)
       [inline],  [inherited]
       Floating point arithmetic inserters.

       Parameters
           __f A variable of builtin floating point type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 219 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (float __f) [inline],
       [inherited]
       Floating point arithmetic inserters.

       Parameters
           __f A variable of builtin floating point type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 223 of file ostream.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::operator<< (int __n)
       [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 63 of file ostream.tcc.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (ios_base
       &(*)(ios_base &) __pf) [inline],  [inherited]
       Interface for manipulators. Manipulators such as std::endl and std::hex
       use these functions in constructs like 'std::cout << std::endl'. For
       more information, see the iomanip header.

       Definition at line 126 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (long __n) [inline],
       [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 165 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (long double __f)
       [inline],  [inherited]
       Floating point arithmetic inserters.

       Parameters
           __f A variable of builtin floating point type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 231 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (long long __n)
       [inline],  [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 200 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (nullptr_t) [inline],
       [inherited]
       Definition at line 249 of file ostream.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::operator<< (short
       __n) [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 63 of file ostream.tcc.

       References std::ios_base::badbit, std::ios_base::goodbit, std::num_put<
       _CharT, _OutIter >::put(), and std::basic_ios< _CharT, _Traits
       >::setstate().

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (unsigned int __n)
       [inline],  [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 191 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (unsigned long __n)
       [inline],  [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 169 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (unsigned long long
       __n) [inline],  [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 204 of file ostream.

   template<typename _CharT , typename _Traits > __ostream_type &
       std::basic_ostream< _CharT, _Traits >::operator<< (unsigned short __n)
       [inline],  [inherited]
       Integer arithmetic inserters.

       Parameters
           __n A variable of builtin integral type.

       Returns
           *this if successful

       These functions use the stream's current locale (specifically, the
       num_get facet) to perform numeric formatting.

       Definition at line 180 of file ostream.

   template<typename _CharT , typename _Traits > basic_ofstream &
       std::basic_ofstream< _CharT, _Traits >::operator= (basic_ofstream<
       _CharT, _Traits > && __rhs) [inline]
       Definition at line 877 of file fstream.

   streamsize std::ios_base::precision () const [inline],  [inherited]
       Flags access.

       Returns
           The precision to generate on certain output operations.

       Be careful if you try to give a definition of precision here; see DR
       189.

       Definition at line 728 of file ios_base.h.

       Referenced by std::basic_ios< _CharT, _Traits >::copyfmt().

   streamsize std::ios_base::precision (streamsize __prec) [inline],
       [inherited]
       Changing flags.

       Parameters
           __prec The new precision value.

       Returns
           The previous value of precision().

       Definition at line 737 of file ios_base.h.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::put (char_type __c)
       [inherited]
       Simple insertion.

       Parameters
           __c The character to insert.

       Returns
           *this

       Tries to insert __c.

       Note
           This function is not overloaded on signed char and unsigned char.

       Definition at line 148 of file ostream.tcc.

       References std::ios_base::badbit, std::ios_base::goodbit,
       std::basic_ios< _CharT, _Traits >::rdbuf(), and std::basic_ios< _CharT,
       _Traits >::setstate().

       Referenced by std::endl(), and std::ends().

   void *& std::ios_base::pword (int __ix) [inline],  [inherited]
       Access to void pointer array.

       Parameters
           __ix Index into the array.

       Returns
           A reference to a void* associated with the index.

       The pword function provides access to an array of pointers that can be
       used for any purpose. The array grows as required to hold the supplied
       index. All pointers in the array are initialized to 0.

       The implementation reserves several indices. You should use xalloc to
       obtain an index that is safe to use. Also note that since the array can
       grow dynamically, it is not safe to hold onto the reference.

       Definition at line 869 of file ios_base.h.

   template<typename _CharT , typename _Traits > __filebuf_type *
       std::basic_ofstream< _CharT, _Traits >::rdbuf () const [inline]
       Accessing the underlying buffer.

       Returns
           The current basic_filebuf buffer.

       This hides both signatures of std::basic_ios::rdbuf().

       Definition at line 900 of file fstream.

   template<typename _CharT , typename _Traits > basic_streambuf< _CharT,
       _Traits > * std::basic_ios< _CharT, _Traits >::rdbuf (basic_streambuf<
       _CharT, _Traits > * __sb) [inherited]
       Changing the underlying buffer.

       Parameters
           __sb The new stream buffer.

       Returns
           The previous stream buffer.

       Associates a new buffer with the current stream, and clears the error
       state.

       Due to historical accidents which the LWG refuses to correct, the I/O
       library suffers from a design error: this function is hidden in derived
       classes by overrides of the zero-argument rdbuf(), which is non-virtual
       for hysterical raisins. As a result, you must use explicit
       qualifications to access this function via any derived class. For
       example:

       std::fstream     foo;         // or some other derived type
       std::streambuf*  p = .....;

       foo.ios::rdbuf(p);            // ios == basic_ios<char>

       Definition at line 53 of file basic_ios.tcc.

   template<typename _CharT , typename _Traits > iostate std::basic_ios<
       _CharT, _Traits >::rdstate () const [inline],  [inherited]
       Returns the error state of the stream buffer.

       Returns
           A bit pattern (well, isn't everything?)

       See std::ios_base::iostate for the possible bit values. Most users will
       call one of the interpreting wrappers, e.g., good().

       Definition at line 137 of file basic_ios.h.

       Referenced by std::basic_ios< _CharT, _Traits >::bad(), std::basic_ios<
       _CharT, _Traits >::eof(), std::basic_ios< _CharT, _Traits >::fail(),
       std::basic_ios< _CharT, _Traits >::good(), std::basic_istream< _CharT,
       _Traits >::putback(), std::basic_istream< _CharT, _Traits >::seekg(),
       std::basic_ios< _CharT, _Traits >::setstate(), and std::basic_istream<
       _CharT, _Traits >::unget().

   void std::ios_base::register_callback (event_callback __fn, int __index)
       [inherited]
       Add the callback __fn with parameter __index.

       Parameters
           __fn The function to add.
           __index The integer to pass to the function when invoked.

       Registers a function as an event callback with an integer parameter to
       be passed to the function when invoked. Multiple copies of the function
       are allowed. If there are multiple callbacks, they are invoked in the
       order they were registered.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::seekp (off_type
       __off, ios_base::seekdir __dir) [inherited]
       Changing the current write position.

       Parameters
           __off A file offset object.
           __dir The direction in which to seek.

       Returns
           *this

       If fail() is not true, calls rdbuf()->pubseekoff(off,dir). If that
       function fails, sets failbit.

       Definition at line 282 of file ostream.tcc.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::seekp (pos_type
       __pos) [inherited]
       Changing the current write position.

       Parameters
           __pos A file position object.

       Returns
           *this

       If fail() is not true, calls rdbuf()->pubseekpos(pos). If that function
       fails, sets failbit.

       Definition at line 263 of file ostream.tcc.

       References std::basic_ios< _CharT, _Traits >::fail(),
       std::ios_base::failbit, std::ios_base::out, std::basic_ios< _CharT,
       _Traits >::rdbuf(), and std::basic_ios< _CharT, _Traits >::setstate().

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::set_rdbuf (basic_streambuf< _CharT, _Traits > * __sb)
       [inline],  [protected],  [inherited]
       Definition at line 505 of file basic_ios.h.

   fmtflags std::ios_base::setf (fmtflags __fmtfl) [inline],  [inherited]
       Setting new format flags.

       Parameters
           __fmtfl Additional flags to set.

       Returns
           The previous format control flags.

       This function sets additional flags in format control. Flags that were
       previously set remain set.

       Definition at line 685 of file ios_base.h.

       Referenced by std::__detail::operator>>().

   fmtflags std::ios_base::setf (fmtflags __fmtfl, fmtflags __mask) [inline],
       [inherited]
       Setting new format flags.

       Parameters
           __fmtfl Additional flags to set.
           __mask The flags mask for fmtfl.

       Returns
           The previous format control flags.

       This function clears mask in the format flags, then sets fmtfl & mask.
       An example mask is ios_base::adjustfield.

       Definition at line 702 of file ios_base.h.

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::setstate (iostate __state) [inline],  [inherited]
       Sets additional flags in the error state.

       Parameters
           __state The additional state flag(s) to set.

       See std::ios_base::iostate for the possible bit values.

       Definition at line 157 of file basic_ios.h.

       References std::basic_ios< _CharT, _Traits >::clear(), and
       std::basic_ios< _CharT, _Traits >::rdstate().

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::~sentry(),
       std::basic_ifstream< _CharT, _Traits >::close(), std::basic_ofstream<
       _CharT, _Traits >::close(), std::basic_fstream< _CharT, _Traits
       >::close(), std::basic_ostream< _CharT, _Traits >::flush(),
       std::getline(), std::basic_ifstream< _CharT, _Traits >::open(),
       std::basic_fstream< _CharT, _Traits >::open(), std::basic_ofstream<
       _CharT, _Traits >::open(), std::basic_ostream< char, _Traits
       >::operator<<(), std::basic_ostream< _CharT, _Traits >::operator<<(),
       std::operator<<(), std::operator>>(), std::basic_istream< _CharT,
       _Traits >::operator>>(), std::tr2::operator>>(), std::basic_istream<
       _CharT, _Traits >::peek(), std::basic_ostream< _CharT, _Traits
       >::put(), std::basic_istream< _CharT, _Traits >::putback(),
       std::basic_istream< _CharT, _Traits >::read(), std::basic_istream<
       _CharT, _Traits >::seekg(), std::basic_ostream< _CharT, _Traits
       >::seekp(), std::basic_istream< _CharT, _Traits >::sync(),
       std::basic_istream< _CharT, _Traits >::unget(), and std::ws().

   template<typename _CharT , typename _Traits > void std::basic_ios< _CharT,
       _Traits >::swap (basic_ios< _CharT, _Traits > & __rhs) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 494 of file basic_ios.h.

   template<typename _CharT , typename _Traits > void std::basic_ofstream<
       _CharT, _Traits >::swap (basic_ofstream< _CharT, _Traits > & __rhs)
       [inline]
       Definition at line 885 of file fstream.

   template<typename _CharT , typename _Traits > void std::basic_ostream<
       _CharT, _Traits >::swap (basic_ostream< _CharT, _Traits > & __rhs)
       [inline],  [protected],  [inherited]
       Definition at line 409 of file ostream.

   static bool std::ios_base::sync_with_stdio (bool __sync = true) [static],
       [inherited]
       Interaction with the standard C I/O objects.

       Parameters
           __sync Whether to synchronize or not.

       Returns
           True if the standard streams were previously synchronized.

       The synchronization referred to is only that between the standard C
       facilities (e.g., stdout) and the standard C++ objects (e.g., cout).
       User-declared streams are unaffected. See
       https://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits >::pos_type std::basic_ostream< _CharT, _Traits >::tellp
       [inherited]
       Getting the current write position.

       Returns
           A file position object.

       If fail() is not false, returns pos_type(-1) to indicate failure.
       Otherwise returns rdbuf()->pubseekoff(0,cur,out).

       Definition at line 251 of file ostream.tcc.

       References std::ios_base::cur, std::basic_ios< _CharT, _Traits
       >::fail(), std::ios_base::out, and std::basic_ios< _CharT, _Traits
       >::rdbuf().

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > * std::basic_ios< _CharT, _Traits >::tie () const [inline],
       [inherited]
       Fetches the current tied stream.

       Returns
           A pointer to the tied stream, or NULL if the stream is not tied.

       A stream may be tied (or synchronized) to a second output stream. When
       this stream performs any I/O, the tied stream is first flushed. For
       example, std::cin is tied to std::cout.

       Definition at line 295 of file basic_ios.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::sentry(), and
       std::basic_ios< _CharT, _Traits >::copyfmt().

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > * std::basic_ios< _CharT, _Traits >::tie (basic_ostream<
       _CharT, _Traits > * __tiestr) [inline],  [inherited]
       Ties this stream to an output stream.

       Parameters
           __tiestr The output stream.

       Returns
           The previously tied output stream, or NULL if the stream was not
           tied.

       This sets up a new tie; see tie() for more.

       Definition at line 307 of file basic_ios.h.

   void std::ios_base::unsetf (fmtflags __mask) [inline],  [inherited]
       Clearing format flags.

       Parameters
           __mask The flags to unset.

       This function clears __mask in the format flags.

       Definition at line 717 of file ios_base.h.

   template<typename _CharT , typename _Traits > char_type std::basic_ios<
       _CharT, _Traits >::widen (char __c) const [inline],  [inherited]
       Widens characters.

       Parameters
           __c The character to widen.

       Returns
           The widened character.

       Maps a character of char to a character of char_type.

       Returns the result of

       std::use_facet<ctype<char_type> >(getloc()).widen(c)

       Additional l10n notes are at
       http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html

       Definition at line 449 of file basic_ios.h.

       Referenced by std::endl(), std::basic_ios< _CharT, _Traits >::fill(),
       std::basic_istream< _CharT, _Traits >::get(), std::getline(),
       std::basic_istream< _CharT, _Traits >::getline(), std::operator<<(),
       and std::tr2::operator>>().

   streamsize std::ios_base::width () const [inline],  [inherited]
       Flags access.

       Returns
           The minimum field width to generate on output operations.

       Minimum field width refers to the number of characters.

       Definition at line 751 of file ios_base.h.

       Referenced by std::basic_ios< _CharT, _Traits >::copyfmt(),
       std::num_put< _CharT, _OutIter >::do_put(), and std::operator>>().

   streamsize std::ios_base::width (streamsize __wide) [inline],  [inherited]
       Changing flags.

       Parameters
           __wide The new width value.

       Returns
           The previous value of width().

       Definition at line 760 of file ios_base.h.

   template<typename _CharT , typename _Traits > basic_ostream< _CharT,
       _Traits > & std::basic_ostream< _CharT, _Traits >::write (const
       char_type * __s, streamsize __n) [inherited]
       Character string insertion.

       Parameters
           __s The array to insert.
           __n Maximum number of characters to insert.

       Returns
           *this

       Characters are copied from __s and inserted into the stream until one
       of the following happens:

       • __n characters are inserted

       • inserting into the output sequence fails (in this case, badbit will
         be set in the stream's error state)

       Note
           This function is not overloaded on signed char and unsigned char.

       Definition at line 182 of file ostream.tcc.

   static int std::ios_base::xalloc () [static],  [inherited]
       Access to unique indices.

       Returns
           An integer different from all previous calls.

       This function returns a unique integer every time it is called. It can
       be used for any purpose, but is primarily intended to be a unique index
       for the iword and pword functions. The expectation is that an
       application calls xalloc in order to obtain an index in the iword and
       pword arrays that can be used without fear of conflict.

       The implementation maintains a static variable that is incremented and
       returned on each invocation. xalloc is guaranteed to return an index
       that is safe to use in the iword and pword arrays.

Member Data Documentation
   const openmode std::ios_base::__noreplace [static],  [inherited]
       Definition at line 470 of file ios_base.h.

   _Callback_list* std::ios_base::_M_callbacks [protected],  [inherited]
       Definition at line 592 of file ios_base.h.

   template<typename _CharT , typename _Traits > const __ctype_type*
       std::basic_ios< _CharT, _Traits >::_M_ctype [protected],  [inherited]
       Definition at line 102 of file basic_ios.h.

   iostate std::ios_base::_M_exception [protected],  [inherited]
       Definition at line 557 of file ios_base.h.

   template<typename _CharT , typename _Traits > char_type std::basic_ios<
       _CharT, _Traits >::_M_fill [mutable],  [protected],  [inherited]
       Definition at line 97 of file basic_ios.h.

   template<typename _CharT , typename _Traits > bool std::basic_ios< _CharT,
       _Traits >::_M_fill_init [mutable],  [protected],  [inherited]
       Definition at line 98 of file basic_ios.h.

   fmtflags std::ios_base::_M_flags [protected],  [inherited]
       Definition at line 556 of file ios_base.h.

   locale std::ios_base::_M_ios_locale [protected],  [inherited]
       Definition at line 624 of file ios_base.h.

   _Words std::ios_base::_M_local_word[_S_local_word_size] [protected],
       [inherited]
       Definition at line 614 of file ios_base.h.

   template<typename _CharT , typename _Traits > const __num_get_type*
       std::basic_ios< _CharT, _Traits >::_M_num_get [protected],  [inherited]
       Definition at line 106 of file basic_ios.h.

   template<typename _CharT , typename _Traits > const __num_put_type*
       std::basic_ios< _CharT, _Traits >::_M_num_put [protected],  [inherited]
       Definition at line 104 of file basic_ios.h.

   streamsize std::ios_base::_M_precision [protected],  [inherited]
       Definition at line 554 of file ios_base.h.

   template<typename _CharT , typename _Traits > basic_streambuf<_CharT,
       _Traits>* std::basic_ios< _CharT, _Traits >::_M_streambuf [protected],
       [inherited]
       Definition at line 99 of file basic_ios.h.

   iostate std::ios_base::_M_streambuf_state [protected],  [inherited]
       Definition at line 558 of file ios_base.h.

   template<typename _CharT , typename _Traits > basic_ostream<_CharT,
       _Traits>* std::basic_ios< _CharT, _Traits >::_M_tie [protected],
       [inherited]
       Definition at line 96 of file basic_ios.h.

   streamsize std::ios_base::_M_width [protected],  [inherited]
       Definition at line 555 of file ios_base.h.

   _Words* std::ios_base::_M_word [protected],  [inherited]
       Definition at line 618 of file ios_base.h.

   int std::ios_base::_M_word_size [protected],  [inherited]
       Definition at line 617 of file ios_base.h.

   _Words std::ios_base::_M_word_zero [protected],  [inherited]
       Definition at line 609 of file ios_base.h.

   const fmtflags std::ios_base::adjustfield [static],  [inherited]
       A mask of left|right|internal. Useful for the 2-arg form of setf.

       Definition at line 397 of file ios_base.h.

       Referenced by std::num_put< _CharT, _OutIter >::do_put(),
       std::internal(), std::left(), and std::right().

   const openmode std::ios_base::app [static],  [inherited]
       Seek to end before each write.

       Definition at line 451 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::_M_set_buffer(),
       std::basic_filebuf< _CharT, _Traits >::overflow(), and
       std::basic_filebuf< _CharT, _Traits >::xsputn().

   const openmode std::ios_base::ate [static],  [inherited]
       Open and seek to end immediately after opening.

       Definition at line 454 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::open().

   const iostate std::ios_base::badbit [static],  [inherited]
       Indicates a loss of integrity in an input or output sequence (such as
       an irrecoverable read error from a file).

       Definition at line 421 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::~sentry(),
       std::basic_ios< _CharT, _Traits >::bad(), std::basic_ios< _CharT,
       _Traits >::fail(), std::basic_ostream< _CharT, _Traits >::flush(),
       std::basic_istream< char >::get(), std::basic_istream< char
       >::ignore(), std::basic_ostream< _CharT, _Traits >::operator<<(),
       std::operator>>(), std::basic_istream< _CharT, _Traits >::operator>>(),
       std::basic_istream< _CharT, _Traits >::peek(), std::basic_ostream<
       _CharT, _Traits >::put(), std::basic_istream< _CharT, _Traits
       >::putback(), std::basic_istream< _CharT, _Traits >::read(),
       std::basic_istream< _CharT, _Traits >::seekg(), std::basic_istream<
       _CharT, _Traits >::sync(), std::basic_istream< _CharT, _Traits
       >::tellg(), std::basic_istream< _CharT, _Traits >::unget(), and
       std::ws().

   const fmtflags std::ios_base::basefield [static],  [inherited]
       A mask of dec|oct|hex. Useful for the 2-arg form of setf.

       Definition at line 400 of file ios_base.h.

       Referenced by std::dec(), std::num_get< _CharT, _InIter >::do_get(),
       std::num_put< _CharT, _OutIter >::do_put(), std::hex(), and std::oct().

   const seekdir std::ios_base::beg [static],  [inherited]
       Request a seek relative to the beginning of the stream.

       Definition at line 491 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::seekpos().

   const openmode std::ios_base::binary [static],  [inherited]
       Perform input and output in binary mode (as opposed to text mode). This
       is probably not what you think it is; see
       https://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary.

       Definition at line 459 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::showmanyc().

   const fmtflags std::ios_base::boolalpha [static],  [inherited]
       Insert/extract bool in alphabetic rather than numeric format.

       Definition at line 345 of file ios_base.h.

       Referenced by std::boolalpha(), std::num_get< _CharT, _InIter
       >::do_get(), std::num_put< _CharT, _OutIter >::do_put(), and
       std::noboolalpha().

   const seekdir std::ios_base::cur [static],  [inherited]
       Request a seek relative to the current position within the sequence.

       Definition at line 494 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::imbue(),
       std::basic_filebuf< _CharT, _Traits >::overflow(), std::basic_filebuf<
       _CharT, _Traits >::pbackfail(), std::basic_filebuf< _CharT, _Traits
       >::seekoff(), std::basic_stringbuf< _CharT, _Traits, _Alloc
       >::seekoff(), std::basic_istream< _CharT, _Traits >::tellg(), and
       std::basic_ostream< _CharT, _Traits >::tellp().

   const fmtflags std::ios_base::dec [static],  [inherited]
       Converts integer input or generates integer output in decimal base.

       Definition at line 348 of file ios_base.h.

       Referenced by std::dec().

   const seekdir std::ios_base::end [static],  [inherited]
       Request a seek relative to the current end of the sequence.

       Definition at line 497 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::open(), and
       std::basic_stringbuf< _CharT, _Traits, _Alloc >::seekoff().

   const iostate std::ios_base::eofbit [static],  [inherited]
       Indicates that an input operation reached the end of an input sequence.

       Definition at line 424 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_istream< char >::sentry::sentry(), std::time_get< _CharT,
       _InIter >::do_get(), std::num_get< _CharT, _InIter >::do_get(),
       std::time_get< _CharT, _InIter >::do_get_date(), std::time_get< _CharT,
       _InIter >::do_get_monthname(), std::time_get< _CharT, _InIter
       >::do_get_time(), std::time_get< _CharT, _InIter >::do_get_weekday(),
       std::time_get< _CharT, _InIter >::do_get_year(), std::basic_ios<
       _CharT, _Traits >::eof(), std::basic_istream< _CharT, _Traits >::get(),
       std::time_get< _CharT, _InIter >::get(), std::basic_istream< _CharT,
       _Traits >::getline(), std::basic_istream< _CharT, _Traits
       >::operator>>(), std::operator>>(), std::basic_istream< _CharT, _Traits
       >::peek(), std::basic_istream< _CharT, _Traits >::putback(),
       std::basic_istream< _CharT, _Traits >::read(), std::basic_istream<
       _CharT, _Traits >::seekg(), std::basic_istream< _CharT, _Traits
       >::unget(), and std::ws().

   const iostate std::ios_base::failbit [static],  [inherited]
       Indicates that an input operation failed to read the expected
       characters, or that an output operation failed to generate the desired
       characters.

       Definition at line 429 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ostream< _CharT, _Traits >::sentry::sentry(),
       std::basic_ifstream< _CharT, _Traits >::close(), std::basic_ofstream<
       _CharT, _Traits >::close(), std::basic_fstream< _CharT, _Traits
       >::close(), std::num_get< _CharT, _InIter >::do_get(), std::time_get<
       _CharT, _InIter >::do_get_monthname(), std::time_get< _CharT, _InIter
       >::do_get_weekday(), std::time_get< _CharT, _InIter >::do_get_year(),
       std::basic_ios< _CharT, _Traits >::fail(), std::time_get< _CharT,
       _InIter >::get(), std::basic_istream< _CharT, _Traits >::getline(),
       std::basic_ifstream< _CharT, _Traits >::open(), std::basic_fstream<
       _CharT, _Traits >::open(), std::basic_ofstream< _CharT, _Traits
       >::open(), std::basic_ostream< char, _Traits >::operator<<(),
       std::operator<<(), std::operator>>(), std::basic_istream< _CharT,
       _Traits >::operator>>(), std::basic_istream< _CharT, _Traits >::read(),
       std::basic_istream< _CharT, _Traits >::seekg(), and std::basic_ostream<
       _CharT, _Traits >::seekp().

   const fmtflags std::ios_base::fixed [static],  [inherited]
       Generate floating-point output in fixed-point notation.

       Definition at line 351 of file ios_base.h.

       Referenced by std::fixed(), and std::hexfloat().

   const fmtflags std::ios_base::floatfield [static],  [inherited]
       A mask of scientific|fixed. Useful for the 2-arg form of setf.

       Definition at line 403 of file ios_base.h.

       Referenced by std::defaultfloat(), std::fixed(), std::hexfloat(), and
       std::scientific().

   const iostate std::ios_base::goodbit [static],  [inherited]
       Indicates all is well.

       Definition at line 432 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::time_get< _CharT, _InIter >::do_get(), std::num_get< _CharT,
       _InIter >::do_get(), std::time_get< _CharT, _InIter
       >::do_get_monthname(), std::time_get< _CharT, _InIter
       >::do_get_weekday(), std::time_get< _CharT, _InIter >::do_get_year(),
       std::basic_ostream< _CharT, _Traits >::flush(), std::basic_istream<
       _CharT, _Traits >::get(), std::time_get< _CharT, _InIter >::get(),
       std::basic_istream< _CharT, _Traits >::getline(), std::basic_istream<
       _CharT, _Traits >::ignore(), std::basic_ostream< _CharT, _Traits
       >::operator<<(), std::operator>>(), std::basic_istream< _CharT, _Traits
       >::operator>>(), std::basic_istream< _CharT, _Traits >::peek(),
       std::basic_ostream< _CharT, _Traits >::put(), std::basic_istream<
       _CharT, _Traits >::putback(), std::basic_istream< _CharT, _Traits
       >::read(), std::basic_istream< _CharT, _Traits >::seekg(),
       std::basic_istream< _CharT, _Traits >::sync(), std::basic_istream<
       _CharT, _Traits >::unget(), and std::ws().

   const fmtflags std::ios_base::hex [static],  [inherited]
       Converts integer input or generates integer output in hexadecimal base.

       Definition at line 354 of file ios_base.h.

       Referenced by std::num_get< _CharT, _InIter >::do_get(), std::num_put<
       _CharT, _OutIter >::do_put(), and std::hex().

   const openmode std::ios_base::in [static],  [inherited]
       Open for input. Default for ifstream and fstream.

       Definition at line 462 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::_M_set_buffer(),
       std::basic_ifstream< _CharT, _Traits >::open(), std::basic_stringbuf<
       _CharT, _Traits, _Alloc >::overflow(), std::basic_filebuf< _CharT,
       _Traits >::pbackfail(), std::basic_istream< _CharT, _Traits >::seekg(),
       std::basic_stringbuf< _CharT, _Traits, _Alloc >::seekoff(),
       std::basic_stringbuf< _CharT, _Traits, _Alloc >::seekpos(),
       std::basic_filebuf< _CharT, _Traits >::showmanyc(),
       std::basic_stringbuf< _CharT, _Traits, _Alloc >::showmanyc(),
       std::basic_istream< _CharT, _Traits >::tellg(), std::basic_filebuf<
       _CharT, _Traits >::underflow(), std::basic_stringbuf< _CharT, _Traits,
       _Alloc >::underflow(), and std::basic_filebuf< _CharT, _Traits
       >::xsgetn().

   const fmtflags std::ios_base::internal [static],  [inherited]
       Adds fill characters at a designated internal point in certain
       generated output, or identical to right if no such point is designated.

       Definition at line 359 of file ios_base.h.

       Referenced by std::internal().

   const fmtflags std::ios_base::left [static],  [inherited]
       Adds fill characters on the right (final positions) of certain
       generated output. (I.e., the thing you print is flush left.)

       Definition at line 363 of file ios_base.h.

       Referenced by std::num_put< _CharT, _OutIter >::do_put(), and
       std::left().

   const fmtflags std::ios_base::oct [static],  [inherited]
       Converts integer input or generates integer output in octal base.

       Definition at line 366 of file ios_base.h.

       Referenced by std::oct().

   const openmode std::ios_base::out [static],  [inherited]
       Open for output. Default for ofstream and fstream.

       Definition at line 465 of file ios_base.h.

       Referenced by std::basic_filebuf< _CharT, _Traits >::_M_set_buffer(),
       std::basic_ofstream< _CharT, _Traits >::open(), std::basic_ostream<
       char, _Traits >::operator<<(), std::basic_filebuf< _CharT, _Traits
       >::overflow(), std::basic_stringbuf< _CharT, _Traits, _Alloc
       >::overflow(), std::basic_stringbuf< _CharT, _Traits, _Alloc
       >::pbackfail(), std::basic_stringbuf< _CharT, _Traits, _Alloc
       >::seekoff(), std::basic_ostream< _CharT, _Traits >::seekp(),
       std::basic_stringbuf< _CharT, _Traits, _Alloc >::seekpos(),
       std::basic_ostream< _CharT, _Traits >::tellp(), and std::basic_filebuf<
       _CharT, _Traits >::xsputn().

   const fmtflags std::ios_base::right [static],  [inherited]
       Adds fill characters on the left (initial positions) of certain
       generated output. (I.e., the thing you print is flush right.)

       Definition at line 370 of file ios_base.h.

       Referenced by std::right().

   const fmtflags std::ios_base::scientific [static],  [inherited]
       Generates floating-point output in scientific notation.

       Definition at line 373 of file ios_base.h.

       Referenced by std::hexfloat(), and std::scientific().

   const fmtflags std::ios_base::showbase [static],  [inherited]
       Generates a prefix indicating the numeric base of generated integer
       output.

       Definition at line 377 of file ios_base.h.

       Referenced by std::num_put< _CharT, _OutIter >::do_put(),
       std::noshowbase(), and std::showbase().

   const fmtflags std::ios_base::showpoint [static],  [inherited]
       Generates a decimal-point character unconditionally in generated
       floating-point output.

       Definition at line 381 of file ios_base.h.

       Referenced by std::noshowpoint(), and std::showpoint().

   const fmtflags std::ios_base::showpos [static],  [inherited]
       Generates a + sign in non-negative generated numeric output.

       Definition at line 384 of file ios_base.h.

       Referenced by std::noshowpos(), and std::showpos().

   const fmtflags std::ios_base::skipws [static],  [inherited]
       Skips leading white space before certain input operations.

       Definition at line 387 of file ios_base.h.

       Referenced by std::basic_istream< _CharT, _Traits >::sentry::sentry(),
       std::noskipws(), std::__detail::operator>>(), and std::skipws().

   const openmode std::ios_base::trunc [static],  [inherited]
       Truncate an existing stream when opening. Default for ofstream.

       Definition at line 468 of file ios_base.h.

   const fmtflags std::ios_base::unitbuf [static],  [inherited]
       Flushes output after each output operation.

       Definition at line 390 of file ios_base.h.

       Referenced by std::basic_ostream< _CharT, _Traits >::sentry::~sentry(),
       std::nounitbuf(), and std::unitbuf().

   const fmtflags std::ios_base::uppercase [static],  [inherited]
       Replaces certain lowercase letters with their uppercase equivalents in
       generated output.

       Definition at line 394 of file ios_base.h.

       Referenced by std::num_put< _CharT, _OutIter >::do_put(),
       std::nouppercase(), and std::uppercase().

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Fstd::basic_ofstream< _CharT, _Traits >(3)
