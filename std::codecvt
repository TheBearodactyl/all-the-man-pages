std::codecvt< _InternT, _ExLibrastd::codecvt<M_InternT, _ExternT, _StateT >(3)

NAME
       std::codecvt< _InternT, _ExternT, _StateT > - Primary class template
       codecvt.

SYNOPSIS
       #include <locale>

       Inherits std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

       Inherited by std::codecvt_byname< _InternT, _ExternT, _StateT >.

   Public Types
       typedef _ExternT extern_type
       typedef _InternT intern_type
       typedef codecvt_base::result result
       typedef _StateT state_type

   Public Member Functions
       codecvt (__c_locale __cloc, size_t __refs=0)
       codecvt (size_t __refs=0)
       bool always_noconv () const  throw ()
       int encoding () const  throw ()
       result in (state_type &__state, const extern_type *__from, const
           extern_type *__from_end, const extern_type *&__from_next,
           intern_type *__to, intern_type *__to_end, intern_type *&__to_next)
           const
           Convert from external to internal character set.
       int length (state_type &__state, const extern_type *__from, const
           extern_type *__end, size_t __max) const
       int max_length () const  throw ()
       result out (state_type &__state, const intern_type *__from, const
           intern_type *__from_end, const intern_type *&__from_next,
           extern_type *__to, extern_type *__to_end, extern_type *&__to_next)
           const
           Convert from internal to external character set.
       result unshift (state_type &__state, extern_type *__to, extern_type
           *__to_end, extern_type *&__to_next) const
           Reset conversion state.

   Static Public Attributes
       static locale::id id

   Protected Member Functions
       virtual bool do_always_noconv () const  throw ()
       virtual int do_encoding () const  throw ()
       virtual result do_in (state_type &__state, const extern_type *__from,
           const extern_type *__from_end, const extern_type *&__from_next,
           intern_type *__to, intern_type *__to_end, intern_type *&__to_next)
           const
       virtual int do_length (state_type &, const extern_type *__from, const
           extern_type *__end, size_t __max) const
       virtual int do_max_length () const  throw ()
       virtual result do_out (state_type &__state, const intern_type *__from,
           const intern_type *__from_end, const intern_type *&__from_next,
           extern_type *__to, extern_type *__to_end, extern_type *&__to_next)
           const
           Convert from internal to external character set.
       virtual result do_unshift (state_type &__state, extern_type *__to,
           extern_type *__to_end, extern_type *&__to_next) const

   Static Protected Member Functions
       static __c_locale _S_clone_c_locale (__c_locale &__cloc)  throw ()
       static void _S_create_c_locale (__c_locale &__cloc, const char *__s,
           __c_locale __old=0)
       static void _S_destroy_c_locale (__c_locale &__cloc)
       static __c_locale _S_get_c_locale ()
       static const char * _S_get_c_name ()  throw ()
       static __c_locale _S_lc_ctype_c_locale (__c_locale __cloc, const char
           *__s)

   Protected Attributes
       __c_locale _M_c_locale_codecvt

Detailed Description
   template<typename _InternT, typename _ExternT, typename _StateT>
       class std::codecvt< _InternT, _ExternT, _StateT >"Primary class
       template codecvt.

       NB: Generic, mostly useless implementation.

       Definition at line 277 of file locale.

Member Typedef Documentation
   template<typename _InternT , typename _ExternT , typename _StateT > typedef
       _ExternT std::codecvt< _InternT, _ExternT, _StateT >::extern_type
       Definition at line 284 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > typedef
       _InternT std::codecvt< _InternT, _ExternT, _StateT >::intern_type
       Definition at line 283 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > typedef
       codecvt_base::result std::codecvt< _InternT, _ExternT, _StateT
       >::result
       Definition at line 282 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > typedef
       _StateT std::codecvt< _InternT, _ExternT, _StateT >::state_type
       Definition at line 285 of file locale.

Constructor & Destructor Documentation
   template<typename _InternT , typename _ExternT , typename _StateT >
       std::codecvt< _InternT, _ExternT, _StateT >::codecvt (size_t __refs =
       0) [inline],  [explicit]
       Definition at line 294 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       std::codecvt< _InternT, _ExternT, _StateT >::~codecvt () [inline],
       [protected],  [virtual]
       Definition at line 304 of file locale.

Member Function Documentation
   template<typename _InternT , typename _ExternT , typename _StateT > bool
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT
       >::always_noconv () const [inline],  [inherited]
       Definition at line 213 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       bool std::codecvt< _InternT, _ExternT, _StateT >::do_always_noconv ()
       const [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       int std::codecvt< _InternT, _ExternT, _StateT >::do_encoding () const
       [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       result std::codecvt< _InternT, _ExternT, _StateT >::do_in (state_type &
       __state, const extern_type * __from, const extern_type * __from_end,
       const extern_type *& __from_next, intern_type * __to, intern_type *
       __to_end, intern_type *& __to_next) const [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       int std::codecvt< _InternT, _ExternT, _StateT >::do_length (state_type
       &, const extern_type * __from, const extern_type * __end, size_t __max)
       const [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       int std::codecvt< _InternT, _ExternT, _StateT >::do_max_length () const
       [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       result std::codecvt< _InternT, _ExternT, _StateT >::do_out (state_type
       & __state, const intern_type * __from, const intern_type * __from_end,
       const intern_type *& __from_next, extern_type * __to, extern_type *
       __to_end, extern_type *& __to_next) const [protected],  [virtual]
       Convert from internal to external character set. Converts input string
       of intern_type to output string of extern_type. This function is a hook
       for derived classes to change the value returned.

       See also
           out for more information.

       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > virtual
       result std::codecvt< _InternT, _ExternT, _StateT >::do_unshift
       (state_type & __state, extern_type * __to, extern_type * __to_end,
       extern_type *& __to_next) const [protected],  [virtual]
       Implements std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >.

   template<typename _InternT , typename _ExternT , typename _StateT > int
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::encoding
       () const [inline],  [inherited]
       Definition at line 209 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > result
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::in
       (state_type & __state, const extern_type * __from, const extern_type *
       __from_end, const extern_type *& __from_next, intern_type * __to,
       intern_type * __to_end, intern_type *& __to_next) const [inline],
       [inherited]
       Convert from external to internal character set. Converts input string
       of extern_type to output string of intern_type. This is analogous to
       mbsrtowcs. It does this by calling codecvt::do_in.

       The source and destination character sets are determined by the facet's
       locale, internal and external types.

       The characters in [from,from_end) are converted and written to
       [to,to_end). from_next and to_next are set to point to the character
       following the last successfully converted character, respectively. If
       the result needed no conversion, from_next and to_next are not
       affected.

       The state argument should be initialized if the input is at the
       beginning and carried from a previous call if continuing conversion.
       There are no guarantees about how state is used.

       The result returned is a member of codecvt_base::result. If all the
       input is converted, returns codecvt_base::ok. If no conversion is
       necessary, returns codecvt_base::noconv. If the input ends early or
       there is insufficient space in the output, returns
       codecvt_base::partial. Otherwise the conversion failed and
       codecvt_base::error is returned.

       Parameters
           __state Persistent conversion state data.
           __from Start of input.
           __from_end End of input.
           __from_next Returns start of unconverted data.
           __to Start of output buffer.
           __to_end End of output buffer.
           __to_next Returns start of unused output area.

       Returns
           codecvt_base::result.

       Definition at line 199 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > int
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::length
       (state_type & __state, const extern_type * __from, const extern_type *
       __end, size_t __max) const [inline],  [inherited]
       Definition at line 217 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > int
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::max_length
       () const [inline],  [inherited]
       Definition at line 222 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT > result
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::out
       (state_type & __state, const intern_type * __from, const intern_type *
       __from_end, const intern_type *& __from_next, extern_type * __to,
       extern_type * __to_end, extern_type *& __to_next) const [inline],
       [inherited]
       Convert from internal to external character set. Converts input string
       of intern_type to output string of extern_type. This is analogous to
       wcsrtombs. It does this by calling codecvt::do_out.

       The source and destination character sets are determined by the facet's
       locale, internal and external types.

       The characters in [from,from_end) are converted and written to
       [to,to_end). from_next and to_next are set to point to the character
       following the last successfully converted character, respectively. If
       the result needed no conversion, from_next and to_next are not
       affected.

       The state argument should be initialized if the input is at the
       beginning and carried from a previous call if continuing conversion.
       There are no guarantees about how state is used.

       The result returned is a member of codecvt_base::result. If all the
       input is converted, returns codecvt_base::ok. If no conversion is
       necessary, returns codecvt_base::noconv. If the input ends early or
       there is insufficient space in the output, returns
       codecvt_base::partial. Otherwise the conversion failed and
       codecvt_base::error is returned.

       Parameters
           __state Persistent conversion state data.
           __from Start of input.
           __from_end End of input.
           __from_next Returns start of unconverted data.
           __to Start of output buffer.
           __to_end End of output buffer.
           __to_next Returns start of unused output area.

       Returns
           codecvt_base::result.

       Definition at line 119 of file locale.

       References std::__codecvt_abstract_base< _InternT, _ExternT, _StateT
       >::do_out().

   template<typename _InternT , typename _ExternT , typename _StateT > result
       std::__codecvt_abstract_base< _InternT, _ExternT, _StateT >::unshift
       (state_type & __state, extern_type * __to, extern_type * __to_end,
       extern_type *& __to_next) const [inline],  [inherited]
       Reset conversion state. Writes characters to output that would restore
       state to initial conditions. The idea is that if a partial conversion
       occurs, then the converting the characters written by this function
       would leave the state in initial conditions, rather than partial
       conversion state. It does this by calling codecvt::do_unshift().

       For example, if 4 external characters always converted to 1 internal
       character, and input to in() had 6 external characters with state
       saved, this function would write two characters to the output and set
       the state to initialized conditions.

       The source and destination character sets are determined by the facet's
       locale, internal and external types.

       The result returned is a member of codecvt_base::result. If the state
       could be reset and data written, returns codecvt_base::ok. If no
       conversion is necessary, returns codecvt_base::noconv. If the output
       has insufficient space, returns codecvt_base::partial. Otherwise the
       reset failed and codecvt_base::error is returned.

       Parameters
           __state Persistent conversion state data.
           __to Start of output buffer.
           __to_end End of output buffer.
           __to_next Returns start of unused output area.

       Returns
           codecvt_base::result.

       Definition at line 158 of file locale.

Member Data Documentation
   template<typename _InternT , typename _ExternT , typename _StateT >
       __c_locale std::codecvt< _InternT, _ExternT, _StateT
       >::_M_c_locale_codecvt [protected]
       Definition at line 288 of file locale.

   template<typename _InternT , typename _ExternT , typename _StateT >
       locale::id std::codecvt< _InternT, _ExternT, _StateT >::id [static]
       Definition at line 291 of file locale.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       std::codecvt<3_InternT, _ExternT, _StateT >(3)
