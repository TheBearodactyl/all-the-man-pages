std::__dstd::__debug::unordered_multimap<o_Key,n_Tp,__Hash,__Pred,>_Alloc >(3)

NAME
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > -
       Class std::unordered_multimap with safety/checking/debug
       instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and unordered_multimap< _Key, _Tp,
       std::hash< _Key >, std::equal_to< _Key >, std::allocator< std::pair<
       const _Key, _Tp > > >.

   Public Types
       typedef _Base::allocator_type allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator,
           unordered_multimap > const_iterator
       typedef __gnu_debug::_Safe_local_iterator< _Base_const_local_iterator,
           unordered_multimap > const_local_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef _Base::difference_type difference_type
       typedef _Base::hasher hasher
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, unordered_multimap
           > iterator
       typedef _Base::key_equal key_equal
       typedef _Base::key_type key_type
       typedef __gnu_debug::_Safe_local_iterator< _Base_local_iterator,
           unordered_multimap > local_iterator
       typedef _Base::mapped_type mapped_type
       using node_type = typename _Base::node_type
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef _Base::size_type size_type
       typedef _Base::value_type value_type

   Public Member Functions
       unordered_multimap (_Base_ref __x)
       template<typename _InputIterator > unordered_multimap (_InputIterator
           __first, _InputIterator __last, size_type __n, const allocator_type
           &__a)
       template<typename _InputIterator > unordered_multimap (_InputIterator
           __first, _InputIterator __last, size_type __n, const hasher &__hf,
           const allocator_type &__a)
       template<typename _InputIterator > unordered_multimap (_InputIterator
           __first, _InputIterator __last, size_type __n=0, const hasher
           &__hf=hasher(), const key_equal &__eql=key_equal(), const
           allocator_type &__a=allocator_type())
       unordered_multimap (const allocator_type &__a)
       unordered_multimap (const unordered_multimap &)=default
       unordered_multimap (const unordered_multimap &__umap, const
           allocator_type &__a)
       unordered_multimap (initializer_list< value_type > __l, size_type __n,
           const allocator_type &__a)
       unordered_multimap (initializer_list< value_type > __l, size_type __n,
           const hasher &__hf, const allocator_type &__a)
       unordered_multimap (initializer_list< value_type > __l, size_type
           __n=0, const hasher &__hf=hasher(), const key_equal
           &__eql=key_equal(), const allocator_type &__a=allocator_type())
       unordered_multimap (size_type __n, const allocator_type &__a)
       unordered_multimap (size_type __n, const hasher &__hf, const
           allocator_type &__a)
       unordered_multimap (size_type __n, const hasher &__hf=hasher(), const
           key_equal &__eql=key_equal(), const allocator_type
           &__a=allocator_type())
       unordered_multimap (unordered_multimap &&)=default
       unordered_multimap (unordered_multimap &&__umap, const allocator_type
           &__a) noexcept(noexcept(_Base(std::move(__umap), __a)))
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       local_iterator begin (size_type __b)
       const_local_iterator begin (size_type __b) const
       size_type bucket_size (size_type __b) const
       const_iterator cbegin () const noexcept
       const_local_iterator cbegin (size_type __b) const
       const_iterator cend () const noexcept
       const_local_iterator cend (size_type __b) const
       void clear () noexcept
       template<typename... _Args> iterator emplace (_Args &&... __args)
       template<typename... _Args> iterator emplace_hint (const_iterator
           __hint, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       local_iterator end (size_type __b)
       const_local_iterator end (size_type __b) const
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< iterator, iterator > equal_range (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< const_iterator, const_iterator > equal_range (const _Kt
           &__k) const
       std::pair< iterator, iterator > equal_range (const key_type &__key)
       std::pair< const_iterator, const_iterator > equal_range (const key_type
           &__key) const
       _Base_iterator erase (_Base_const_iterator __it)
       size_type erase (const key_type &__key)
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __it)
       iterator erase (iterator __it)
       node_type extract (const key_type &__key)
       node_type extract (const_iterator __position)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>> iterator
           find (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           const_iterator find (const _Kt &__k) const
       iterator find (const key_type &__key)
       const_iterator find (const key_type &__key) const
       template<typename _InputIterator > void insert (_InputIterator __first,
           _InputIterator __last)
       template<typename _Pair , typename  = typename
           std::enable_if<std::is_constructible<value_type,
           _Pair&&>::value>::type> iterator insert (_Pair &&__obj)
       iterator insert (const value_type &__obj)
       template<typename _Pair , typename  = typename
           std::enable_if<std::is_constructible<value_type,
           _Pair&&>::value>::type> iterator insert (const_iterator __hint,
           _Pair &&__obj)
       iterator insert (const_iterator __hint, const value_type &__obj)
       iterator insert (const_iterator __hint, node_type &&__nh)
       iterator insert (const_iterator __hint, value_type &&__x)
       iterator insert (node_type &&__nh)
       void insert (std::initializer_list< value_type > __l)
       iterator insert (value_type &&__x)
       float max_load_factor () const noexcept
       void max_load_factor (float __f)
       template<typename _H2 , typename _P2 > void merge (unordered_map< _Key,
           _Tp, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_map< _Key,
           _Tp, _H2, _P2, _Alloc > &__source)
       template<typename _H2 , typename _P2 > void merge (unordered_multimap<
           _Key, _Tp, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_multimap<
           _Key, _Tp, _H2, _P2, _Alloc > &__source)
       unordered_multimap & operator= (const unordered_multimap &)=default
       unordered_multimap & operator= (initializer_list< value_type > __l)
       unordered_multimap & operator= (unordered_multimap &&)=default
       void swap (unordered_multimap &__x) noexcept(noexcept(declval< _Base &
           >().swap(__x)))

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator
       template<typename _ItT , typename _SeqT > class
           ::__gnu_debug::_Safe_local_iterator

Detailed Description
   template<typename _Key, typename _Tp, typename _Hash = std::hash<_Key>,
       typename _Pred = std::equal_to<_Key>, typename _Alloc =
       std::allocator<std::pair<const _Key, _Tp> >>
       class std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >"Class std::unordered_multimap with safety/checking/debug
       instrumentation.

       Definition at line 873 of file debug/unordered_map.

Member Typedef Documentation
   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       _Base::allocator_type std::__debug::unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc >::allocator_type
       Definition at line 906 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       __gnu_debug::_Safe_iterator< _Base_const_iterator, unordered_multimap>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::const_iterator
       Definition at line 919 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       __gnu_debug::_Safe_local_iterator< _Base_const_local_iterator,
       unordered_multimap> std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::const_local_iterator
       Definition at line 923 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       _Base::const_pointer std::__debug::unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc >::const_pointer
       Definition at line 913 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       _Base::const_reference std::__debug::unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc >::const_reference
       Definition at line 915 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       _Base::difference_type std::__debug::unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc >::difference_type
       Definition at line 924 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::hasher
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::hasher
       Definition at line 904 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       __gnu_debug::_Safe_iterator< _Base_iterator, unordered_multimap>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::iterator
       Definition at line 917 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::key_equal
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::key_equal
       Definition at line 905 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::key_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::key_type
       Definition at line 908 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef
       __gnu_debug::_Safe_local_iterator< _Base_local_iterator,
       unordered_multimap> std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::local_iterator
       Definition at line 921 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::mapped_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::mapped_type
       Definition at line 910 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> using
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::node_type =  typename _Base::node_type
       Definition at line 1245 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::pointer
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::pointer
       Definition at line 912 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::reference
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::reference
       Definition at line 914 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::size_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::size_type
       Definition at line 903 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> typedef _Base::value_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::value_type
       Definition at line 909 of file debug/unordered_map.

Constructor & Destructor Documentation
   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (size_type __n, const hasher & __hf = hasher(),
       const key_equal & __eql = key_equal(), const allocator_type & __a =
       allocator_type()) [inline],  [explicit]
       Definition at line 929 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename
       _InputIterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::unordered_multimap (_InputIterator __first,
       _InputIterator __last, size_type __n = 0, const hasher & __hf =
       hasher(), const key_equal & __eql = key_equal(), const allocator_type &
       __a = allocator_type()) [inline]
       Definition at line 936 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (_Base_ref __x) [inline]
       Definition at line 948 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (const allocator_type & __a) [inline],
       [explicit]
       Definition at line 954 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (const unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc > & __umap, const allocator_type & __a) [inline]
       Definition at line 957 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (unordered_multimap< _Key, _Tp, _Hash, _Pred,
       _Alloc > && __umap, const allocator_type & __a) [inline],  [noexcept]
       Definition at line 961 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (initializer_list< value_type > __l, size_type
       __n = 0, const hasher & __hf = hasher(), const key_equal & __eql =
       key_equal(), const allocator_type & __a = allocator_type()) [inline]
       Definition at line 967 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (size_type __n, const allocator_type & __a)
       [inline]
       Definition at line 974 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (size_type __n, const hasher & __hf, const
       allocator_type & __a) [inline]
       Definition at line 978 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename
       _InputIterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::unordered_multimap (_InputIterator __first,
       _InputIterator __last, size_type __n, const allocator_type & __a)
       [inline]
       Definition at line 984 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename
       _InputIterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::unordered_multimap (_InputIterator __first,
       _InputIterator __last, size_type __n, const hasher & __hf, const
       allocator_type & __a) [inline]
       Definition at line 991 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (initializer_list< value_type > __l, size_type
       __n, const allocator_type & __a) [inline]
       Definition at line 997 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >>
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::unordered_multimap (initializer_list< value_type > __l, size_type
       __n, const hasher & __hf, const allocator_type & __a) [inline]
       Definition at line 1003 of file debug/unordered_map.

Member Function Documentation
   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const _Base &
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::_M_base () const [inline],  [noexcept]
       Definition at line 1439 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> _Base &
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::_M_base () [inline],  [noexcept]
       Definition at line 1436 of file debug/unordered_map.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::begin () const [inline],  [noexcept]
       Definition at line 1050 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::begin () [inline],  [noexcept]
       Definition at line 1046 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::begin (size_type __b) [inline]
       Definition at line 1071 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::begin (size_type __b) const [inline]
       Definition at line 1085 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> size_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::bucket_size (size_type __b) const [inline]
       Definition at line 1117 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::cbegin () const [inline],  [noexcept]
       Definition at line 1062 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::cbegin (size_type __b) const [inline]
       Definition at line 1099 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::cend () const [inline],  [noexcept]
       Definition at line 1066 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::cend (size_type __b) const [inline]
       Definition at line 1106 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> void
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::clear () [inline],  [noexcept]
       Definition at line 1039 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename...
       _Args> iterator std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::emplace (_Args &&... __args) [inline]
       Definition at line 1136 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename...
       _Args> iterator std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::emplace_hint (const_iterator __hint, _Args &&...
       __args) [inline]
       Definition at line 1146 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::end () const [inline],  [noexcept]
       Definition at line 1058 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::end () [inline],  [noexcept]
       Definition at line 1054 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::end (size_type __b) [inline]
       Definition at line 1078 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_local_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::end (size_type __b) const [inline]
       Definition at line 1092 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Kt ,
       typename  = std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< iterator, iterator
       > std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::equal_range (const _Kt & __k) [inline]
       Definition at line 1349 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Kt ,
       typename  = std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< const_iterator,
       const_iterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::equal_range (const _Kt & __k) const [inline]
       Definition at line 1368 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> std::pair< iterator,
       iterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred,
       _Alloc >::equal_range (const key_type & __key) [inline]
       Definition at line 1338 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> std::pair< const_iterator,
       const_iterator > std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::equal_range (const key_type & __key) const [inline]
       Definition at line 1357 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> _Base_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::erase (_Base_const_iterator __it) [inline]
       Definition at line 1400 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> size_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::erase (const key_type & __key) [inline]
       Definition at line 1376 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::erase (const_iterator __first, const_iterator __last) [inline]
       Definition at line 1414 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::erase (const_iterator __it) [inline]
       Definition at line 1393 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::erase (iterator __it) [inline]
       Definition at line 1407 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> node_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::extract (const key_type & __key) [inline]
       Definition at line 1255 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> node_type
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::extract (const_iterator __position) [inline]
       Definition at line 1248 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Kt ,
       typename  = std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::find (const _Kt & __k) [inline]
       Definition at line 1315 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Kt ,
       typename  = std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::find (const _Kt & __k) const [inline]
       Definition at line 1328 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::find (const key_type & __key) [inline]
       Definition at line 1307 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> const_iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::find (const key_type & __key) const [inline]
       Definition at line 1320 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename
       _InputIterator > void std::__debug::unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc >::insert (_InputIterator __first, _InputIterator
       __last) [inline]
       Definition at line 1229 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Pair ,
       typename  = typename
       std::enable_if<std::is_constructible<value_type,
       _Pair&&>::value>::type> iterator std::__debug::unordered_multimap<
       _Key, _Tp, _Hash, _Pred, _Alloc >::insert (_Pair && __obj) [inline]
       Definition at line 1202 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (const value_type & __obj) [inline]
       Definition at line 1157 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _Pair ,
       typename  = typename
       std::enable_if<std::is_constructible<value_type,
       _Pair&&>::value>::type> iterator std::__debug::unordered_multimap<
       _Key, _Tp, _Hash, _Pred, _Alloc >::insert (const_iterator __hint, _Pair
       && __obj) [inline]
       Definition at line 1214 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (const_iterator __hint, const value_type & __obj) [inline]
       Definition at line 1177 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (const_iterator __hint, node_type && __nh) [inline]
       Definition at line 1268 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (const_iterator __hint, value_type && __x) [inline]
       Definition at line 1189 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (node_type && __nh) [inline]
       Definition at line 1264 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> void
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (std::initializer_list< value_type > __l) [inline]
       Definition at line 1224 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> iterator
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::insert (value_type && __x) [inline]
       Definition at line 1168 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> float
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::max_load_factor () const [inline],  [noexcept]
       Definition at line 1124 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> void
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::max_load_factor (float __f) [inline]
       Definition at line 1128 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _H2 ,
       typename _P2 > void std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::merge (unordered_map< _Key, _Tp, _H2, _P2, _Alloc > &&
       __source) [inline]
       Definition at line 1299 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _H2 ,
       typename _P2 > void std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::merge (unordered_map< _Key, _Tp, _H2, _P2, _Alloc > &
       __source) [inline]
       Definition at line 1290 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _H2 ,
       typename _P2 > void std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::merge (unordered_multimap< _Key, _Tp, _H2, _P2, _Alloc
       > && __source) [inline]
       Definition at line 1285 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _H2 ,
       typename _P2 > void std::__debug::unordered_multimap< _Key, _Tp, _Hash,
       _Pred, _Alloc >::merge (unordered_multimap< _Key, _Tp, _H2, _P2, _Alloc
       > & __source) [inline]
       Definition at line 1276 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> unordered_multimap &
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::operator= (initializer_list< value_type > __l) [inline]
       Definition at line 1018 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> void
       std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc
       >::swap (unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > & __x)
       [inline],  [noexcept]
       Definition at line 1031 of file debug/unordered_map.

Friends And Related Function Documentation
   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _ItT ,
       typename _SeqT , typename _CatT > friend class
       ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 890 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash  = std::hash<_Key>,
       typename _Pred  = std::equal_to<_Key>, typename _Alloc  =
       std::allocator<std::pair<const _Key, _Tp> >> template<typename _ItT ,
       typename _SeqT > friend class ::__gnu_debug::_Safe_local_iterator
       [friend]
       Definition at line 892 of file debug/unordered_map.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc+std::__debug::unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc >(3)
