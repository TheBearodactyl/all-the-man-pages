UDEV_DEVICE_GET_SYSPATH(3)                                                                udev_device_get_syspath                                                               UDEV_DEVICE_GET_SYSPATH(3)

NAME
       udev_device_get_syspath, udev_device_get_sysname, udev_device_get_sysnum, udev_device_get_devpath, udev_device_get_devnode, udev_device_get_devnum, udev_device_get_devtype,
       udev_device_get_subsystem, udev_device_get_driver, udev_device_get_udev, udev_device_get_parent, udev_device_get_parent_with_subsystem_devtype, udev_device_get_is_initialized,
       udev_device_get_action - Query device properties

SYNOPSIS
       #include <libudev.h>

       const char *udev_device_get_syspath(struct udev_device *udev_device);

       const char *udev_device_get_sysname(struct udev_device *udev_device);

       const char *udev_device_get_sysnum(struct udev_device *udev_device);

       const char *udev_device_get_devpath(struct udev_device *udev_device);

       const char *udev_device_get_devnode(struct udev_device *udev_device);

       dev_t udev_device_get_devnum(struct udev_device *udev_device);

       const char *udev_device_get_devtype(struct udev_device *udev_device);

       const char *udev_device_get_subsystem(struct udev_device *udev_device);

       const char *udev_device_get_driver(struct udev_device *udev_device);

       struct udev *udev_device_get_udev(struct udev_device *udev_device);

       struct udev_device *udev_device_get_parent(struct udev_device *udev_device);

       struct udev_device *udev_device_get_parent_with_subsystem_devtype(struct udev_device *udev_device, const char *subsystem, const char *devtype);

       int udev_device_get_is_initialized(struct udev_device *udev_device);

       const char *udev_device_get_action(struct udev_device *udev_device);

RETURN VALUE
       On success, udev_device_get_syspath(), udev_device_get_sysname(), udev_device_get_sysnum(), udev_device_get_devpath(), udev_device_get_devnode(), udev_device_get_devtype(),
       udev_device_get_subsystem(), udev_device_get_driver() and udev_device_get_action() return a pointer to a constant string that describes the requested property. The lifetime of this string is
       bound to the device it was requested on. On failure, each function may return NULL.

       On success, udev_device_get_devnum() returns the device type of the passed device. On failure, a device type with minor and major number set to 0 is returned.

       udev_device_get_udev() always returns a valid pointer to the udev context that this device belongs to.

       On success, udev_device_get_parent() and udev_device_get_parent_with_subsystem_devtype() return a pointer to the parent device. No additional reference to this device is acquired, but the child
       device owns a reference to such a parent device. On failure, NULL is returned.

       On success, udev_device_get_is_initialized() returns either 1 or 0, depending on whether the passed device has already been initialized by udev or not. On failure, a negative error code is
       returned. Note that devices for which no udev rules are defined are never reported initialized.

SEE ALSO
       udev_new(3), udev_device_new_from_syspath(3), udev_device_has_tag(3), udev_enumerate_new(3), udev_monitor_new_from_netlink(3), udev_list_entry(3), systemd(1)

systemd 253                                                                                                                                                                     UDEV_DEVICE_GET_SYSPATH(3)
