LLVM-DWARFUTIL(1)                                                                                  LLVM                                                                                  LLVM-DWARFUTIL(1)

NAME
       llvm-dwarfutil - A tool to copy and manipulate debug info

SYNOPSIS
       llvm-dwarfutil [options] input output

DESCRIPTION
       llvm-dwarfutil is a tool to copy and manipulate debug info.

       In basic usage, it makes a semantic copy of the input to the output. If any options are specified, the output may be modified along the way, e.g.  by removing unused debug info.

       If "-" is specified for the input file, the input is read from the program's standard input stream. If "-" is specified for the output file, the output is written to the standard output stream of
       the program.

       The tool is still in active development.

COMMAND-LINE OPTIONS
       --garbage-collection
              Removes pieces of debug information related to discarded sections.  When the linker does section garbage collection the abandoned debug info is left behind. Such abandoned debug info  ref‐
              erences address ranges using tombstone values. Thus, when this option is specified, the tool removes debug info which is marked with the tombstone value.

              That option is enabled by default.

       --odr-deduplication
              Remove  duplicated  types (if "One Definition Rule" is supported by source language). Keeps first type definition and removes other definitions, potentially significantly reducing the size
              of output debug info.

              That option is enabled by default.

       --help, -h
              Print a summary of command line options.

       --no-garbage-collection
              Disable --garbage-collection.

       --no-odr-deduplication
              Disable --odr-deduplication.

       --no-separate-debug-file
              Disable --separate-debug-file.

       --num-threads=<n>, -j
              Specifies the maximum number (n) of simultaneous threads to use for processing.

       --separate-debug-file
              Generate separate file containing output debug info. Using llvm-dwarfutil with that option equals to the following set of commands:

          :program:`llvm-objcopy` --only-keep-debug in-file out-file.debug
          :program:`llvm-objcopy` --strip-debug in-file out-file
          :program:`llvm-objcopy` --add-gnu-debuglink=out-file.debug out-file

       --tombstone=<value>
              <value> can be one of the following values:

                 • bfd: zero for all addresses and [1,1] for DWARF v4 (or less) address ranges and exec.

                 • maxpc: -1 for all addresses and -2 for DWARF v4 (or less) address ranges.

                 • universal: both bfd and maxpc.

                 • exec: match with address ranges of executable sections.

                 The value universal is used by default.

       --verbose
              Enable verbose logging. This option disables multi-thread mode.

       --verify
              Run the DWARF verifier on the output DWARF debug info.

       --version
              Print the version of this program.

SUPPORTED FORMATS
       The following formats are currently supported by llvm-dwarfutil:

       ELF

EXIT STATUS
       llvm-dwarfutil exits with a non-zero exit code if there is an error.  Otherwise, it exits with code 0.

BUGS
       To report bugs, please visit <https://github.com/llvm/llvm-project/labels/tools:llvm-dwarfutil/>.

AUTHOR
       Maintained by the LLVM Team (https://llvm.org/).

COPYRIGHT
       2003-2023, LLVM Project

15                                                                                              2023-02-26                                                                               LLVM-DWARFUTIL(1)
