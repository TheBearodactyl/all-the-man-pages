XkbGetAccessXTimeout(3)                                                                        XKB FUNCTIONS                                                                       XkbGetAccessXTimeout(3)

NAME
       XkbGetAccessXTimeout - Queries the current AccessXTimeout options for a keyboard device

SYNOPSIS
       Bool  XkbGetAccessXTimeout  (Display  *display,  unsigned  int  device_spec,  unsigned  short  *timeout_rtrn,  unsigned  int *ctrls_mask_rtrn, unsigned int *ctrls_values_rtrn, unsigned short *op‐
              tions_mask_rtrn, unsigned short *options_values_rtrn);

ARGUMENTS
       display
              unsigned short

       device_spec
              device to query, or XkbUseCoreKbd

       timeout_rtrn
              delay until AccessXTimeout, seconds

       ctrls_mask_rtrn
              backfilled with controls to modify

       ctrls_values_rtrn
              backfilled with on/off status for controls

       options_mask_rtrn
              backfilled with ax_options to modify

       options_values_rtrn
              backfilled with values for ax_options

DESCRIPTION
       In environments where computers are shared, features such as SlowKeys present a problem: if SlowKeys is on, the keyboard can appear to be unresponsive because keys are not accepted until they are
       held  for a certain period of time. To help solve this problem, Xkb provides an AccessXTimeout control to automatically change the enabled/disabled state of any boolean controls and to change the
       value of the AccessXKeys and AccessXFeedback control attributes if the keyboard is idle for a specified period of time.

       When a timeout as specified by AccessXTimeout occurs and a control is consequently modified, Xkb generates an XkbControlsNotify event.

       XkbGetAccessXTimeout sends a request to the X server to obtain the current values for the AccessXTimeout attributes, waits for a reply, and backfills the values into  the  appropriate  arguments.
       The parameters options_mask_rtrn and options_values_rtrn are backfilled with the options to modify and the values for ax_options, which is a field in the XkbControlsRec structure.  XkbGetAccessX‐
       Timeout returns True if successful; if a compatible version of the Xkb extension is not available in the server, XkbGetAccessXTimeout returns False.

RETURN VALUES
       True           The XkbGetAccessXTimeout returns True when it successfully sends a request to the X server to obtain the current values for the AccessXTimeout attributes, waits for  a  reply,  and
                      backfills the values into the appropriate arguments.

       False          The XkbGetAccessXTimeout function returns False if a compatible version of the Xkb extension is not available in the server.

STRUCTURES
       The XkbControlsRec structure is defined as follows:

       #define XkbMaxLegalKeyCode     255
       #define XkbPerKeyBitArraySize  ((XkbMaxLegalKeyCode+1)/8)

       typedef struct {
           unsigned char   mk_dflt_btn;      /* default button for keyboard driven mouse */
           unsigned char   num_groups;       /* number of keyboard groups */
           unsigned char   groups_wrap;      /* how to wrap out-of-bounds groups */
           XkbModsRec      internal;         /* defines server internal modifiers */
           XkbModsRec      ignore_lock;      /* modifiers to ignore when checking for grab */
           unsigned int    enabled_ctrls;    /* 1 bit => corresponding boolean control enabled */
           unsigned short  repeat_delay;     /* ms delay until first repeat */
           unsigned short  repeat_interval;  /* ms delay between repeats */
           unsigned short  slow_keys_delay;  /* ms minimum time key must be down to be ok */
           unsigned short  debounce_delay;   /* ms delay before key reactivated */
           unsigned short  mk_delay;         /* ms delay to second mouse motion event */
           unsigned short  mk_interval;      /* ms delay between repeat mouse events */
           unsigned short  mk_time_to_max;   /* # intervals until constant mouse move */
           unsigned short  mk_max_speed;     /* multiplier for maximum mouse speed */
           short           mk_curve;         /* determines mouse move curve type */
           unsigned short  ax_options;       /* 1 bit => Access X option enabled */
           unsigned short  ax_timeout;       /* seconds until Access X disabled */
           unsigned short  axt_opts_mask;    /* 1 bit => options to reset on Access X timeout */
           unsigned short  axt_opts_values;  /* 1 bit => turn option on, 0=> off */
           unsigned int    axt_ctrls_mask;   /* which bits in enabled_ctrls to modify */
           unsigned int    axt_ctrls_values; /* values for new bits in enabled_ctrls */
           unsigned char   per_key_repeat[XkbPerKeyBitArraySize];  /* per key auto repeat */
       } XkbControlsRec, *XkbControlsPtr;

X Version 11                                                                                   libX11 1.8.4                                                                        XkbGetAccessXTimeout(3)
