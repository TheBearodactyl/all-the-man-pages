std::__debug::unstd::__debug::unordered_set<__Value,A_Hash,(_Pred, _Alloc >(3)

NAME
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc > - Class
       std::unordered_set with safety/checking/debug instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and unordered_set< _Value,
       std::hash< _Value >, std::equal_to< _Value >, std::allocator< _Value >
       >.

   Public Types
       typedef _Base::allocator_type allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator,
           unordered_set > const_iterator
       typedef __gnu_debug::_Safe_local_iterator< _Base_const_local_iterator,
           unordered_set > const_local_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef _Base::difference_type difference_type
       typedef _Base::hasher hasher
       using insert_return_type = _Node_insert_return< iterator, node_type >
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, unordered_set >
           iterator
       typedef _Base::key_equal key_equal
       typedef _Base::key_type key_type
       typedef __gnu_debug::_Safe_local_iterator< _Base_local_iterator,
           unordered_set > local_iterator
       using node_type = typename _Base::node_type
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef _Base::size_type size_type
       typedef _Base::value_type value_type

   Public Member Functions
       unordered_set (_Base_ref __x)
       template<typename _InputIterator > unordered_set (_InputIterator
           __first, _InputIterator __last, size_type __n, const allocator_type
           &__a)
       template<typename _InputIterator > unordered_set (_InputIterator
           __first, _InputIterator __last, size_type __n, const hasher &__hf,
           const allocator_type &__a)
       template<typename _InputIterator > unordered_set (_InputIterator
           __first, _InputIterator __last, size_type __n=0, const hasher
           &__hf=hasher(), const key_equal &__eql=key_equal(), const
           allocator_type &__a=allocator_type())
       unordered_set (const allocator_type &__a)
       unordered_set (const unordered_set &)=default
       unordered_set (const unordered_set &__uset, const allocator_type &__a)
       unordered_set (initializer_list< value_type > __l, size_type __n, const
           allocator_type &__a)
       unordered_set (initializer_list< value_type > __l, size_type __n, const
           hasher &__hf, const allocator_type &__a)
       unordered_set (initializer_list< value_type > __l, size_type __n=0,
           const hasher &__hf=hasher(), const key_equal &__eql=key_equal(),
           const allocator_type &__a=allocator_type())
       unordered_set (size_type __n, const allocator_type &__a)
       unordered_set (size_type __n, const hasher &__hf, const allocator_type
           &__a)
       unordered_set (size_type __n, const hasher &__hf=hasher(), const
           key_equal &__eql=key_equal(), const allocator_type
           &__a=allocator_type())
       unordered_set (unordered_set &&)=default
       unordered_set (unordered_set &&__uset, const allocator_type &__a)
           noexcept(noexcept(_Base(std::move(__uset), __a)))
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       local_iterator begin (size_type __b)
       const_local_iterator begin (size_type __b) const
       size_type bucket_size (size_type __b) const
       const_iterator cbegin () const noexcept
       const_local_iterator cbegin (size_type __b) const
       const_iterator cend () const noexcept
       const_local_iterator cend (size_type __b) const
       void clear () noexcept
       template<typename... _Args> std::pair< iterator, bool > emplace (_Args
           &&... __args)
       template<typename... _Args> iterator emplace_hint (const_iterator
           __hint, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       local_iterator end (size_type __b)
       const_local_iterator end (size_type __b) const
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< iterator, iterator > equal_range (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< const_iterator, const_iterator > equal_range (const _Kt
           &__k) const
       std::pair< iterator, iterator > equal_range (const key_type &__key)
       std::pair< const_iterator, const_iterator > equal_range (const key_type
           &__key) const
       _Base_iterator erase (_Base_const_iterator __it)
       size_type erase (const key_type &__key)
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __it)
       iterator erase (iterator __it)
       node_type extract (const key_type &__key)
       node_type extract (const_iterator __position)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>> iterator
           find (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           const_iterator find (const _Kt &__k) const
       iterator find (const key_type &__key)
       const_iterator find (const key_type &__key) const
       template<typename _InputIterator > void insert (_InputIterator __first,
           _InputIterator __last)
       std::pair< iterator, bool > insert (const value_type &__obj)
       iterator insert (const_iterator __hint, const value_type &__obj)
       iterator insert (const_iterator __hint, node_type &&__nh)
       iterator insert (const_iterator __hint, value_type &&__obj)
       insert_return_type insert (node_type &&__nh)
       void insert (std::initializer_list< value_type > __l)
       std::pair< iterator, bool > insert (value_type &&__obj)
       float max_load_factor () const noexcept
       void max_load_factor (float __f)
       template<typename _H2 , typename _P2 > void merge (unordered_multiset<
           _Value, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_multiset<
           _Value, _H2, _P2, _Alloc > &__source)
       template<typename _H2 , typename _P2 > void merge (unordered_set<
           _Value, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_set<
           _Value, _H2, _P2, _Alloc > &__source)
       unordered_set & operator= (const unordered_set &)=default
       unordered_set & operator= (initializer_list< value_type > __l)
       unordered_set & operator= (unordered_set &&)=default
       void swap (unordered_set &__x) noexcept(noexcept(declval< _Base &
           >().swap(__x)))

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator
       template<typename _ItT , typename _SeqT > class
           ::__gnu_debug::_Safe_local_iterator

Detailed Description
   template<typename _Value, typename _Hash = std::hash<_Value>, typename
       _Pred = std::equal_to<_Value>, typename _Alloc =
       std::allocator<_Value>>
       class std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >"Class
       std::unordered_set with safety/checking/debug instrumentation.

       Definition at line 60 of file debug/unordered_set.

Member Typedef Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::allocator_type
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::allocator_type
       Definition at line 94 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_iterator<
       _Base_const_iterator, unordered_set> std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::const_iterator
       Definition at line 106 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_local_iterator<
       _Base_const_local_iterator, unordered_set> std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::const_local_iterator
       Definition at line 110 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::const_pointer
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::const_pointer
       Definition at line 100 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::const_reference
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::const_reference
       Definition at line 102 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::difference_type
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::difference_type
       Definition at line 91 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::hasher
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::hasher
       Definition at line 92 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> using std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::insert_return_type =
       _Node_insert_return<iterator, node_type>
       Definition at line 412 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_iterator<
       _Base_iterator, unordered_set> std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::iterator
       Definition at line 104 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::key_equal
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::key_equal
       Definition at line 93 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::key_type
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::key_type
       Definition at line 96 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_local_iterator<
       _Base_local_iterator, unordered_set> std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::local_iterator
       Definition at line 108 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> using std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::node_type =  typename _Base::node_type
       Definition at line 411 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::pointer
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::pointer
       Definition at line 99 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::reference
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::reference
       Definition at line 101 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::size_type
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::size_type
       Definition at line 90 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::value_type
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::value_type
       Definition at line 97 of file debug/unordered_set.

Constructor & Destructor Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (size_type __n, const hasher & __hf =
       hasher(), const key_equal & __eql = key_equal(), const allocator_type &
       __a = allocator_type()) [inline],  [explicit]
       Definition at line 115 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::unordered_set (_InputIterator __first, _InputIterator __last,
       size_type __n = 0, const hasher & __hf = hasher(), const key_equal &
       __eql = key_equal(), const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 122 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (_Base_ref __x) [inline]
       Definition at line 134 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (const allocator_type & __a) [inline],
       [explicit]
       Definition at line 140 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (const unordered_set< _Value, _Hash,
       _Pred, _Alloc > & __uset, const allocator_type & __a) [inline]
       Definition at line 143 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (unordered_set< _Value, _Hash, _Pred,
       _Alloc > && __uset, const allocator_type & __a) [inline],  [noexcept]
       Definition at line 147 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (initializer_list< value_type > __l,
       size_type __n = 0, const hasher & __hf = hasher(), const key_equal &
       __eql = key_equal(), const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 153 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (size_type __n, const allocator_type &
       __a) [inline]
       Definition at line 160 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (size_type __n, const hasher & __hf,
       const allocator_type & __a) [inline]
       Definition at line 164 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::unordered_set (_InputIterator __first, _InputIterator __last,
       size_type __n, const allocator_type & __a) [inline]
       Definition at line 170 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::unordered_set (_InputIterator __first, _InputIterator __last,
       size_type __n, const hasher & __hf, const allocator_type & __a)
       [inline]
       Definition at line 177 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (initializer_list< value_type > __l,
       size_type __n, const allocator_type & __a) [inline]
       Definition at line 183 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_set< _Value, _Hash,
       _Pred, _Alloc >::unordered_set (initializer_list< value_type > __l,
       size_type __n, const hasher & __hf, const allocator_type & __a)
       [inline]
       Definition at line 189 of file debug/unordered_set.

Member Function Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const _Base & std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::_M_base () const [inline],  [noexcept]
       Definition at line 604 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> _Base & std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::_M_base () [inline],  [noexcept]
       Definition at line 601 of file debug/unordered_set.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::begin () const [inline],  [noexcept]
       Definition at line 236 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::begin () [inline],  [noexcept]
       Definition at line 232 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> local_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::begin (size_type __b) [inline]
       Definition at line 257 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::begin
       (size_type __b) const [inline]
       Definition at line 271 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> size_type std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::bucket_size (size_type __b) const [inline]
       Definition at line 302 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::cbegin () const [inline],  [noexcept]
       Definition at line 248 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::cbegin
       (size_type __b) const [inline]
       Definition at line 285 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::cend () const [inline],  [noexcept]
       Definition at line 252 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::cend
       (size_type __b) const [inline]
       Definition at line 292 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::clear () [inline],  [noexcept]
       Definition at line 225 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename... _Args> std::pair<
       iterator, bool > std::__debug::unordered_set< _Value, _Hash, _Pred,
       _Alloc >::emplace (_Args &&... __args) [inline]
       Definition at line 327 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename... _Args> iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::emplace_hint (const_iterator __hint, _Args &&... __args) [inline]
       Definition at line 337 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::end () const [inline],  [noexcept]
       Definition at line 244 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::end () [inline],  [noexcept]
       Definition at line 240 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> local_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::end (size_type __b) [inline]
       Definition at line 264 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::end
       (size_type __b) const [inline]
       Definition at line 278 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< iterator, iterator
       > std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const _Kt & __k) [inline]
       Definition at line 521 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< const_iterator,
       const_iterator > std::__debug::unordered_set< _Value, _Hash, _Pred,
       _Alloc >::equal_range (const _Kt & __k) const [inline]
       Definition at line 540 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< iterator, iterator >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const key_type & __key) [inline]
       Definition at line 510 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< const_iterator, const_iterator >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const key_type & __key) const [inline]
       Definition at line 529 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> _Base_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::erase (_Base_const_iterator __it)
       [inline]
       Definition at line 568 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> size_type std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::erase (const key_type & __key) [inline]
       Definition at line 548 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::erase (const_iterator __first, const_iterator
       __last) [inline]
       Definition at line 582 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::erase (const_iterator __it) [inline]
       Definition at line 561 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::erase (iterator __it) [inline]
       Definition at line 575 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> node_type std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::extract (const key_type & __key) [inline]
       Definition at line 422 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> node_type std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::extract (const_iterator __position) [inline]
       Definition at line 415 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::find
       (const _Kt & __k) [inline]
       Definition at line 486 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> const_iterator
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::find
       (const _Kt & __k) const [inline]
       Definition at line 499 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::find (const key_type & __key) [inline]
       Definition at line 478 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::find (const key_type & __key) const
       [inline]
       Definition at line 491 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator > void
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::insert
       (_InputIterator __first, _InputIterator __last) [inline]
       Definition at line 395 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< iterator, bool >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::insert
       (const value_type & __obj) [inline]
       Definition at line 348 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::insert (const_iterator __hint, const value_type
       & __obj) [inline]
       Definition at line 357 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::insert (const_iterator __hint, node_type &&
       __nh) [inline]
       Definition at line 439 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::insert (const_iterator __hint, value_type &&
       __obj) [inline]
       Definition at line 376 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> insert_return_type std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::insert (node_type && __nh) [inline]
       Definition at line 431 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::insert (std::initializer_list< value_type >
       __l) [inline]
       Definition at line 386 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< iterator, bool >
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::insert
       (value_type && __obj) [inline]
       Definition at line 367 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> float std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::max_load_factor () const [inline],  [noexcept]
       Definition at line 312 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::max_load_factor (float __f) [inline]
       Definition at line 316 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_multiset< _Value, _H2, _P2, _Alloc > && __source) [inline]
       Definition at line 470 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_multiset< _Value, _H2, _P2, _Alloc > & __source) [inline]
       Definition at line 461 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_set< _Value, _H2, _P2, _Alloc > && __source) [inline]
       Definition at line 456 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_set< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_set< _Value, _H2, _P2, _Alloc > & __source) [inline]
       Definition at line 447 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> unordered_set & std::__debug::unordered_set<
       _Value, _Hash, _Pred, _Alloc >::operator= (initializer_list< value_type
       > __l) [inline]
       Definition at line 204 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_set< _Value,
       _Hash, _Pred, _Alloc >::swap (unordered_set< _Value, _Hash, _Pred,
       _Alloc > & __x) [inline],  [noexcept]
       Definition at line 217 of file debug/unordered_set.

Friends And Related Function Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _ItT , typename _SeqT ,
       typename _CatT > friend class ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 77 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _ItT , typename _SeqT >
       friend class ::__gnu_debug::_Safe_local_iterator [friend]
       Definition at line 79 of file debug/unordered_set.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++       std::__debug::unordered_set<2_Value, _Hash, _Pred, _Alloc >(3)
