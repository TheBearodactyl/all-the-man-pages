std::subtract_wistd::subtract_with_carry_engine<u_UIntType,(__w, __s, __r >(3)

NAME
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r > - The
       Marsaglia-Zaman generator.

SYNOPSIS
       #include <random>

   Public Types
       typedef _UIntType result_type

   Public Member Functions
       template<typename _Sseq , typename  = _If_seed_seq<_Sseq>>
           subtract_with_carry_engine (_Sseq &__q)
           Constructs a subtract_with_carry_engine random number engine seeded
           from the seed sequence __q.
       subtract_with_carry_engine (result_type __sd)
           Constructs an explicitly seeded subtract_with_carry_engine random
           number generator.
       void discard (unsigned long long __z)
           Discard a sequence of random numbers.
       result_type operator() ()
           Gets the next random number in the sequence.
       template<typename _Sseq > _If_seed_seq< _Sseq > seed (_Sseq &__q)
           Seeds the initial state $x_0$ of the % subtract_with_carry_engine
           random number generator.
       template<typename _Sseq > auto seed (_Sseq &__q) -> _If_seed_seq< _Sseq
           >
       void seed (result_type __sd=default_seed)
           Seeds the initial state $x_0$ of the random number generator.

   Static Public Member Functions
       static constexpr result_type max ()
           Gets the inclusive maximum value of the range of random integers
           returned by this generator.
       static constexpr result_type min ()
           Gets the inclusive minimum value of the range of random integers
           returned by this generator.

   Static Public Attributes
       static constexpr result_type default_seed
       static constexpr size_t long_lag
       static constexpr size_t short_lag
       static constexpr size_t word_size

   Friends
       template<typename _UIntType1 , size_t __w1, size_t __s1, size_t __r1,
           typename _CharT , typename _Traits > std::basic_ostream< _CharT,
           _Traits > & operator<< (std::basic_ostream< _CharT, _Traits >
           &__os, const std::subtract_with_carry_engine< _UIntType1, __w1,
           __s1, __r1 > &__x)
           Inserts the current state of a % subtract_with_carry_engine random
           number generator engine __x into the output stream __os.
       bool operator== (const subtract_with_carry_engine &__lhs, const
           subtract_with_carry_engine &__rhs)
           Compares two % subtract_with_carry_engine random number generator
           objects of the same type for equality.
       template<typename _UIntType1 , size_t __w1, size_t __s1, size_t __r1,
           typename _CharT , typename _Traits > std::basic_istream< _CharT,
           _Traits > & operator>> (std::basic_istream< _CharT, _Traits >
           &__is, std::subtract_with_carry_engine< _UIntType1, __w1, __s1,
           __r1 > &__x)
           Extracts the current state of a % subtract_with_carry_engine random
           number generator engine __x from the input stream __is.

Detailed Description
   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
       class std::subtract_with_carry_engine< _UIntType, __w, __s, __r >"The
       Marsaglia-Zaman generator.

       This is a model of a Generalized Fibonacci discrete random number
       generator, sometimes referred to as the SWC generator.

       A discrete random number generator that produces pseudorandom numbers
       using:                                               o
           x_{i}tarrow(x_{i - s} - x_{i - r} - carry_{i-1}) d ]

       The size of the state is $r$ and the maximum period of the generator is
       $(m^r - m^s - 1)$.

       Definition at line 695 of file random.

Member Typedef Documentation
   template<typename _UIntType , size_t __w, size_t __s, size_t __r> typedef
       _UIntType std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::result_type
       The type of the generated random value.

       Definition at line 710 of file random.

Constructor & Destructor Documentation
   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::subtract_with_carry_engine () [inline]
       Definition at line 718 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::subtract_with_carry_engine (result_type __sd) [inline],  [explicit]
       Constructs an explicitly seeded subtract_with_carry_engine random
       number generator.

       Definition at line 726 of file random.

       References std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::seed().

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       template<typename _Sseq , typename  = _If_seed_seq<_Sseq>>
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::subtract_with_carry_engine (_Sseq & __q) [inline],  [explicit]
       Constructs a subtract_with_carry_engine random number engine seeded
       from the seed sequence __q.

       Parameters
           __q the seed sequence.

       Definition at line 737 of file random.

       References std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::seed().

Member Function Documentation
   template<typename _UIntType , size_t __w, size_t __s, size_t __r> void
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r >::discard
       (unsigned long long __z) [inline]
       Discard a sequence of random numbers.

       Definition at line 783 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> static
       constexpr result_type std::subtract_with_carry_engine< _UIntType, __w,
       __s, __r >::max () [inline],  [static],  [constexpr]
       Gets the inclusive maximum value of the range of random integers
       returned by this generator.

       Definition at line 776 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> static
       constexpr result_type std::subtract_with_carry_engine< _UIntType, __w,
       __s, __r >::min () [inline],  [static],  [constexpr]
       Gets the inclusive minimum value of the range of random integers
       returned by this generator.

       Definition at line 768 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       subtract_with_carry_engine< _UIntType, __w, __s, __r >::result_type
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r >::operator()
       Gets the next random number in the sequence.

       Definition at line 597 of file bits/random.tcc.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       template<typename _Sseq > _If_seed_seq< _Sseq >
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r >::seed
       (_Sseq & __q)
       Seeds the initial state $x_0$ of the % subtract_with_carry_engine
       random number generator.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       template<typename _Sseq > auto std::subtract_with_carry_engine<
       _UIntType, __w, __s, __r >::seed (_Sseq & __q) -> _If_seed_seq<_Sseq>
             "

       Definition at line 570 of file bits/random.tcc.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> void
       std::subtract_with_carry_engine< _UIntType, __w, __s, __r >::seed
       (result_type __sd = default_seed)
       Seeds the initial state $x_0$ of the random number generator.
       N1688[4.19] modifies this as follows. If __value == 0, sets value to
       19780503. In any case, with a linear congruential generator lcg(i)
       having parameters $ m_{lcg} = 2147483563, a_{lcg} = 40014, c_olcg} = 0,
       and lcgo0) = value $, sets $ x_{-r} ots x_{-1} $ to $ lcg(1) d ots
       lcg(r) d $ respectively. If $ x_{-1} = 0 $ set carry to 1, otherwise
       sets carry to 0.

       Definition at line 541 of file bits/random.tcc.

       Referenced by std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::subtract_with_carry_engine().

Friends And Related Function Documentation
   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       template<typename _UIntType1 , size_t __w1, size_t __s1, size_t __r1,
       typename _CharT , typename _Traits > std::basic_ostream< _CharT,
       _Traits > & operator<< (std::basic_ostream< _CharT, _Traits > & __os,
       const std::subtract_with_carry_engine< _UIntType1, __w1, __s1, __r1 > &
       __x) [friend]
       Inserts the current state of a % subtract_with_carry_engine random
       number generator engine __x into the output stream __os.

       Parameters
           __os An output stream.
           __x A % subtract_with_carry_engine random number generator engine.

       Returns
           The output stream with the state of __x inserted or in an error
           state.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> bool
       operator== (const subtract_with_carry_engine< _UIntType, __w, __s, __r
       > & __lhs, const subtract_with_carry_engine< _UIntType, __w, __s, __r >
       & __rhs) [friend]
       Compares two % subtract_with_carry_engine random number generator
       objects of the same type for equality.

       Parameters
           __lhs A % subtract_with_carry_engine random number generator
           object.
           __rhs Another % subtract_with_carry_engine random number generator
           object.

       Returns
           true if the infinite sequences of generated values would be equal,
           false otherwise.

       Definition at line 808 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r>
       template<typename _UIntType1 , size_t __w1, size_t __s1, size_t __r1,
       typename _CharT , typename _Traits > std::basic_istream< _CharT,
       _Traits > & operator>> (std::basic_istream< _CharT, _Traits > & __is,
       std::subtract_with_carry_engine< _UIntType1, __w1, __s1, __r1 > & __x)
       [friend]
       Extracts the current state of a % subtract_with_carry_engine random
       number generator engine __x from the input stream __is.

       Parameters
           __is An input stream.
           __x A % subtract_with_carry_engine random number generator engine.

       Returns
           The input stream with the state of __x extracted or in an error
           state.

Member Data Documentation
   template<typename _UIntType , size_t __w, size_t __s, size_t __r> constexpr
       result_type std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::default_seed [static],  [constexpr]
       Definition at line 716 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> constexpr
       size_t std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::long_lag [static],  [constexpr]
       Definition at line 715 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> constexpr
       size_t std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::short_lag [static],  [constexpr]
       Definition at line 714 of file random.

   template<typename _UIntType , size_t __w, size_t __s, size_t __r> constexpr
       size_t std::subtract_with_carry_engine< _UIntType, __w, __s, __r
       >::word_size [static],  [constexpr]
       Definition at line 713 of file random.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++       std::subtract_with_carry_engine< _UIntType, __w, __s, __r >(3)
