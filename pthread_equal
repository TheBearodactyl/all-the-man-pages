pthread_equal(3)           Library Functions Manual           pthread_equal(3)

NAME
       pthread_equal - compare thread IDs

LIBRARY
       POSIX threads library (libpthread, -lpthread)

SYNOPSIS
       #include <pthread.h>

       int pthread_equal(pthread_t t1, pthread_t t2);

DESCRIPTION
       The pthread_equal() function compares two thread identifiers.

RETURN VALUE
       If  the  two  thread  IDs  are equal, pthread_equal() returns a nonzero
       value; otherwise, it returns 0.

ERRORS
       This function always succeeds.

ATTRIBUTES
       For an  explanation  of  the  terms  used  in  this  section,  see  at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │pthread_equal()                             │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

NOTES
       The  pthread_equal() function is necessary because thread IDs should be
       considered opaque: there is no portable way for applications to direct‐
       ly compare two pthread_t values.

SEE ALSO
       pthread_create(3), pthread_self(3), pthreads(7)

Linux man-pages 6.04              2023-03-30                  pthread_equal(3)
PTHREAD_EQUAL(3P)          POSIX Programmer's Manual         PTHREAD_EQUAL(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pthread_equal — compare thread IDs

SYNOPSIS
       #include <pthread.h>

       int pthread_equal(pthread_t t1, pthread_t t2);

DESCRIPTION
       This function shall compare the thread IDs t1 and t2.

RETURN VALUE
       The pthread_equal() function shall return a non-zero value if t1 and t2
       are equal; otherwise, zero shall be returned.

       If either t1 or t2 are not valid thread IDs, the behavior is undefined.

ERRORS
       No errors are defined.

       The pthread_equal() function shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       Implementations  may  choose to define a thread ID as a structure. This
       allows additional flexibility and robustness over using  an  int.   For
       example, a thread ID could include a sequence number that allows detec‐
       tion of ``dangling IDs'' (copies of a  thread  ID  that  has  been  de‐
       tached).  Since the C language does not support comparison on structure
       types, the pthread_equal() function is provided to compare thread IDs.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_create(), pthread_self()

       The Base Definitions volume of POSIX.1‐2017, <pthread.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                    PTHREAD_EQUAL(3P)
