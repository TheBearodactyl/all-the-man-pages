std::error_condition(3)    Library Functions Manual    std::error_condition(3)

NAME
       std::error_condition

SYNOPSIS
   Public Member Functions
       template<typename _ErrorConditionEnum , typename  = typename
           enable_if<is_error_condition_enum<_ErrorConditionEnum>::value>::type>
           error_condition (_ErrorConditionEnum __e) noexcept
       error_condition (int __v, const error_category &__cat) noexcept
       void assign (int __v, const error_category &__cat) noexcept
       const error_category & category () const noexcept
       void clear () noexcept
       string message () const
       operator bool () const noexcept
       template<typename _ErrorConditionEnum > enable_if<
           is_error_condition_enum< _ErrorConditionEnum >::value,
           error_condition & >::type operator= (_ErrorConditionEnum __e)
           noexcept
       int value () const noexcept

   Related Functions
       (Note that these are not member functions.)
       error_condition make_error_condition (errc __e) noexcept
           Create an error_condition representing a standard errc condition.
       bool operator!= (const error_condition &__lhs, const error_code &__rhs)
           noexcept
       bool operator!= (const error_condition &__lhs, const error_condition
           &__rhs) noexcept
       bool operator< (const error_condition &__lhs, const error_condition
           &__rhs) noexcept
           Define an ordering for error_condition objects.
       bool operator== (const error_condition &__lhs, const error_code &__rhs)
           noexcept
       bool operator== (const error_condition &__lhs, const error_condition
           &__rhs) noexcept

Detailed Description
       Class error_condition

       This class represents error conditions that may be visible at an API
       boundary. Different error_code values that can occur within a library
       or module might map to the same error_condition.

       An error_condition represents something that the program can test for,
       and subsequently take appropriate action.

       Since
           C++11

       Definition at line 297 of file system_error.

Constructor & Destructor Documentation
   std::error_condition::error_condition () [inline],  [noexcept]
       Definition at line 300 of file system_error.

   std::error_condition::error_condition (int __v, const error_category &
       __cat) [inline],  [noexcept]
       Definition at line 303 of file system_error.

   template<typename _ErrorConditionEnum , typename  = typename
       enable_if<is_error_condition_enum<_ErrorConditionEnum>::value>::type>
       std::error_condition::error_condition (_ErrorConditionEnum __e)
       [inline],  [noexcept]
       Definition at line 308 of file system_error.

Member Function Documentation
   void std::error_condition::assign (int __v, const error_category & __cat)
       [inline],  [noexcept]
       Definition at line 312 of file system_error.

   const error_category & std::error_condition::category () const [inline],
       [noexcept]
       Definition at line 334 of file system_error.

   void std::error_condition::clear () [inline],  [noexcept]
       Definition at line 326 of file system_error.

   string std::error_condition::message () const [inline]
       Definition at line 338 of file system_error.

   std::error_condition::operator bool () const [inline],  [explicit],
       [noexcept]
       Definition at line 341 of file system_error.

   template<typename _ErrorConditionEnum > enable_if< is_error_condition_enum<
       _ErrorConditionEnum >::value, error_condition & >::type
       std::error_condition::operator= (_ErrorConditionEnum __e) [inline],
       [noexcept]
       Definition at line 322 of file system_error.

   int std::error_condition::value () const [inline],  [noexcept]
       Definition at line 331 of file system_error.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023         std::error_condition(3)
