mblen(3)                                                                                 Library Functions Manual                                                                                 mblen(3)

NAME
       mblen - determine number of bytes in next multibyte character

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdlib.h>

       int mblen(const char s[.n], size_t n);

DESCRIPTION
       If  s  is not NULL, the mblen() function inspects at most n bytes of the multibyte string starting at s and extracts the next complete multibyte character.  It uses a static anonymous shift state
       known only to the mblen() function.  If the multibyte character is not the null wide character, it returns the number of bytes that were consumed from s.  If the multibyte character is  the  null
       wide character, it returns 0.

       If the n bytes starting at s do not contain a complete multibyte character, mblen() returns -1.  This can happen even if n is greater than or equal to MB_CUR_MAX, if the multibyte string contains
       redundant shift sequences.

       If the multibyte string starting at s contains an invalid multibyte sequence before the next complete character, mblen() also returns -1.

       If s is NULL, the mblen() function resets the shift state, known to only this function, to the initial state, and returns nonzero if the encoding has nontrivial shift state, or zero if the encod‐
       ing is stateless.

RETURN VALUE
       The  mblen() function returns the number of bytes parsed from the multibyte sequence starting at s, if a non-null wide character was recognized.  It returns 0, if a null wide character was recog‐
       nized.  It returns -1, if an invalid multibyte sequence was encountered or if it couldn't parse a complete multibyte character.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────────┐
       │Interface                                                                                                                                                        │ Attribute     │ Value          │
       ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────────┤
       │mblen()                                                                                                                                                          │ Thread safety │ MT-Unsafe race │
       └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────────┘

VERSIONS
       The function mbrlen(3) provides a better interface to the same functionality.

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of mblen() depends on the LC_CTYPE category of the current locale.

SEE ALSO
       mbrlen(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                        mblen(3)
MBLEN(3P)                                                                                POSIX Programmer's Manual                                                                               MBLEN(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       mblen — get number of bytes in a character

SYNOPSIS
       #include <stdlib.h>

       int mblen(const char *s, size_t n);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       If  s  is not a null pointer, mblen() shall determine the number of bytes constituting the character pointed to by s.  Except that the shift state of mbtowc() is not affected, it shall be equiva‐
       lent to:

           mbtowc((wchar_t *)0, s, n);

       The implementation shall behave as if no function defined in this volume of POSIX.1‐2017 calls mblen().

       The behavior of this function is affected by the LC_CTYPE category of the current locale. For a state-dependent encoding, this function shall be placed into its initial state by a call for  which
       its character pointer argument, s, is a null pointer. Subsequent calls with s as other than a null pointer shall cause the internal state of the function to be altered as necessary. A call with s
       as a null pointer shall cause this function to return a non-zero value if encodings have state dependency, and 0 otherwise. If the implementation employs special bytes to change the shift  state,
       these bytes shall not produce separate wide-character codes, but shall be grouped with an adjacent character. Changing the LC_CTYPE category causes the shift state of this function to be unspeci‐
       fied.

       The mblen() function need not be thread-safe.

RETURN VALUE
       If s is a null pointer, mblen() shall return a non-zero or 0 value, if character encodings, respectively, do or do not have state-dependent encodings. If s is not a null  pointer,  mblen()  shall
       either  return  0  (if  s points to the null byte), or return the number of bytes that constitute the character (if the next n or fewer bytes form a valid character), or return -1 (if they do not
       form a valid character) and may set errno to indicate the error.  In no case shall the value returned be greater than n or the value of the {MB_CUR_MAX} macro.

ERRORS
       The mblen() function may fail if:

       EILSEQ An invalid character sequence is detected. In the POSIX locale an [EILSEQ] error cannot occur since all byte values are valid characters.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbtowc(), mbstowcs(), wctomb(), wcstombs()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          MBLEN(3P)
