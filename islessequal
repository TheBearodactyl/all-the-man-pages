isgreater(3)                                                                             Library Functions Manual                                                                             isgreater(3)

NAME
       isgreater, isgreaterequal, isless, islessequal, islessgreater, isunordered - floating-point relational tests without exception for NaN

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       int isgreater(x, y);
       int isgreaterequal(x, y);
       int isless(x, y);
       int islessequal(x, y);
       int islessgreater(x, y);
       int isunordered(x, y);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

           All functions described here:
               _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       The normal relational operations (like <, "less than") fail if one of the operands is NaN.  This will cause an exception.  To avoid this, C99 defines the macros listed below.

       These macros are guaranteed to evaluate their arguments only once.  The arguments must be of real floating-point type (note: do not pass integer values as arguments to these macros, since the ar‐
       guments will not be promoted to real-floating types).

       isgreater()
              determines (x) > (y) without an exception if x or y is NaN.

       isgreaterequal()
              determines (x) >= (y) without an exception if x or y is NaN.

       isless()
              determines (x) < (y) without an exception if x or y is NaN.

       islessequal()
              determines (x) <= (y) without an exception if x or y is NaN.

       islessgreater()
              determines (x) < (y) || (x) > (y) without an exception if x or y is NaN.  This macro is not equivalent to x != y because that expression is true if x or y is NaN.

       isunordered()
              determines whether its arguments are unordered, that is, whether at least one of the arguments is a NaN.

RETURN VALUE
       The macros other than isunordered() return the result of the relational comparison; these macros return 0 if either argument is a NaN.

       isunordered() returns 1 if x or y is NaN and 0 otherwise.

ERRORS
       No errors occur.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │isgreater(), isgreaterequal(), isless(), islessequal(), islessgreater(), isunordered()                                                                                  │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

VERSIONS
       Not all hardware supports these functions, and where hardware support isn't provided, they will be emulated by macros.  This will result in a performance penalty.  Don't use  these  functions  if
       NaN is of no concern for you.

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

SEE ALSO
       fpclassify(3), isnan(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                    isgreater(3)
ISLESSEQUAL(3P)                                                                          POSIX Programmer's Manual                                                                         ISLESSEQUAL(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       islessequal — test if x is less than or equal to y

SYNOPSIS
       #include <math.h>

       int islessequal(real-floating x, real-floating y);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The  islessequal()  macro  shall  determine  whether  its first argument is less than or equal to its second argument. The value of islessequal(x, y) shall be equal to (x) <= (y); however, unlike
       (x) <= (y), islessequal(x, y) shall not raise the invalid floating-point exception when x and y are unordered.

RETURN VALUE
       Upon successful completion, the islessequal() macro shall return the value of (x) <= (y).

       If x or y is NaN, 0 shall be returned.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       The relational and equality operators support the usual mathematical relationships between numeric values. For any ordered pair of numeric values, exactly one of the relationships (less, greater,
       and equal) is true. Relational operators may raise the invalid floating-point exception when argument values are NaNs. For a NaN and a numeric value, or for two NaNs, just the unordered relation‐
       ship is true. This macro is a quiet (non-floating-point exception raising) version of a relational operator. It facilitates writing efficient code that accounts for NaNs without suffering the in‐
       valid floating-point exception. In the SYNOPSIS section, real-floating indicates that the argument shall be an expression of real-floating type.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       isgreater(), isgreaterequal(), isless(), islessgreater(), isunordered()

       The Base Definitions volume of POSIX.1‐2017, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                    ISLESSEQUAL(3P)
