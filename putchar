puts(3)                    Library Functions Manual                    puts(3)

NAME
       fputc, fputs, putc, putchar, puts - output of characters and strings

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>

       int fputc(int c, FILE *stream);
       int putc(int c, FILE *stream);
       int putchar(int c);

       int fputs(const char *restrict s, FILE *restrict stream);
       int puts(const char *s);

DESCRIPTION
       fputc() writes the character c, cast to an unsigned char, to stream.

       putc()  is equivalent to fputc() except that it may be implemented as a
       macro which evaluates stream more than once.

       putchar(c) is equivalent to putc(c, stdout).

       fputs() writes the string s to stream,  without  its  terminating  null
       byte ('\0').

       puts() writes the string s and a trailing newline to stdout.

       Calls  to the functions described here can be mixed with each other and
       with calls to other output functions from the  stdio  library  for  the
       same output stream.

       For nonlocking counterparts, see unlocked_stdio(3).

RETURN VALUE
       fputc(),  putc(),  and putchar() return the character written as an un‐
       signed char cast to an int or EOF on error.

       puts() and fputs() return a nonnegative number on success,  or  EOF  on
       error.

ATTRIBUTES
       For  an  explanation  of  the  terms  used  in  this  section,  see at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │fputc(), fputs(), putc(), putchar(), puts() │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C89, C99.

BUGS
       It is not advisable to mix calls to output functions from the stdio li‐
       brary  with low-level calls to write(2) for the file descriptor associ‐
       ated with the same output stream; the results  will  be  undefined  and
       very probably not what you want.

SEE ALSO
       write(2),   ferror(3),   fgets(3),   fopen(3),   fputwc(3),  fputws(3),
       fseek(3), fwrite(3), putwchar(3), scanf(3), unlocked_stdio(3)

Linux man-pages 6.04              2023-03-30                           puts(3)
PUTCHAR(3P)                POSIX Programmer's Manual               PUTCHAR(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       putchar — put a byte on a stdout stream

SYNOPSIS
       #include <stdio.h>

       int putchar(int c);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The function call putchar(c) shall be equivalent to putc(c,stdout).

RETURN VALUE
       Refer to fputc().

ERRORS
       Refer to fputc().

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5, Standard I/O Streams, putc()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                          PUTCHAR(3P)
