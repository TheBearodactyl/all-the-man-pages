__gnu_cxx::throw_allocator_base< _Tp, _Cond >(3)                                         Library Functions Manual                                         __gnu_cxx::throw_allocator_base< _Tp, _Cond >(3)

NAME
       __gnu_cxx::throw_allocator_base< _Tp, _Cond > - Allocator class with logging and exception generation control. Intended to be used as an allocator_type in templatized code.

SYNOPSIS
       #include <throw_allocator.h>

       Inherits __gnu_cxx::annotate_base, and _Cond.

   Public Types
       typedef const value_type * const_pointer
       typedef const value_type & const_reference
       typedef std::ptrdiff_t difference_type
       typedef value_type * pointer
       typedef std::true_type propagate_on_container_move_assignment
       typedef value_type & reference
       typedef std::size_t size_type
       typedef _Tp value_type

   Public Member Functions
       const_pointer address (const_reference __x) const noexcept
       pointer address (reference __x) const noexcept
       pointer allocate (size_type __n, const void *hint=0)
       void check (size_t label)
       void check (size_type __n)
       void check_allocated (pointer __p, size_type __n)
       map_alloc_type::iterator check_allocated (void *p, size_t size)
       void check_constructed (size_t label)
       map_construct_type::iterator check_constructed (void *p)
       template<typename _Up , typename... _Args> void construct (_Up *__p, _Args &&... __args)
       void deallocate (pointer __p, size_type __n)
       template<typename _Up > void destroy (_Up *__p)
       void erase (void *p, size_t size)
       void erase_construct (void *p)
       void insert (void *p, size_t size)
       void insert_construct (void *p)
       size_type max_size () const noexcept

   Static Public Member Functions
       static void check ()
       static size_t get_label ()
       static void set_label (size_t l)

Detailed Description
   template<typename _Tp, typename _Cond>
       class __gnu_cxx::throw_allocator_base< _Tp, _Cond >"Allocator class with logging and exception generation control. Intended to be used as an allocator_type in templatized code.

       Note: Deallocate not allowed to throw.

       Definition at line 811 of file throw_allocator.h.

Member Typedef Documentation
   template<typename _Tp , typename _Cond > typedef const value_type* __gnu_cxx::throw_allocator_base< _Tp, _Cond >::const_pointer
       Definition at line 819 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef const value_type& __gnu_cxx::throw_allocator_base< _Tp, _Cond >::const_reference
       Definition at line 821 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef std::ptrdiff_t __gnu_cxx::throw_allocator_base< _Tp, _Cond >::difference_type
       Definition at line 816 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef value_type* __gnu_cxx::throw_allocator_base< _Tp, _Cond >::pointer
       Definition at line 818 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef std::true_type __gnu_cxx::throw_allocator_base< _Tp, _Cond >::propagate_on_container_move_assignment
       Definition at line 826 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef value_type& __gnu_cxx::throw_allocator_base< _Tp, _Cond >::reference
       Definition at line 820 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef std::size_t __gnu_cxx::throw_allocator_base< _Tp, _Cond >::size_type
       Definition at line 815 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > typedef _Tp __gnu_cxx::throw_allocator_base< _Tp, _Cond >::value_type
       Definition at line 817 of file throw_allocator.h.

Member Function Documentation
   template<typename _Tp , typename _Cond > const_pointer __gnu_cxx::throw_allocator_base< _Tp, _Cond >::address (const_reference __x) const [inline],  [noexcept]
       Definition at line 848 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > pointer __gnu_cxx::throw_allocator_base< _Tp, _Cond >::address (reference __x) const [inline],  [noexcept]
       Definition at line 844 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > pointer __gnu_cxx::throw_allocator_base< _Tp, _Cond >::allocate (size_type __n, const void * hint = 0) [inline]
       Definition at line 852 of file throw_allocator.h.

   static void __gnu_cxx::annotate_base::check () [inline],  [static],  [inherited]
       Definition at line 235 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::check (size_t label) [inline],  [inherited]
       Definition at line 198 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > void __gnu_cxx::throw_allocator_base< _Tp, _Cond >::check (size_type __n) [inline]
       Definition at line 904 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > void __gnu_cxx::throw_allocator_base< _Tp, _Cond >::check_allocated (pointer __p, size_type __n) [inline]
       Definition at line 897 of file throw_allocator.h.

   map_alloc_type::iterator __gnu_cxx::annotate_base::check_allocated (void * p, size_t size) [inline],  [inherited]
       Definition at line 173 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::check_constructed (size_t label) [inline],  [inherited]
       Definition at line 285 of file throw_allocator.h.

   map_construct_type::iterator __gnu_cxx::annotate_base::check_constructed (void * p) [inline],  [inherited]
       Definition at line 270 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > template<typename _Up , typename... _Args> void __gnu_cxx::throw_allocator_base< _Tp, _Cond >::construct (_Up * __p, _Args &&... __args) [inline]
       Definition at line 866 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > void __gnu_cxx::throw_allocator_base< _Tp, _Cond >::deallocate (pointer __p, size_type __n) [inline]
       Definition at line 890 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > template<typename _Up > void __gnu_cxx::throw_allocator_base< _Tp, _Cond >::destroy (_Up * __p) [inline]
       Definition at line 874 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::erase (void * p, size_t size) [inline],  [inherited]
       Definition at line 143 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::erase_construct (void * p) [inline],  [inherited]
       Definition at line 167 of file throw_allocator.h.

   static size_t __gnu_cxx::annotate_base::get_label () [inline],  [static],  [inherited]
       Definition at line 117 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::insert (void * p, size_t size) [inline],  [inherited]
       Definition at line 121 of file throw_allocator.h.

   void __gnu_cxx::annotate_base::insert_construct (void * p) [inline],  [inherited]
       Definition at line 148 of file throw_allocator.h.

   template<typename _Tp , typename _Cond > size_type __gnu_cxx::throw_allocator_base< _Tp, _Cond >::max_size () const [inline],  [noexcept]
       Definition at line 840 of file throw_allocator.h.

   static void __gnu_cxx::annotate_base::set_label (size_t l) [inline],  [static],  [inherited]
       Definition at line 113 of file throw_allocator.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                              __gnu_cxx::throw_allocator_base< _Tp, _Cond >(3)
