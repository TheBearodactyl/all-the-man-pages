__gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultLibrary3Functio__gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType >(3)

NAME
       __gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType > - Similar to std::binder1st, but giving the argument types explicitly.

SYNOPSIS
       #include <base.h>

       Inherits std::unary_function< _SecondArgumentType, _ResultType >.

   Public Types
       typedef _SecondArgumentType argument_type
           argument_type is the type of the argument
       typedef _ResultType result_type
           result_type is the return type

   Public Member Functions
       __binder1st (const _Operation &__x, const _FirstArgumentType &__y)
       _ResultType operator() (_SecondArgumentType &__x) const
       _ResultType operator() (const _SecondArgumentType &__x)

   Protected Attributes
       _Operation _M_op
       _FirstArgumentType _M_value

Detailed Description
   template<typename _Operation, typename _FirstArgumentType, typename _SecondArgumentType, typename _ResultType>
       class __gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType >"Similar to std::binder1st, but giving the argument types explicitly.

       Definition at line 192 of file base.h.

Member Typedef Documentation
   typedef _SecondArgumentType  std::unary_function< _SecondArgumentType , _ResultType  >::argument_type [inherited]
       argument_type is the type of the argument

       Definition at line 120 of file stl_function.h.

   typedef _ResultType  std::unary_function< _SecondArgumentType , _ResultType  >::result_type [inherited]
       result_type is the return type

       Definition at line 123 of file stl_function.h.

Constructor & Destructor Documentation
   template<typename _Operation , typename _FirstArgumentType , typename _SecondArgumentType , typename _ResultType > __gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType,
       _ResultType >::__binder1st (const _Operation & __x, const _FirstArgumentType & __y) [inline]
       Definition at line 200 of file base.h.

Member Function Documentation
   template<typename _Operation , typename _FirstArgumentType , typename _SecondArgumentType , typename _ResultType > _ResultType __gnu_parallel::__binder1st< _Operation, _FirstArgumentType,
       _SecondArgumentType, _ResultType >::operator() (_SecondArgumentType & __x) const [inline]
       Definition at line 210 of file base.h.

   template<typename _Operation , typename _FirstArgumentType , typename _SecondArgumentType , typename _ResultType > _ResultType __gnu_parallel::__binder1st< _Operation, _FirstArgumentType,
       _SecondArgumentType, _ResultType >::operator() (const _SecondArgumentType & __x) [inline]
       Definition at line 204 of file base.h.

Member Data Documentation
   template<typename _Operation , typename _FirstArgumentType , typename _SecondArgumentType , typename _ResultType > _Operation __gnu_parallel::__binder1st< _Operation, _FirstArgumentType,
       _SecondArgumentType, _ResultType >::_M_op [protected]
       Definition at line 196 of file base.h.

   template<typename _Operation , typename _FirstArgumentType , typename _SecondArgumentType , typename _ResultType > _FirstArgumentType __gnu_parallel::__binder1st< _Operation, _FirstArgumentType,
       _SecondArgumentType, _ResultType >::_M_value [protected]
       Definition at line 197 of file base.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 __gnu_parallel::__binder1st< _Operation, _FirstArgumentType, _SecondArgumentType, _ResultType >(3)
