killpg(3)                                                                                Library Functions Manual                                                                                killpg(3)

NAME
       killpg - send signal to a process group

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <signal.h>

       int killpg(int pgrp, int sig);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       killpg():
           _XOPEN_SOURCE >= 500
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE

DESCRIPTION
       killpg() sends the signal sig to the process group pgrp.  See signal(7) for a list of signals.

       If pgrp is 0, killpg() sends the signal to the calling process's process group.  (POSIX says: if pgrp is less than or equal to 1, the behavior is undefined.)

       For the permissions required to send a signal to another process, see kill(2).

RETURN VALUE
       On success, zero is returned.  On error, -1 is returned, and errno is set to indicate the error.

ERRORS
       EINVAL sig is not a valid signal number.

       EPERM  The process does not have permission to send the signal to any of the target processes.  For the required permissions, see kill(2).

       ESRCH  No process can be found in the process group specified by pgrp.

       ESRCH  The process group was given as 0 but the sending process does not have a process group.

VERSIONS
       There  are  various differences between the permission checking in BSD-type systems and System V-type systems.  See the POSIX rationale for kill(3p).  A difference not mentioned by POSIX concerns
       the return value EPERM: BSD documents that no signal is sent and EPERM returned when the permission check failed for at least one target process, while POSIX documents EPERM only when the permis‐
       sion check failed for all target processes.

   C library/kernel differences
       On Linux, killpg() is implemented as a library function that makes the call kill(-pgrp, sig).

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, SVr4, 4.4BSD (first appeared in 4BSD).

SEE ALSO
       getpgrp(2), kill(2), signal(2), capabilities(7), credentials(7)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       killpg(3)
KILLPG(3P)                                                                               POSIX Programmer's Manual                                                                              KILLPG(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       killpg — send a signal to a process group

SYNOPSIS
       #include <signal.h>

       int killpg(pid_t pgrp, int sig);

DESCRIPTION
       The killpg() function shall send the signal specified by sig to the process group specified by pgrp.

       If pgrp is greater than 1, killpg(pgrp, sig) shall be equivalent to kill(-pgrp, sig). If pgrp is less than or equal to 1, the behavior of killpg() is undefined.

RETURN VALUE
       Refer to kill().

ERRORS
       Refer to kill().

       The following sections are informative.

EXAMPLES
   Sending a Signal to All Other Members of a Process Group
       The following example shows how the calling process could send a signal to all other members of its process group. To prevent itself from receiving the signal it first makes itself immune to  the
       signal by ignoring it.

           #include <signal.h>
           #include <unistd.h>
           ...
               if (signal(SIGUSR1, SIG_IGN) == SIG_ERR)
                   /* Handle error */;

               if (killpg(getpgrp(), SIGUSR1) == -1)
                   /* Handle error */;"

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       getpgid(), getpid(), kill(), raise()

       The Base Definitions volume of POSIX.1‐2017, <signal.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         KILLPG(3P)
