pthread_self(3)            Library Functions Manual            pthread_self(3)

NAME
       pthread_self - obtain ID of the calling thread

LIBRARY
       POSIX threads library (libpthread, -lpthread)

SYNOPSIS
       #include <pthread.h>

       pthread_t pthread_self(void);

DESCRIPTION
       The pthread_self() function returns the ID of the calling thread.  This
       is the same value that is returned in *thread in the  pthread_create(3)
       call that created this thread.

RETURN VALUE
       This function always succeeds, returning the calling thread's ID.

ERRORS
       This function always succeeds.

ATTRIBUTES
       For  an  explanation  of  the  terms  used  in  this  section,  see at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │pthread_self()                              │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

NOTES
       POSIX.1 allows an implementation wide freedom in choosing the type used
       to  represent  a thread ID; for example, representation using either an
       arithmetic type or a structure is permitted.  Therefore,  variables  of
       type pthread_t can't portably be compared using the C equality operator
       (==); use pthread_equal(3) instead.

       Thread identifiers should be considered opaque: any attempt  to  use  a
       thread  ID  other than in pthreads calls is nonportable and can lead to
       unspecified results.

       Thread IDs are guaranteed to be unique only within a process.  A thread
       ID  may  be  reused after a terminated thread has been joined, or a de‐
       tached thread has terminated.

       The thread ID returned by pthread_self() is not the same thing  as  the
       kernel thread ID returned by a call to gettid(2).

SEE ALSO
       pthread_create(3), pthread_equal(3), pthreads(7)

Linux man-pages 6.04              2023-03-30                   pthread_self(3)
PTHREAD_SELF(3P)           POSIX Programmer's Manual          PTHREAD_SELF(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pthread_self — get the calling thread ID

SYNOPSIS
       #include <pthread.h>

       pthread_t pthread_self(void);

DESCRIPTION
       The pthread_self() function shall return the thread ID of  the  calling
       thread.

RETURN VALUE
       The  pthread_self()  function  shall always be successful and no return
       value is reserved to indicate an error.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       The pthread_self() function provides a capability similar to  the  get‐
       pid()  function  for  processes and the rationale is the same: the cre‐
       ation call does not provide the thread ID to the created thread.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_create(), pthread_equal()

       The Base Definitions volume of POSIX.1‐2017, <pthread.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                     PTHREAD_SELF(3P)
