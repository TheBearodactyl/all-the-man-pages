fileno(3)                                                                                Library Functions Manual                                                                                fileno(3)

NAME
       fileno - obtain file descriptor of a stdio stream

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>

       int fileno(FILE *stream);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       fileno():
           _POSIX_C_SOURCE

DESCRIPTION
       The  function  fileno()  examines  the argument stream and returns the integer file descriptor used to implement this stream.  The file descriptor is still owned by stream and will be closed when
       fclose(3) is called.  Duplicate the file descriptor with dup(2) before passing it to code that might close it.

       For the nonlocking counterpart, see unlocked_stdio(3).

RETURN VALUE
       On success, fileno() returns the file descriptor associated with stream.  On failure, -1 is returned and errno is set to indicate the error.

ERRORS
       EBADF  stream is not associated with a file.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fileno()                                                                                                                                                                │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

SEE ALSO
       open(2), fdopen(3), stdio(3), unlocked_stdio(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       fileno(3)
FILENO(3P)                                                                               POSIX Programmer's Manual                                                                              FILENO(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       fileno — map a stream pointer to a file descriptor

SYNOPSIS
       #include <stdio.h>

       int fileno(FILE *stream);

DESCRIPTION
       The fileno() function shall return the integer file descriptor associated with the stream pointed to by stream.

RETURN VALUE
       Upon successful completion, fileno() shall return the integer value of the file descriptor associated with stream.  Otherwise, the value -1 shall be returned and errno set to indicate the error.

ERRORS
       The fileno() function shall fail if:

       EBADF  The stream is not associated with a file.

       The fileno() function may fail if:

       EBADF  The file descriptor underlying stream is not a valid file descriptor.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       Without some specification of which file descriptors are associated with these streams, it is impossible for an application to set up the streams for another application it starts with fork() and
       exec.  In particular, it would not be possible to write a portable version of the sh command interpreter (although there may be other constraints that would prevent that portability).

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5.1, Interaction of File Descriptors and Standard I/O Streams, dirfd(), fdopen(), fopen(), stdin

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         FILENO(3P)
