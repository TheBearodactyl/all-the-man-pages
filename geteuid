GETEUID(3P)                                                                              POSIX Programmer's Manual                                                                             GETEUID(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       geteuid — get the effective user ID

SYNOPSIS
       #include <unistd.h>

       uid_t geteuid(void);

DESCRIPTION
       The geteuid() function shall return the effective user ID of the calling process.  The geteuid() function shall not modify errno.

RETURN VALUE
       The geteuid() function shall always be successful and no return value is reserved to indicate an error.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       In a conforming environment, geteuid() will always succeed. It is possible for implementations to provide an extension where a process in a non-conforming environment will not be associated  with
       a  user or group ID. It is recommended that such implementations return (uid_t)-1 and set errno to indicate such an environment; doing so does not violate this standard, since such an environment
       is already an extension.

FUTURE DIRECTIONS
       None.

SEE ALSO
       getegid(), getgid(), getuid(), setegid(), seteuid(), setgid(), setregid(), setreuid(), setuid()

       The Base Definitions volume of POSIX.1‐2017, <sys_types.h>, <unistd.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                        GETEUID(3P)
getuid(2)                                                                                   System Calls Manual                                                                                  getuid(2)

NAME
       getuid, geteuid - get user identity

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <unistd.h>

       uid_t getuid(void);
       uid_t geteuid(void);

DESCRIPTION
       getuid() returns the real user ID of the calling process.

       geteuid() returns the effective user ID of the calling process.

ERRORS
       These functions are always successful and never modify errno.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, 4.3BSD.

       In UNIX V6 the getuid() call returned (euid << 8) + uid.  UNIX V7 introduced separate calls getuid() and geteuid().

       The  original  Linux  getuid() and geteuid() system calls supported only 16-bit user IDs.  Subsequently, Linux 2.4 added getuid32() and geteuid32(), supporting 32-bit IDs.  The glibc getuid() and
       geteuid() wrapper functions transparently deal with the variations across kernel versions.

       On Alpha, instead of a pair of getuid() and geteuid() system calls, a single getxuid() system call is provided, which returns a pair of real and effective UIDs.  The glibc getuid() and  geteuid()
       wrapper functions transparently deal with this.  See syscall(2) for details regarding register mapping.

SEE ALSO
       getresuid(2), setreuid(2), setuid(2), credentials(7)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       getuid(2)
