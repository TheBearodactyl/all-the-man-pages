io_uring_prep_poll_timeout(3)                                                                 liburing Manual                                                                io_uring_prep_poll_timeout(3)

NAME
       io_uring_prep_timeoute - prepare a timeout request

SYNOPSIS
       #include <liburing.h>

       void io_uring_prep_timeout(struct io_uring_sqe *sqe,
                                  struct __kernel_timespec *ts,
                                  unsigned count,
                                  unsigned flags);

DESCRIPTION
       The  io_uring_prep_timeout(3)  function  prepares a timeout request. The submission queue entry sqe is setup to arm a timeout specified by ts and with a timeout count of count completion entries.
       The flags argument holds modifier flags for the request.

       This request type can be used as a timeout waking anyone sleeping for events on the CQ ring. The flags argument may contain:

       IORING_TIMEOUT_ABS
              The value specified in ts is an absolute value rather than a relative one.

       IORING_TIMEOUT_BOOTTIME
              The boottime clock source should be used.

       IORING_TIMEOUT_REALTIME
              The realtime clock source should be used.

       IORING_TIMEOUT_ETIME_SUCCESS
              Consider an expired timeout a success in terms of the posted completion.  Normally a timeout that triggers would return in a -ETIME CQE res value.

       The timeout completion event will trigger if either the specified timeout has occurred, or the specified number of events to wait for have been posted to the CQ ring.

RETURN VALUE
       None

ERRORS
       These are the errors that are reported in the CQE res field. On success, 0 is returned.

       -ETIME The specified timeout occurred and triggered the completion event.

       -EINVAL
              One of the fields set in the SQE was invalid. For example, two clocksources where given, or the specified timeout seconds or nanoseconds where < 0.

       -EFAULT
              io_uring was unable to access the data specified by ts.

       -ECANCELED
              The timeout was canceled by a removal request.

NOTES
       As with any request that passes in data in a struct, that data must remain valid until the request has been successfully submitted. It need not remain valid until completion. Once a  request  has
       been  submitted, the in-kernel state is stable. Very early kernels (5.4 and earlier) required state to be stable until the completion occurred. Applications can test for this behavior by inspect‐
       ing the IORING_FEAT_SUBMIT_STABLE flag passed back from io_uring_queue_init_params(3).

SEE ALSO
       io_uring_get_sqe(3), io_uring_submit(3), io_uring_prep_timeout_remove(3), io_uring_prep_timeout_update(3)

liburing-2.2                                                                                  March 12, 2022                                                                 io_uring_prep_poll_timeout(3)
