clear(1)                                                                                  General Commands Manual                                                                                 clear(1)

NAME
       clear - clear the terminal screen

SYNOPSIS
       clear [-Ttype] [-V] [-x]

DESCRIPTION
       clear  clears your terminal's screen if this is possible, including the terminal's scrollback buffer (if the extended “E3” capability is defined).  clear looks in the environment for the terminal
       type given by the environment variable TERM, and then in the terminfo database to determine how to clear the screen.

       clear writes to the standard output.  You can redirect the standard output to a file (which prevents clear from actually clearing the screen), and later cat the file to the screen, clearing it at
       that point.

OPTIONS
       -T type
            indicates the type of terminal.  Normally this option is unnecessary, because the default is taken from the environment variable TERM.  If -T is specified, then the shell variables LINES and
            COLUMNS will also be ignored.

       -V   reports the version of ncurses which was used in this program, and exits.  The options are as follows:

       -x   do not attempt to clear the terminal's scrollback buffer using the extended “E3” capability.

HISTORY
       A clear command appeared in 2.79BSD dated February 24, 1979.  Later that was provided in Unix 8th edition (1985).

       AT&T adapted a different BSD program (tset) to make a new command (tput), and used this to replace the clear command with a shell script which calls tput clear, e.g.,

           /usr/bin/tput ${1:+-T$1} clear 2> /dev/null
           exit

       In 1989, when Keith Bostic revised the BSD tput command to make it similar to the AT&T tput, he added a shell script for the clear command:

           exec tput clear

       The remainder of the script in each case is a copyright notice.

       The ncurses clear command began in 1995 by adapting the original BSD clear command (with terminfo, of course).

       The E3 extension came later:

       •   In June 1999, xterm provided an extension to the standard control sequence for clearing the screen.  Rather than clearing just the visible part of the screen using

               printf '\033[2J'

           one could clear the scrollback using

               printf '\033[3J'

           This is documented in XTerm Control Sequences as a feature originating with xterm.

       •   A few other terminal developers adopted the feature, e.g., PuTTY in 2006.

       •   In April 2011, a Red Hat developer submitted a patch to the Linux kernel, modifying its console driver to do the same thing.  The Linux change, part of the 3.0 release, did not mention xterm,
           although it was cited in the Red Hat bug report (#683733) which led to the change.

       •   Again, a few other terminal developers adopted the feature.  But the next relevant step was a change to the clear program in 2013 to incorporate this extension.

       •   In 2013, the E3 extension was overlooked in tput with the “clear” parameter.  That was addressed in 2016 by reorganizing tput to share its logic with clear and tset.

PORTABILITY
       Neither IEEE Std 1003.1/The Open  Group  Base  Specifications  Issue  7 (POSIX.1-2008) nor X/Open Curses Issue 7 documents tset or reset.

       The latter documents tput, which could be used to replace this utility either via a shell script or by an alias (such as a symbolic link) to run tput as clear.

SEE ALSO
       tput(1), terminfo(5), xterm(1).

       This describes ncurses version 6.4 (patch 20221231).

                                                                                                                                                                                                  clear(1)
curs_clear(3X)                                                                                                                                                                              curs_clear(3X)

NAME
       erase, werase, clear, wclear, clrtobot, wclrtobot, clrtoeol, wclrtoeol - clear all or part of a curses window

SYNOPSIS
       #include <curses.h>

       int erase(void);
       int werase(WINDOW *win);

       int clear(void);
       int wclear(WINDOW *win);

       int clrtobot(void);
       int wclrtobot(WINDOW *win);

       int clrtoeol(void);
       int wclrtoeol(WINDOW *win);

DESCRIPTION
   erase/werase
       The erase and werase routines copy blanks to every position in the window, clearing the screen.

       Blanks created by erasure have the current background rendition (as set by wbkgdset(3X)) merged into them.

   clear/wclear
       The  clear  and wclear routines are like erase and werase, but they also call clearok(3X), so that the screen is cleared completely on the next call to wrefresh for that window and repainted from
       scratch.

   clrtobot/wclrtobot
       The clrtobot and wclrtobot routines erase from the cursor to the end of screen.  That is, they erase all lines below the cursor in the window.  Also, the current line to the right of the  cursor,
       inclusive, is erased.

   clrtoeol/wclrtoeol
       The clrtoeol and wclrtoeol routines erase the current line to the right of the cursor, inclusive, to the end of the current line.

RETURN VALUE
       All routines return the integer OK on success and ERR on failure.

       X/Open defines no error conditions.  In this implementation,

       •   functions using a window pointer parameter return an error if it is null

       •   wclrtoeol returns an error if the cursor position is about to wrap.

NOTES
       Note that erase, werase, clear, wclear, clrtobot, and clrtoeol may be macros.

PORTABILITY
       These functions are described in the XSI Curses standard, Issue 4.  The standard specifies that they return ERR on failure, but specifies no error conditions.

       The  SVr4.0 manual says that these functions could return "a non-negative integer if immedok(3X) is set", referring to the return-value of wrefresh.  In that implementation, wrefresh would return
       a count of the number of characters written to the terminal.

       Some historic curses implementations had, as an undocumented feature, the ability to do the equivalent of clearok(..., 1) by saying touchwin(stdscr) or clear(stdscr).  This will  not  work  under
       ncurses.

       This  implementation,  and others such as Solaris, sets the current position to 0,0 after erasing via werase and wclear.  That fact is not documented in other implementations, and may not be true
       of implementations which were not derived from SVr4 source.

       Not obvious from the description, most implementations clear the screen after wclear even for a subwindow or derived window.  If you do not want to clear the screen during the next wrefresh,  use
       werase instead.

SEE ALSO
       curses(3X), curs_outopts(3X), curs_refresh(3X), curs_variables(3X)

                                                                                                                                                                                            curs_clear(3X)
