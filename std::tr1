std::tr1(3)                Library Functions Manual                std::tr1(3)

NAME
       std::tr1 - ISO C++ TR1 entities toplevel namespace is std::tr1.

SYNOPSIS
   Namespaces
       namespace __detail
           Implementation details not part of the namespace std::tr1
           interface.

   Functions
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           assoc_laguerre (unsigned int __n, unsigned int __m, _Tp __x)
           5.2.1.1 Associated Laguerre polynomials.
       float assoc_laguerref (unsigned int __n, unsigned int __m, float __x)
       long double assoc_laguerrel (unsigned int __n, unsigned int __m, long
           double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           assoc_legendre (unsigned int __l, unsigned int __m, _Tp __x)
           5.2.1.2 Associated Legendre functions.
       float assoc_legendref (unsigned int __l, unsigned int __m, float __x)
       long double assoc_legendrel (unsigned int __l, unsigned int __m, long
           double __x)
       template<typename _Tpx , typename _Tpy > __gnu_cxx::__promote_2< _Tpx,
           _Tpy >::__type beta (_Tpx __x, _Tpy __y)
           5.2.1.3 Beta functions.
       float betaf (float __x, float __y)
       long double betal (long double __x, long double __y)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           comp_ellint_1 (_Tp __k)
           5.2.1.4 Complete elliptic integrals of the first kind.
       float comp_ellint_1f (float __k)
       long double comp_ellint_1l (long double __k)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           comp_ellint_2 (_Tp __k)
           5.2.1.5 Complete elliptic integrals of the second kind.
       float comp_ellint_2f (float __k)
       long double comp_ellint_2l (long double __k)
       template<typename _Tp , typename _Tpn > __gnu_cxx::__promote_2< _Tp,
           _Tpn >::__type comp_ellint_3 (_Tp __k, _Tpn __nu)
           5.2.1.6 Complete elliptic integrals of the third kind.
       float comp_ellint_3f (float __k, float __nu)
       long double comp_ellint_3l (long double __k, long double __nu)
       template<typename _Tpa , typename _Tpc , typename _Tp >
           __gnu_cxx::__promote_3< _Tpa, _Tpc, _Tp >::__type conf_hyperg (_Tpa
           __a, _Tpc __c, _Tp __x)
           5.2.1.7 Confluent hypergeometric functions.
       float conf_hypergf (float __a, float __c, float __x)
       long double conf_hypergl (long double __a, long double __c, long double
           __x)
       template<typename _Tp > std::complex< typename __gnu_cxx::__promote<
           _Tp >::__type > conj (_Tp __x)
       template<typename _Tp > std::complex< _Tp > conj (const std::complex<
           _Tp > &__z)
       template<typename _Tpnu , typename _Tp > __gnu_cxx::__promote_2< _Tpnu,
           _Tp >::__type cyl_bessel_i (_Tpnu __nu, _Tp __x)
           5.2.1.8 Regular modified cylindrical Bessel functions.
       float cyl_bessel_if (float __nu, float __x)
       long double cyl_bessel_il (long double __nu, long double __x)
       template<typename _Tpnu , typename _Tp > __gnu_cxx::__promote_2< _Tpnu,
           _Tp >::__type cyl_bessel_j (_Tpnu __nu, _Tp __x)
           5.2.1.9 Cylindrical Bessel functions (of the first kind).
       float cyl_bessel_jf (float __nu, float __x)
       long double cyl_bessel_jl (long double __nu, long double __x)
       template<typename _Tpnu , typename _Tp > __gnu_cxx::__promote_2< _Tpnu,
           _Tp >::__type cyl_bessel_k (_Tpnu __nu, _Tp __x)
           5.2.1.10 Irregular modified cylindrical Bessel functions.
       float cyl_bessel_kf (float __nu, float __x)
       long double cyl_bessel_kl (long double __nu, long double __x)
       template<typename _Tpnu , typename _Tp > __gnu_cxx::__promote_2< _Tpnu,
           _Tp >::__type cyl_neumann (_Tpnu __nu, _Tp __x)
           5.2.1.11 Cylindrical Neumann functions.
       float cyl_neumannf (float __nu, float __x)
       long double cyl_neumannl (long double __nu, long double __x)
       template<typename _Tp , typename _Tpp > __gnu_cxx::__promote_2< _Tp,
           _Tpp >::__type ellint_1 (_Tp __k, _Tpp __phi)
           5.2.1.12 Incomplete elliptic integrals of the first kind.
       float ellint_1f (float __k, float __phi)
       long double ellint_1l (long double __k, long double __phi)
       template<typename _Tp , typename _Tpp > __gnu_cxx::__promote_2< _Tp,
           _Tpp >::__type ellint_2 (_Tp __k, _Tpp __phi)
           5.2.1.13 Incomplete elliptic integrals of the second kind.
       float ellint_2f (float __k, float __phi)
       long double ellint_2l (long double __k, long double __phi)
       template<typename _Tp , typename _Tpn , typename _Tpp >
           __gnu_cxx::__promote_3< _Tp, _Tpn, _Tpp >::__type ellint_3 (_Tp
           __k, _Tpn __nu, _Tpp __phi)
           5.2.1.14 Incomplete elliptic integrals of the third kind.
       float ellint_3f (float __k, float __nu, float __phi)
       long double ellint_3l (long double __k, long double __nu, long double
           __phi)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type expint (_Tp
           __x)
           5.2.1.15 Exponential integrals.
       float expintf (float __x)
       long double expintl (long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type fabs (_Tp
           __x)
       template<typename _Tp > std::complex< _Tp > fabs (const std::complex<
           _Tp > &__z)
           fabs(__z) [8.1.8].
       float fabs (float __x)
       long double fabs (long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type hermite
           (unsigned int __n, _Tp __x)
           5.2.1.16 Hermite polynomials.
       float hermitef (unsigned int __n, float __x)
       long double hermitel (unsigned int __n, long double __x)
       template<typename _Tpa , typename _Tpb , typename _Tpc , typename _Tp >
           __gnu_cxx::__promote_4< _Tpa, _Tpb, _Tpc, _Tp >::__type hyperg
           (_Tpa __a, _Tpb __b, _Tpc __c, _Tp __x)
           5.2.1.17 Hypergeometric functions.
       float hypergf (float __a, float __b, float __c, float __x)
       long double hypergl (long double __a, long double __b, long double __c,
           long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type laguerre
           (unsigned int __n, _Tp __x)
           5.2.1.18 Laguerre polynomials.
       float laguerref (unsigned int __n, float __x)
       long double laguerrel (unsigned int __n, long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type legendre
           (unsigned int __n, _Tp __x)
           5.2.1.19 Legendre polynomials.
       float legendref (unsigned int __n, float __x)
       long double legendrel (unsigned int __n, long double __x)
       template<typename _Tp , typename _Up > std::complex< typename
           __gnu_cxx::__promote_2< _Tp, _Up >::__type > polar (const _Tp
           &__rho, const _Up &__theta)
       template<typename _Tp , typename _Up > __gnu_cxx::__promote_2< _Tp, _Up
           >::__type pow (_Tp __x, _Up __y)
       template<typename _Tp > std::complex< _Tp > pow (const _Tp &__x, const
           std::complex< _Tp > &__y)
       template<typename _Tp , typename _Up > std::complex< typename
           __gnu_cxx::__promote_2< _Tp, _Up >::__type > pow (const _Tp &__x,
           const std::complex< _Up > &__y)
       template<typename _Tp > std::complex< _Tp > pow (const std::complex<
           _Tp > &__x, const _Tp &__y)
       template<typename _Tp , typename _Up > std::complex< typename
           __gnu_cxx::__promote_2< _Tp, _Up >::__type > pow (const
           std::complex< _Tp > &__x, const _Up &__y)
           Additional overloads [8.1.9].
       template<typename _Tp > std::complex< _Tp > pow (const std::complex<
           _Tp > &__x, const std::complex< _Tp > &__y)
       template<typename _Tp , typename _Up > std::complex< typename
           __gnu_cxx::__promote_2< _Tp, _Up >::__type > pow (const
           std::complex< _Tp > &__x, const std::complex< _Up > &__y)
       float pow (float __x, float __y)
       long double pow (long double __x, long double __y)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           riemann_zeta (_Tp __x)
           5.2.1.20 Riemann zeta function.
       float riemann_zetaf (float __x)
       long double riemann_zetal (long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type sph_bessel
           (unsigned int __n, _Tp __x)
           5.2.1.21 Spherical Bessel functions.
       float sph_besself (unsigned int __n, float __x)
       long double sph_bessell (unsigned int __n, long double __x)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type
           sph_legendre (unsigned int __l, unsigned int __m, _Tp __theta)
           5.2.1.22 Spherical associated Legendre functions.
       float sph_legendref (unsigned int __l, unsigned int __m, float __theta)
       long double sph_legendrel (unsigned int __l, unsigned int __m, long
           double __theta)
       template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type sph_neumann
           (unsigned int __n, _Tp __x)
           5.2.1.23 Spherical Neumann functions.
       float sph_neumannf (unsigned int __n, float __x)
       long double sph_neumannl (unsigned int __n, long double __x)

Detailed Description
       ISO C++ TR1 entities toplevel namespace is std::tr1.

Function Documentation
   template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type std::tr1::fabs
       (_Tp __x) [inline]
       Definition at line 1119 of file tr1/cmath.

   float std::tr1::fabs (float __x) [inline]
       Definition at line 1108 of file tr1/cmath.

   long double std::tr1::fabs (long double __x) [inline]
       Definition at line 1112 of file tr1/cmath.

   template<typename _Tp , typename _Up > __gnu_cxx::__promote_2< _Tp, _Up
       >::__type std::tr1::pow (_Tp __x, _Up __y) [inline]
       Definition at line 1090 of file tr1/cmath.

   float std::tr1::pow (float __x, float __y) [inline]
       Definition at line 1080 of file tr1/cmath.

   long double std::tr1::pow (long double __x, long double __y) [inline]
       Definition at line 1084 of file tr1/cmath.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023                     std::tr1(3)
