SD_DEVICE_GET_SYSPATH(3)     sd_device_get_syspath    SD_DEVICE_GET_SYSPATH(3)

NAME
       sd_device_get_syspath, sd_device_get_devpath, sd_device_get_sysname,
       sd_device_get_sysnum, sd_device_get_subsystem, sd_device_get_devtype,
       sd_device_get_devname, sd_device_get_devnum, sd_device_get_ifindex,
       sd_device_get_driver, sd_device_get_diskseq - Returns various fields of
       device objects

SYNOPSIS
       #include <systemd/sd-device.h>

       int sd_device_get_syspath(sd_device *device, const char **ret);

       int sd_device_get_devpath(sd_device *device, const char **ret);

       int sd_device_get_sysname(sd_device *device, const char **ret);

       int sd_device_get_sysnum(sd_device *device, const char **ret);

       int sd_device_get_subsystem(sd_device *device, const char **ret);

       int sd_device_get_devtype(sd_device *device, const char **ret);

       int sd_device_get_devname(sd_device *device, const char **ret);

       int sd_device_get_devnum(sd_device *device, dev_t *ret);

       int sd_device_get_ifindex(sd_device *device, int *ret);

       int sd_device_get_driver(sd_device *device, const char **ret);

       int sd_device_get_diskseq(sd_device *device, uint64_t *ret);

DESCRIPTION
       sd_device_get_syspath() returns the sysfs path of the specified device
       record, including the /sys prefix. Example:
       /sys/devices/virtual/tty/tty7

       sd_device_get_devpath() returns the sysfs path of the specified device
       record, excluding the /sys prefix. Example: /devices/virtual/tty/tty7

       sd_device_get_sysname() returns the sysfs name of the specified device
       record, i.e. the last component of the sysfs path. Example: "tty7" for
       the device /sys/devices/virtual/tty/tty7

       sd_device_get_sysnum() returns the sysfs device number of the specified
       device record, i.e. the numeric suffix of the last component of the
       sysfs path. Example: "7" for the device /sys/devices/virtual/tty/tty7

       sd_device_get_subsystem() returns the kernel subsystem of the specified
       device record. This is a short string fitting into a filename, and thus
       does not contain a slash and cannot be empty. Example: "tty", "block"
       or "net".

       sd_device_get_devtype() returns the device type of the specified device
       record, if the subsystem manages multiple types of devices. Example:
       for devices of the "block" subsystem this can be "disk" or "partition"

       sd_device_get_devname() returns the device node path of the specified
       device record if the device has a device node. Example: for
       /sys/devices/virtual/tty/tty7 the string /dev/tty7 is typically
       returned.

       sd_device_get_devnum() returns the device node major/minor (i.e.
       dev_t) of the specified device record if the device has a device node
       (i.e. the one returned by sd_device_get_devname()). For devices
       belonging to the "block" subsystem this refers to a block device node,
       in all other cases to a character device node. Example: for the
       /sys/devices/virtual/tty/tty7 device this typically returns the device
       number with major/minor "4:7".

       sd_device_get_ifindex() returns the network interface index of the
       specified device record, if the device encapsulates a network interface
       device, i.e. belongs to the "net" subsystem. Example: the "lo"
       interface typically has interface index 1.

       sd_device_get_driver() returns the kernel driver name attached to the
       device. Note that the driver field is set on the devices consumed by
       the driver, not on the device created by it. Example: a PCI device
       /sys/bus/pci/devices/0000:00:1f.6 might be attached to a driver
       "e1000e".

       sd_device_get_diskseq() returns the kernel disk sequence number of the
       block device. This number monotonically increases whenever a backing
       medium of a block device changes without the device name changing, and
       is relevant for block devices encapsulating devices with changing media
       (e.g. floppy or CD-ROM), or loopback block devices. Only defined for
       block devices, i.e. those of subsystem "block".

RETURN VALUE
       On success, these calls return 0 or a positive integer. On failure,
       they return a negative errno-style error code.

   Errors
       Returned errors may indicate the following problems:

       -EINVAL
           A specified parameter is invalid.

       -ENOENT
           The requested field is not present in the device record.

NOTES
       These APIs are implemented as a shared library, which can be compiled
       and linked to with the libsystemd pkg-config(1) file.

SEE ALSO
       systemd(1)

systemd 253                                           SD_DEVICE_GET_SYSPATH(3)
