mbrtowc(3)                                                                               Library Functions Manual                                                                               mbrtowc(3)

NAME
       mbrtowc - convert a multibyte sequence to a wide character

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <wchar.h>

       size_t mbrtowc(wchar_t *restrict pwc, const char s[restrict .n],
                      size_t n, mbstate_t *restrict ps);

DESCRIPTION
       The  main case for this function is when s is not NULL and pwc is not NULL.  In this case, the mbrtowc() function inspects at most n bytes of the multibyte string starting at s, extracts the next
       complete multibyte character, converts it to a wide character and stores it at *pwc.  It updates the shift state *ps.  If the converted wide character is not L'\0' (the null wide  character),  it
       returns the number of bytes that were consumed from s.  If the converted wide character is L'\0', it resets the shift state *ps to the initial state and returns 0.

       If  the  n  bytes  starting at s do not contain a complete multibyte character, mbrtowc() returns (size_t) -2.  This can happen even if n >= MB_CUR_MAX, if the multibyte string contains redundant
       shift sequences.

       If the multibyte string starting at s contains an invalid multibyte sequence before the next complete character, mbrtowc() returns (size_t) -1 and sets errno to EILSEQ.  In this case, the effects
       on *ps are undefined.

       A different case is when s is not NULL but pwc is NULL.  In this case, the mbrtowc() function behaves as above, except that it does not store the converted wide character in memory.

       A  third case is when s is NULL.  In this case, pwc and n are ignored.  If the conversion state represented by *ps denotes an incomplete multibyte character conversion, the mbrtowc() function re‐
       turns (size_t) -1, sets errno to EILSEQ, and leaves *ps in an undefined state.  Otherwise, the mbrtowc() function puts *ps in the initial state and returns 0.

       In all of the above cases, if ps is NULL, a static anonymous state known only to the mbrtowc() function is used instead.  Otherwise, *ps must be a valid mbstate_t object.  An mbstate_t  object  a
       can be initialized to the initial state by zeroing it, for example using

           memset(&a, 0, sizeof(a));

RETURN VALUE
       The  mbrtowc()  function  returns  the number of bytes parsed from the multibyte sequence starting at s, if a non-L'\0' wide character was recognized.  It returns 0, if a L'\0' wide character was
       recognized.  It returns (size_t) -1 and sets errno to EILSEQ, if an invalid multibyte sequence was encountered.  It returns (size_t) -2 if it couldn't parse a complete multibyte character,  mean‐
       ing that n should be increased.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────────────────────┐
       │Interface                                                                                                                                            │ Attribute     │ Value                      │
       ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────────────────────┤
       │mbrtowc()                                                                                                                                            │ Thread safety │ MT-Unsafe race:mbrtowc/!ps │
       └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────────────────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of mbrtowc() depends on the LC_CTYPE category of the current locale.

SEE ALSO
       mbsinit(3), mbsrtowcs(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                      mbrtowc(3)
MBRTOWC(3P)                                                                              POSIX Programmer's Manual                                                                             MBRTOWC(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       mbrtowc — convert a character to a wide-character code (restartable)

SYNOPSIS
       #include <wchar.h>

       size_t mbrtowc(wchar_t *restrict pwc, const char *restrict s,
           size_t n, mbstate_t *restrict ps);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       If s is a null pointer, the mbrtowc() function shall be equivalent to the call:

           mbrtowc(NULL, "", 1, ps)

       In this case, the values of the arguments pwc and n are ignored.

       If  s is not a null pointer, the mbrtowc() function shall inspect at most n bytes beginning at the byte pointed to by s to determine the number of bytes needed to complete the next character (in‐
       cluding any shift sequences). If the function determines that the next character is completed, it shall determine the value of the corresponding wide character and then, if  pwc  is  not  a  null
       pointer,  shall  store  that  value in the object pointed to by pwc.  If the corresponding wide character is the null wide character, the resulting state described shall be the initial conversion
       state.

       If ps is a null pointer, the mbrtowc() function shall use its own internal mbstate_t object, which shall be initialized at program start-up to the initial conversion  state.  Otherwise,  the  mb‐
       state_t  object  pointed to by ps shall be used to completely describe the current conversion state of the associated character sequence. The implementation shall behave as if no function defined
       in this volume of POSIX.1‐2017 calls mbrtowc().

       The behavior of this function is affected by the LC_CTYPE category of the current locale.

       The mbrtowc() function need not be thread-safe if called with a NULL ps argument.

       The mbrtowc() function shall not change the setting of errno if successful.

RETURN VALUE
       The mbrtowc() function shall return the first of the following that applies:

       0           If the next n or fewer bytes complete the character that corresponds to the null wide character (which is the value stored).

       between 1 and n inclusive
                   If the next n or fewer bytes complete a valid character (which is the value stored); the value returned shall be the number of bytes that complete the character.

       (size_t)-2  If the next n bytes contribute to an incomplete but potentially valid character, and all n bytes have been processed (no value is stored). When  n  has  at  least  the  value  of  the
                   {MB_CUR_MAX} macro, this case can only occur if s points at a sequence of redundant shift sequences (for implementations with state-dependent encodings).

       (size_t)-1  If  an  encoding error occurs, in which case the next n or fewer bytes do not contribute to a complete and valid character (no value is stored). In this case, [EILSEQ] shall be stored
                   in errno and the conversion state is undefined.

ERRORS
       The mbrtowc() function shall fail if:

       EILSEQ An invalid character sequence is detected.  In the POSIX locale an [EILSEQ] error cannot occur since all byte values are valid characters.

       The mbrtowc() function may fail if:

       EINVAL ps points to an object that contains an invalid conversion state.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbsinit(), mbsrtowcs()

       The Base Definitions volume of POSIX.1‐2017, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                        MBRTOWC(3P)
