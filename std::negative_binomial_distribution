std::negative_binomial_distLstd::negative_binomial_distribution< _IntType >(3)

NAME
       std::negative_binomial_distribution< _IntType > - A
       negative_binomial_distribution random number distribution.

SYNOPSIS
       #include <random>

   Classes
       struct param_type

   Public Types
       typedef _IntType result_type

   Public Member Functions
       negative_binomial_distribution (_IntType __k, double __p=0.5)
       negative_binomial_distribution (const param_type &__p)
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng,
           const param_type &__p)
       template<typename _UniformRandomNumberGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomNumberGenerator
           &__urng)
       template<typename _UniformRandomNumberGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomNumberGenerator
           &__urng, const param_type &__p)
       _IntType k () const
           Return the $k$ parameter of the distribution.
       result_type max () const
           Returns the least upper bound value of the distribution.
       result_type min () const
           Returns the greatest lower bound value of the distribution.
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng)
           Generating functions.
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng, const param_type
           &__p)
       double p () const
           Return the $p$ parameter of the distribution.
       param_type param () const
           Returns the parameter set of the distribution.
       void param (const param_type &__param)
           Sets the parameter set of the distribution.
       void reset ()
           Resets the distribution state.

   Friends
       template<typename _IntType1 , typename _CharT , typename _Traits >
           std::basic_ostream< _CharT, _Traits > & operator<<
           (std::basic_ostream< _CharT, _Traits > &__os, const
           std::negative_binomial_distribution< _IntType1 > &__x)
           Inserts a negative_binomial_distribution random number distribution
           __x into the output stream __os.
       bool operator== (const negative_binomial_distribution &__d1, const
           negative_binomial_distribution &__d2)
           Return true if two negative binomial distributions have the same
           parameters and the sequences that would be generated are equal.
       template<typename _IntType1 , typename _CharT , typename _Traits >
           std::basic_istream< _CharT, _Traits > & operator>>
           (std::basic_istream< _CharT, _Traits > &__is,
           std::negative_binomial_distribution< _IntType1 > &__x)
           Extracts a negative_binomial_distribution random number
           distribution __x from the input stream __is.

Detailed Description
   template<typename _IntType = int>
       class std::negative_binomial_distribution< _IntType >"A
       negativenbinomial_distribution random number distribution.
               o
       The formmla for the negative binomial probability mass function is
       $p(i) = {} p^i (1 - p)^{t - i}$ where $t$ and $p$ are the parameters of
       the distribution.
               }
       Definition at line 4193 of file random.

Member Typedef Documentation
   template<typename _IntType  = int> typedef _IntType
       std::negative_binomial_distribution< _IntType >::result_type
       The type of the range of the distribution.

       Definition at line 4200 of file random.

Constructor & Destructor Documentation
   template<typename _IntType  = int> std::negative_binomial_distribution<
       _IntType >::negative_binomial_distribution () [inline]
       Definition at line 4237 of file random.

   template<typename _IntType  = int> std::negative_binomial_distribution<
       _IntType >::negative_binomial_distribution (_IntType __k, double __p =
       0.5) [inline],  [explicit]
       Definition at line 4240 of file random.

   template<typename _IntType  = int> std::negative_binomial_distribution<
       _IntType >::negative_binomial_distribution (const param_type & __p)
       [inline],  [explicit]
       Definition at line 4245 of file random.

Member Function Documentation
   template<typename _IntType  = int> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void
       std::negative_binomial_distribution< _IntType >::__generate
       (_ForwardIterator __f, _ForwardIterator __t,
       _UniformRandomNumberGenerator & __urng) [inline]
       Definition at line 4314 of file random.

   template<typename _IntType  = int> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void
       std::negative_binomial_distribution< _IntType >::__generate
       (_ForwardIterator __f, _ForwardIterator __t,
       _UniformRandomNumberGenerator & __urng, const param_type & __p)
       [inline]
       Definition at line 4321 of file random.

   template<typename _IntType  = int> template<typename
       _UniformRandomNumberGenerator > void
       std::negative_binomial_distribution< _IntType >::__generate
       (result_type * __f, result_type * __t, _UniformRandomNumberGenerator &
       __urng) [inline]
       Definition at line 4328 of file random.

   template<typename _IntType  = int> template<typename
       _UniformRandomNumberGenerator > void
       std::negative_binomial_distribution< _IntType >::__generate
       (result_type * __f, result_type * __t, _UniformRandomNumberGenerator &
       __urng, const param_type & __p) [inline]
       Definition at line 4334 of file random.

   template<typename _IntType  = int> _IntType
       std::negative_binomial_distribution< _IntType >::k () const [inline]
       Return the $k$ parameter of the distribution.

       Definition at line 4260 of file random.

   template<typename _IntType  = int> result_type
       std::negative_binomial_distribution< _IntType >::max () const [inline]
       Returns the least upper bound value of the distribution.

       Definition at line 4296 of file random.

       References std::numeric_limits< _Tp >::max().

   template<typename _IntType  = int> result_type
       std::negative_binomial_distribution< _IntType >::min () const [inline]
       Returns the greatest lower bound value of the distribution.

       Definition at line 4289 of file random.

   template<typename _IntType > template<typename
       _UniformRandomNumberGenerator > negative_binomial_distribution<
       _IntType >::result_type std::negative_binomial_distribution< _IntType
       >::operator() (_UniformRandomNumberGenerator & __urng)
       Generating functions.

       Definition at line 1151 of file bits/random.tcc.

   template<typename _IntType > template<typename
       _UniformRandomNumberGenerator > negative_binomial_distribution<
       _IntType >::result_type std::negative_binomial_distribution< _IntType
       >::operator() (_UniformRandomNumberGenerator & __urng, const param_type
       & __p)
       Definition at line 1164 of file bits/random.tcc.

   template<typename _IntType  = int> double
       std::negative_binomial_distribution< _IntType >::p () const [inline]
       Return the $p$ parameter of the distribution.

       Definition at line 4267 of file random.

   template<typename _IntType  = int> param_type
       std::negative_binomial_distribution< _IntType >::param () const
       [inline]
       Returns the parameter set of the distribution.

       Definition at line 4274 of file random.

   template<typename _IntType  = int> void
       std::negative_binomial_distribution< _IntType >::param (const
       param_type & __param) [inline]
       Sets the parameter set of the distribution.

       Parameters
           __param The new parameter set of the distribution.

       Definition at line 4282 of file random.

   template<typename _IntType  = int> void
       std::negative_binomial_distribution< _IntType >::reset () [inline]
       Resets the distribution state.

       Definition at line 4253 of file random.

       References std::gamma_distribution< _RealType >::reset().

Friends And Related Function Documentation
   template<typename _IntType  = int> template<typename _IntType1 , typename
       _CharT , typename _Traits > std::basic_ostream< _CharT, _Traits > &
       operator<< (std::basic_ostream< _CharT, _Traits > & __os, const
       std::negative_binomial_distribution< _IntType1 > & __x) [friend]
       Inserts a negative_binomial_distribution random number distribution __x
       into the output stream __os.

       Parameters
           __os An output stream.
           __x A negative_binomial_distribution random number distribution.

       Returns
           The output stream with the state of __x inserted or in an error
           state.

   template<typename _IntType  = int> bool operator== (const
       negative_binomial_distribution< _IntType > & __d1, const
       negative_binomial_distribution< _IntType > & __d2) [friend]
       Return true if two negative binomial distributions have the same
       parameters and the sequences that would be generated are equal.

       Definition at line 4345 of file random.

   template<typename _IntType  = int> template<typename _IntType1 , typename
       _CharT , typename _Traits > std::basic_istream< _CharT, _Traits > &
       operator>> (std::basic_istream< _CharT, _Traits > & __is,
       std::negative_binomial_distribution< _IntType1 > & __x) [friend]
       Extracts a negative_binomial_distribution random number distribution
       __x from the input stream __is.

       Parameters
           __is An input stream.
           __x A negative_binomial_distribution random number generator
           engine.

       Returns
           The input stream with __x extracted or in an error state.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                   std::negative_binomial_distribution< _IntType >(3)
