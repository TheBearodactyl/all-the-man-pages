PTHREAD_MUTEXATTR_GETTYPE(3POSIX Programmer's ManPTHREAD_MUTEXATTR_GETTYPE(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pthread_mutexattr_gettype, pthread_mutexattr_settype — get and set  the
       mutex type attribute

SYNOPSIS
       #include <pthread.h>

       int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict attr,
           int *restrict type);
       int pthread_mutexattr_settype(pthread_mutexattr_t *attr, int type);

DESCRIPTION
       The  pthread_mutexattr_gettype()  and pthread_mutexattr_settype() func‐
       tions, respectively, shall get and set the mutex type  attribute.  This
       attribute  is set in the type parameter to these functions. The default
       value of the type attribute is PTHREAD_MUTEX_DEFAULT.

       The type of mutex is contained in the type attribute of the  mutex  at‐
       tributes. Valid mutex types include:

              PTHREAD_MUTEX_NORMAL  PTHREAD_MUTEX_ERRORCHECK PTHREAD_MUTEX_RE‐
              CURSIVE PTHREAD_MUTEX_DEFAULT

       The mutex type affects the behavior of calls which lock and unlock  the
       mutex.  See pthread_mutex_lock() for details. An implementation may map
       PTHREAD_MUTEX_DEFAULT to one of the other mutex types.

       The behavior is undefined if the value specified by the  attr  argument
       to  pthread_mutexattr_gettype() or pthread_mutexattr_settype() does not
       refer to an initialized mutex attributes object.

RETURN VALUE
       Upon successful completion,  the  pthread_mutexattr_gettype()  function
       shall  return  zero  and  store the value of the type attribute of attr
       into the object referenced by the type parameter. Otherwise,  an  error
       shall be returned to indicate the error.

       If  successful,  the  pthread_mutexattr_settype() function shall return
       zero; otherwise, an error number shall be returned to indicate the  er‐
       ror.

ERRORS
       The pthread_mutexattr_settype() function shall fail if:

       EINVAL The value type is invalid.

       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       It is advised that an application should not use a PTHREAD_MUTEX_RECUR‐
       SIVE mutex with condition variables because the  implicit  unlock  per‐
       formed  for  a  pthread_cond_timedwait() or pthread_cond_wait() may not
       actually release the mutex (if it had been locked multiple  times).  If
       this  happens,  no other thread can satisfy the condition of the predi‐
       cate.

RATIONALE
       If an implementation detects that the value specified by the attr argu‐
       ment to pthread_mutexattr_gettype() or pthread_mutexattr_settype() does
       not refer to an initialized mutex attributes object, it is  recommended
       that the function should fail and report an [EINVAL] error.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_cond_timedwait(), pthread_mutex_lock()

       The Base Definitions volume of POSIX.1‐2017, <pthread.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017        PTHREAD_MUTEXATTR_GETTYPE(3P)
