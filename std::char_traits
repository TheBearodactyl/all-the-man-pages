std::char_traits< _CharT >(Library Functions Manustd::char_traits< _CharT >(3)

NAME
       std::char_traits< _CharT > - Basis for explicit traits specializations.

SYNOPSIS
       #include <string>

       Inherits __gnu_cxx::char_traits< _CharT >.

       Inherited by __gnu_cxx::encoding_char_traits< _CharT >.

   Public Types
       typedef _CharT char_type
       typedef _Char_types< _CharT >::int_type int_type
       typedef _Char_types< _CharT >::off_type off_type
       typedef _Char_types< _CharT >::pos_type pos_type
       typedef _Char_types< _CharT >::state_type state_type

   Static Public Member Functions
       static constexpr void assign (char_type &__c1, const char_type &__c2)
       static constexpr char_type * assign (char_type *__s, std::size_t __n,
           char_type __a)
       static constexpr int compare (const char_type *__s1, const char_type
           *__s2, std::size_t __n)
       static constexpr char_type * copy (char_type *__s1, const char_type
           *__s2, std::size_t __n)
       static constexpr int_type eof ()
       static constexpr bool eq (const char_type &__c1, const char_type &__c2)
       static constexpr bool eq_int_type (const int_type &__c1, const int_type
           &__c2)
       static constexpr const char_type * find (const char_type *__s,
           std::size_t __n, const char_type &__a)
       static constexpr std::size_t length (const char_type *__s)
       static constexpr bool lt (const char_type &__c1, const char_type &__c2)
       static constexpr char_type * move (char_type *__s1, const char_type
           *__s2, std::size_t __n)
       static constexpr int_type not_eof (const int_type &__c)
       static constexpr char_type to_char_type (const int_type &__c)
       static constexpr int_type to_int_type (const char_type &__c)

Detailed Description
   template<typename _CharT>
       struct std::char_traits< _CharT >"Basis for explicit traits
       specializations.

       Note
           For any given actual character type, this definition is probably
           wrong. Since this is just a thin wrapper around
           __gnu_cxx::char_traits, it is possible to achieve a more
           appropriate definition by specializing __gnu_cxx::char_traits.

       See
       https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_types
       for advice on how to make use of this class for unusual character
       types. Also, check out include/ext/pod_string.

       Definition at line 329 of file string.

Member Typedef Documentation
   template<typename _CharT > typedef _CharT __gnu_cxx::char_traits< _CharT
       >::char_type [inherited]
       Definition at line 100 of file string.

   template<typename _CharT > typedef _Char_types<_CharT>::int_type
       __gnu_cxx::char_traits< _CharT >::int_type [inherited]
       Definition at line 101 of file string.

   template<typename _CharT > typedef _Char_types<_CharT>::off_type
       __gnu_cxx::char_traits< _CharT >::off_type [inherited]
       Definition at line 103 of file string.

   template<typename _CharT > typedef _Char_types<_CharT>::pos_type
       __gnu_cxx::char_traits< _CharT >::pos_type [inherited]
       Definition at line 102 of file string.

   template<typename _CharT > typedef _Char_types<_CharT>::state_type
       __gnu_cxx::char_traits< _CharT >::state_type [inherited]
       Definition at line 104 of file string.

Member Function Documentation
   template<typename _CharT > static constexpr void __gnu_cxx::char_traits<
       _CharT >::assign (char_type & __c1, const char_type & __c2) [inline],
       [static],  [constexpr],  [inherited]
       Definition at line 110 of file string.

   template<typename _CharT > constexpr char_traits< _CharT >::char_type *
       __gnu_cxx::char_traits< _CharT >::assign (char_type * __s, std::size_t
       __n, char_type __a) [static],  [constexpr],  [inherited]
       Definition at line 274 of file string.

   template<typename _CharT > constexpr int __gnu_cxx::char_traits< _CharT
       >::compare (const char_type * __s1, const char_type * __s2, std::size_t
       __n) [static],  [constexpr],  [inherited]
       Definition at line 169 of file string.

   template<typename _CharT > constexpr char_traits< _CharT >::char_type *
       __gnu_cxx::char_traits< _CharT >::copy (char_type * __s1, const
       char_type * __s2, std::size_t __n) [static],  [constexpr],  [inherited]
       Definition at line 255 of file string.

   template<typename _CharT > static constexpr int_type
       __gnu_cxx::char_traits< _CharT >::eof () [inline],  [static],
       [constexpr],  [inherited]
       Definition at line 159 of file string.

   template<typename _CharT > static constexpr bool __gnu_cxx::char_traits<
       _CharT >::eq (const char_type & __c1, const char_type & __c2) [inline],
       [static],  [constexpr],  [inherited]
       Definition at line 121 of file string.

   template<typename _CharT > static constexpr bool __gnu_cxx::char_traits<
       _CharT >::eq_int_type (const int_type & __c1, const int_type & __c2)
       [inline],  [static],  [constexpr],  [inherited]
       Definition at line 155 of file string.

   template<typename _CharT > constexpr const char_traits< _CharT >::char_type
       * __gnu_cxx::char_traits< _CharT >::find (const char_type * __s,
       std::size_t __n, const char_type & __a) [static],  [constexpr],
       [inherited]
       Definition at line 193 of file string.

   template<typename _CharT > constexpr std::size_t __gnu_cxx::char_traits<
       _CharT >::length (const char_type * __s) [static],  [constexpr],
       [inherited]
       Definition at line 182 of file string.

   template<typename _CharT > static constexpr bool __gnu_cxx::char_traits<
       _CharT >::lt (const char_type & __c1, const char_type & __c2) [inline],
       [static],  [constexpr],  [inherited]
       Definition at line 125 of file string.

   template<typename _CharT > constexpr char_traits< _CharT >::char_type *
       __gnu_cxx::char_traits< _CharT >::move (char_type * __s1, const
       char_type * __s2, std::size_t __n) [static],  [constexpr],  [inherited]
       Definition at line 205 of file string.

   template<typename _CharT > static constexpr int_type
       __gnu_cxx::char_traits< _CharT >::not_eof (const int_type & __c)
       [inline],  [static],  [constexpr],  [inherited]
       Definition at line 163 of file string.

   template<typename _CharT > static constexpr char_type
       __gnu_cxx::char_traits< _CharT >::to_char_type (const int_type & __c)
       [inline],  [static],  [constexpr],  [inherited]
       Definition at line 147 of file string.

   template<typename _CharT > static constexpr int_type
       __gnu_cxx::char_traits< _CharT >::to_int_type (const char_type & __c)
       [inline],  [static],  [constexpr],  [inherited]
       Definition at line 151 of file string.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023   std::char_traits< _CharT >(3)
