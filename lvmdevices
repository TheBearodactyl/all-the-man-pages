LVMDEVICES(8)                                                                             System Manager's Manual                                                                            LVMDEVICES(8)

NAME
       lvmdevices — Manage the devices file

SYNOPSIS
       lvmdevices option_args
           [ option_args ]

           --adddev PV
           --addpvid String
           --check
           --commandprofile String
           --config String
        -d|--debug
           --deldev String
           --delpvid String
           --deviceidtype String
           --devices PV
           --devicesfile String
           --driverloaded y|n
        -h|--help
           --journal String
           --lockopt String
           --longhelp
           --nohints
           --nolocking
           --profile String
        -q|--quiet
        -t|--test
           --update
        -v|--verbose
           --version
        -y|--yes

DESCRIPTION
       The LVM devices file lists devices that lvm can use.  The default file is /etc/lvm/devices/system.devices, and the lvmdevices(8) command is used to add or remove device entries.  If the file does
       not exist, or if lvm.conf includes use_devicesfile=0, then lvm will not use a devices file.

       To use a device with lvm, add it to the devices file with the command lvmdevices --adddev, and to prevent lvm from seeing or using a device, remove  it  from  the  devices  file  with  lvmdevices
       --deldev.  The vgimportdevices(8) command adds all PVs from a VG to the devices file, and updates the VG metadata to include device IDs of the PVs.

       Commands  that  add new devices to the devices file necessarily look outside the existing devices file to find the devices being added.  pvcreate, vgcreate, and vgextend also look outside the de‐
       vices file to create new PVs and add those PVs to the devices file.

       LVM records devices in the devices file using hardware-specific IDs, such as the WWID, and attempts to use subsystem-specific IDs for virtual device types (which also aim to be as unique and sta‐
       ble  as  possible.)  These device IDs are also written in the VG metadata.  When no hardware or virtual ID is available, lvm falls back using the unstable device name as the device ID.  When dev‐
       names are used as IDs, lvm performs extra scanning to find devices if their devname changes, e.g. after reboot.

       When proper device IDs are used, an lvm command will not look at devices outside the devices file, but when devnames are used as a fallback, lvm will scan devices outside the devices file to  lo‐
       cate PVs on renamed devices.  A config setting search_for_devnames can be used to control the scanning for renamed devname entries.

       Related to the devices file, the new command option --devices <devnames> allows a list of devices to be specified for the command to use, overriding the devices file.  The listed devices act as a
       sort of devices file in terms of limiting which devices lvm will see and use.  Devices that are not listed will appear to be missing to the lvm command.

       Multiple devices files can be kept /etc/lvm/devices, which allows lvm to be used with different sets of devices.  For example, system devices do not need to be exposed to a specific  application,
       and  the  application  can use lvm on its own devices that are not exposed to the system.  The option --devicesfile <filename> is used to select the devices file to use with the command.  Without
       the option set, the default system devices file is used.

       Setting --devicesfile "" causes lvm to not use a devices file.

       With no devices file, lvm will use any device on the system, and applies the filter to limit the full set of system devices.  With a devices file, the regex filter is not  used,  and  the  filter
       settings in lvm.conf or the command line are ignored.  The vgimportdevices command is one exception which does apply the regex filter when looking for a VG to import.

       If a devices file exists, lvm will use it, even if it's empty.  An empty devices file means lvm will see no devices.

       If the system devices file does not yet exist, the pvcreate or vgcreate commands will create it if they see no existing VGs on the system.  lvmdevices --addev and vgimportdevices will always cre‐
       ate a new devices file if it does not yet exist.

       It is recommended to use lvm commands to make changes to the devices file to ensure proper updates.

       The device ID and device ID type are included in the VG metadata and can be reported with pvs -o deviceid,deviceidtype.  (Note that the lvmdevices command does not update VG metadata, but  subse‐
       quent lvm commands modifying the metadata will include the device ID.)

       Possible device ID types are:

       • sys_wwid uses the wwid reported by sysfs.  This is the first choice for non-virtual devices.

       • sys_serial uses the serial number reported by sysfs.  This is the second choice for non-virtual devices.

       • mpath_uuid is used for dm multipath devices, reported by sysfs.

       • crypt_uuid is used for dm crypt devices, reported by sysfs.

       • md_uuid is used for md devices, reported by sysfs.

       • lvmlv_uuid is used if a PV is placed on top of an lvm LV, reported by sysfs.

       • loop_file is used for loop devices, the backing file name repored by sysfs.

       • devname the device name is used if no other type applies.

       The  default  choice  for device ID type can be overridden using lvmdevices --addev --deviceidtype <type>.  If the specified type is available for the device it will be used, otherwise the device
       will be added using the type that would otherwise be chosen.

USAGE
       Print devices in the devices file.

       lvmdevices
           [ COMMON_OPTIONS ]

       —

       Check the devices file and report incorrect values.

       lvmdevices --check
           [ COMMON_OPTIONS ]

       —

       Update the devices file to fix incorrect values.

       lvmdevices --update
           [ COMMON_OPTIONS ]

       —

       Add a device to the devices file.

       lvmdevices --adddev PV
           [    --deviceidtype String ]
           [ COMMON_OPTIONS ]

       —

       Remove a device from the devices file.

       lvmdevices --deldev String|PV
           [    --deviceidtype String ]
           [ COMMON_OPTIONS ]

       —

       Find the device with the given PVID and add it to the devices file.

       lvmdevices --addpvid String
           [    --deviceidtype String ]
           [ COMMON_OPTIONS ]

       —

       Remove the devices file entry for the given PVID.

       lvmdevices --delpvid String
           [ COMMON_OPTIONS ]

       —

       Common options for lvm:
           [ -d|--debug ]
           [ -h|--help ]
           [ -q|--quiet ]
           [ -t|--test ]
           [ -v|--verbose ]
           [ -y|--yes ]
           [    --commandprofile String ]
           [    --config String ]
           [    --devices PV ]
           [    --devicesfile String ]
           [    --driverloaded y|n ]
           [    --journal String ]
           [    --lockopt String ]
           [    --longhelp ]
           [    --nohints ]
           [    --nolocking ]
           [    --profile String ]
           [    --version ]

OPTIONS
       --adddev PV
              Add a device to the devices file.

       --addpvid String
              Find a device with the PVID and add the device to the devices file.

       --check
              Checks the content of the devices file.  Reports incorrect device names or PVIDs for entries.

       --commandprofile String
              The command profile to use for command configuration.  See lvm.conf(5) for more information about profiles.

       --config String
              Config settings for the command. These override lvm.conf(5) settings.  The String arg uses the same format as lvm.conf(5), or may use section/field syntax.  See lvm.conf(5) for more infor‐
              mation about config.

       -d|--debug ...
              Set debug level. Repeat from 1 to 6 times to increase the detail of messages sent to the log file and/or syslog (if configured).

       --deldev String
              Remove a device from the devices file.  When used alone, --deldev specifies a device name.  When used with --deviceidtype, --deldev specifies a device id.

       --delpvid String
              Remove a device with the PVID from the devices file.

       --deviceidtype String
              The type of device ID to use for the device.  If the specified type is available for the device, then it will override the default type that lvm would use.

       --devices PV
              Restricts  the  devices that are visible and accessible to the command.  Devices not listed will appear to be missing. This option can be repeated, or accepts a comma separated list of de‐
              vices. This overrides the devices file.

       --devicesfile String
              A file listing devices that LVM should use.  The file must exist in /etc/lvm/devices/ and is managed with the lvmdevices(8) command.  This overrides the lvm.conf(5) devices/devicesfile and
              devices/use_devicesfile settings.

       --driverloaded y|n
              If set to no, the command will not attempt to use device-mapper.  For testing and debugging.

       -h|--help
              Display help text.

       --journal String
              Record  information  in  the  systemd  journal.  This information is in addition to information enabled by the lvm.conf log/journal setting.  command: record information about the command.
              output: record the default command output.  debug: record full command debugging.

       --lockopt String
              Used to pass options for special cases to lvmlockd.  See lvmlockd(8) for more information.

       --longhelp
              Display long help text.

       --nohints
              Do not use the hints file to locate devices for PVs. A command may read more devices to find PVs when hints are not used. The command will still perform  standard  hint  file  invalidation
              where appropriate.

       --nolocking
              Disable locking. Use with caution, concurrent commands may produce incorrect results.

       --profile String
              An alias for --commandprofile or --metadataprofile, depending on the command.

       -q|--quiet ...
              Suppress output and log messages. Overrides --debug and --verbose.  Repeat once to also suppress any prompts with answer 'no'.

       -t|--test
              Run in test mode. Commands will not update metadata.  This is implemented by disabling all metadata writing but nevertheless returning success to the calling function. This may lead to un‐
              usual error messages in multi-stage operations if a tool relies on reading back metadata it believes has changed but hasn't.

       --update
              Update the content of the devices file.

       -v|--verbose ...
              Set verbose level. Repeat from 1 to 4 times to increase the detail of messages sent to stdout and stderr.

       --version
              Display version information.

       -y|--yes
              Do not prompt for confirmation interactively but always assume the answer yes. Use with extreme caution.  (For automatic no, see -qq.)

VARIABLES
       String See the option description for information about the string content.

       Size[UNIT]
              Size is an input number that accepts an optional unit.  Input units are always treated as base two values, regardless of capitalization, e.g. 'k' and 'K' both refer to 1024.   The  default
              input  unit  is  specified  by letter, followed by |UNIT.  UNIT represents other possible input units: b|B is bytes, s|S is sectors of 512 bytes, k|K is KiB, m|M is MiB, g|G is GiB, t|T is
              TiB, p|P is PiB, e|E is EiB.  (This should not be confused with the output control --units, where capital letters mean multiple of 1000.)

ENVIRONMENT VARIABLES
       See lvm(8) for information about environment variables used by lvm.  For example, LVM_VG_NAME can generally be substituted for a required VG parameter.

SEE ALSO
       lvm(8), lvm.conf(5), lvmconfig(8), lvmdevices(8),

       pvchange(8), pvck(8), pvcreate(8), pvdisplay(8), pvmove(8), pvremove(8), pvresize(8), pvs(8), pvscan(8),

       vgcfgbackup(8), vgcfgrestore(8), vgchange(8), vgck(8), vgcreate(8), vgconvert(8), vgdisplay(8), vgexport(8), vgextend(8), vgimport(8), vgimportclone(8), vgimportdevices(8), vgmerge(8),
       vgmknodes(8), vgreduce(8), vgremove(8), vgrename(8), vgs(8), vgscan(8), vgsplit(8),

       lvcreate(8), lvchange(8), lvconvert(8), lvdisplay(8), lvextend(8), lvreduce(8), lvremove(8), lvrename(8), lvresize(8), lvs(8), lvscan(8),

       lvm-fullreport(8), lvm-lvpoll(8), blkdeactivate(8), lvmdump(8),

       dmeventd(8), lvmpolld(8), lvmlockd(8), lvmlockctl(8), cmirrord(8), lvmdbusd(8), fsadm(8),

       lvmsystemid(7), lvmreport(7), lvmraid(7), lvmthin(7), lvmcache(7)

Red Hat, Inc.                                                                        LVM TOOLS 2.03.20(2) (2023-03-21)                                                                       LVMDEVICES(8)
