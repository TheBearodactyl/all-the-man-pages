std::__debug::multstd::__debug::multimap<o_Key,n_Tp,t_Compare, _Allocator >(3)

NAME
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator > - Class
       std::multimap with safety/checking/debug instrumentation.

SYNOPSIS
       #include <map>

       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and multimap< _Key, _Tp,
       std::less< _Key >, std::allocator< std::pair< const _Key, _Tp > > >.

   Public Types
       typedef _Allocator allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator, multimap >
           const_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef _Base::difference_type difference_type
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, multimap >
           iterator
       typedef _Compare key_compare
       typedef _Key key_type
       typedef _Tp mapped_type
       using node_type = typename _Base::node_type
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef _Base::size_type size_type
       typedef std::pair< const _Key, _Tp > value_type

   Public Member Functions
       multimap (_Base_ref __x)
       template<typename _InputIterator > multimap (_InputIterator __first,
           _InputIterator __last, const _Compare &__comp=_Compare(), const
           _Allocator &__a=_Allocator())
       template<typename _InputIterator > multimap (_InputIterator __first,
           _InputIterator __last, const allocator_type &__a)
       multimap (const _Compare &__comp, const _Allocator &__a=_Allocator())
       multimap (const allocator_type &__a)
       multimap (const multimap &)=default
       multimap (const multimap &__m, const __type_identity_t< allocator_type
           > &__a)
       multimap (initializer_list< value_type > __l, const _Compare
           &__c=_Compare(), const allocator_type &__a=allocator_type())
       multimap (initializer_list< value_type > __l, const allocator_type
           &__a)
       multimap (multimap &&)=default
       multimap (multimap &&__m, const __type_identity_t< allocator_type >
           &__a) noexcept(noexcept(_Base(std::move(__m), __a)))
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       const_iterator cbegin () const noexcept
       const_iterator cend () const noexcept
       void clear () noexcept
       const_reverse_iterator crbegin () const noexcept
       const_reverse_iterator crend () const noexcept
       template<typename... _Args> iterator emplace (_Args &&... __args)
       template<typename... _Args> iterator emplace_hint (const_iterator
           __pos, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> std::pair< iterator,
           iterator > equal_range (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> std::pair<
           const_iterator, const_iterator > equal_range (const _Kt &__x) const
       std::pair< iterator, iterator > equal_range (const key_type &__x)
       std::pair< const_iterator, const_iterator > equal_range (const key_type
           &__x) const
       _Base_iterator erase (_Base_const_iterator __position)
       size_type erase (const key_type &__x)
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __position)
       _GLIBCXX_ABI_TAG_CXX11 iterator erase (iterator __position)
       node_type extract (const key_type &__key)
       node_type extract (const_iterator __position)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator find (const _Kt
           &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator find
           (const _Kt &__x) const
       iterator find (const key_type &__x)
       const_iterator find (const key_type &__x) const
       template<typename _InputIterator > void insert (_InputIterator __first,
           _InputIterator __last)
       template<typename _Pair , typename  = typename
           std::enable_if<std::is_constructible<value_type,
           _Pair&&>::value>::type> iterator insert (_Pair &&__x)
       iterator insert (const value_type &__x)
       iterator insert (const_iterator __hint, node_type &&__nh)
       template<typename _Pair , typename  = typename
           std::enable_if<std::is_constructible<value_type,
           _Pair&&>::value>::type> iterator insert (const_iterator __position,
           _Pair &&__x)
       iterator insert (const_iterator __position, const value_type &__x)
       iterator insert (const_iterator __position, value_type &&__x)
       iterator insert (node_type &&__nh)
       void insert (std::initializer_list< value_type > __list)
       iterator insert (value_type &&__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator lower_bound
           (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator
           lower_bound (const _Kt &__x) const
       iterator lower_bound (const key_type &__x)
       const_iterator lower_bound (const key_type &__x) const
       multimap & operator= (const multimap &)=default
       multimap & operator= (initializer_list< value_type > __l)
       multimap & operator= (multimap &&)=default
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       void swap (multimap &__x) noexcept(/*conditional */)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> iterator upper_bound
           (const _Kt &__x)
       template<typename _Kt , typename _Req  = typename
           __has_is_transparent<_Compare, _Kt>::type> const_iterator
           upper_bound (const _Kt &__x) const
       iterator upper_bound (const key_type &__x)
       const_iterator upper_bound (const key_type &__x) const

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator

Detailed Description
   template<typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
       typename _Allocator = std::allocator<std::pair<const _Key, _Tp> >>
       class std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >"Class
       std::multimap with safety/checking/debug instrumentation.

       Definition at line 44 of file map.

Member Typedef Documentation
   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Allocator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::allocator_type
       Definition at line 78 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef __gnu_debug::_Safe_iterator<_Base_const_iterator,
       multimap> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::const_iterator
       Definition at line 85 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::const_pointer std::__debug::multimap<
       _Key, _Tp, _Compare, _Allocator >::const_pointer
       Definition at line 90 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::const_reference std::__debug::multimap<
       _Key, _Tp, _Compare, _Allocator >::const_reference
       Definition at line 80 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef std::reverse_iterator<const_iterator>
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::const_reverse_iterator
       Definition at line 92 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::difference_type std::__debug::multimap<
       _Key, _Tp, _Compare, _Allocator >::difference_type
       Definition at line 88 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef __gnu_debug::_Safe_iterator<_Base_iterator,
       multimap> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::iterator
       Definition at line 83 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Compare std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::key_compare
       Definition at line 77 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Key std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::key_type
       Definition at line 74 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Tp std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::mapped_type
       Definition at line 75 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> using std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::node_type =  typename _Base::node_type
       Definition at line 325 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::pointer std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::pointer
       Definition at line 89 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::reference std::__debug::multimap< _Key,
       _Tp, _Compare, _Allocator >::reference
       Definition at line 79 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef std::reverse_iterator<iterator>
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::reverse_iterator
       Definition at line 91 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef _Base::size_type std::__debug::multimap< _Key,
       _Tp, _Compare, _Allocator >::size_type
       Definition at line 87 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> typedef std::pair<const _Key, _Tp>
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::value_type
       Definition at line 76 of file map.

Constructor & Destructor Documentation
   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (initializer_list< value_type > __l, const _Compare & __c =
       _Compare(), const allocator_type & __a = allocator_type()) [inline]
       Definition at line 108 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (const allocator_type & __a) [inline],  [explicit]
       Definition at line 114 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (const multimap< _Key, _Tp, _Compare, _Allocator > & __m,
       const __type_identity_t< allocator_type > & __a) [inline]
       Definition at line 117 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (multimap< _Key, _Tp, _Compare, _Allocator > && __m, const
       __type_identity_t< allocator_type > & __a) [inline],  [noexcept]
       Definition at line 121 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (initializer_list< value_type > __l, const allocator_type &
       __a) [inline]
       Definition at line 126 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _InputIterator >
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::multimap
       (_InputIterator __first, _InputIterator __last, const allocator_type &
       __a) [inline]
       Definition at line 130 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (const _Compare & __comp, const _Allocator & __a =
       _Allocator()) [inline],  [explicit]
       Definition at line 139 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _InputIterator >
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::multimap
       (_InputIterator __first, _InputIterator __last, const _Compare & __comp
       = _Compare(), const _Allocator & __a = _Allocator()) [inline]
       Definition at line 144 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::multimap (_Base_ref __x) [inline]
       Definition at line 152 of file map.

Member Function Documentation
   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const _Base & std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::_M_base () const [inline],  [noexcept]
       Definition at line 589 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> _Base & std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::_M_base () [inline],  [noexcept]
       Definition at line 586 of file map.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::begin () const [inline],  [noexcept]
       Definition at line 179 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::begin () [inline],  [noexcept]
       Definition at line 175 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::cbegin () const [inline],  [noexcept]
       Definition at line 208 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::cend () const [inline],  [noexcept]
       Definition at line 212 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> void std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::clear () [inline],  [noexcept]
       Definition at line 452 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::crbegin () const [inline],  [noexcept]
       Definition at line 216 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::crend () const [inline],  [noexcept]
       Definition at line 220 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename... _Args> iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::emplace
       (_Args &&... __args) [inline]
       Definition at line 233 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename... _Args> iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::emplace_hint
       (const_iterator __pos, _Args &&... __args) [inline]
       Definition at line 238 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::end () const [inline],  [noexcept]
       Definition at line 187 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::end () [inline],  [noexcept]
       Definition at line 183 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> std::pair< iterator,
       iterator > std::__debug::multimap< _Key, _Tp, _Compare, _Allocator
       >::equal_range (const _Kt & __x) [inline]
       Definition at line 557 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> std::pair< const_iterator,
       const_iterator > std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::equal_range (const _Kt & __x) const [inline]
       Definition at line 578 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::pair< iterator, iterator > std::__debug::multimap<
       _Key, _Tp, _Compare, _Allocator >::equal_range (const key_type & __x)
       [inline]
       Definition at line 544 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> std::pair< const_iterator, const_iterator >
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::equal_range
       (const key_type & __x) const [inline]
       Definition at line 565 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> _Base_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::erase (_Base_const_iterator __position)
       [inline]
       Definition at line 367 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> size_type std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::erase (const key_type & __x) [inline]
       Definition at line 389 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::erase (const_iterator __first, const_iterator __last)
       [inline]
       Definition at line 406 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::erase (const_iterator __position) [inline]
       Definition at line 360 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> _GLIBCXX_ABI_TAG_CXX11 iterator std::__debug::multimap<
       _Key, _Tp, _Compare, _Allocator >::erase (iterator __position) [inline]
       Definition at line 376 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> node_type std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::extract (const key_type & __key) [inline]
       Definition at line 336 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> node_type std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::extract (const_iterator __position) [inline]
       Definition at line 328 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::find (const
       _Kt & __x) [inline]
       Definition at line 472 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> const_iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::find (const
       _Kt & __x) const [inline]
       Definition at line 485 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::find (const key_type & __x) [inline]
       Definition at line 464 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::find (const key_type & __x) const [inline]
       Definition at line 477 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _InputIterator > void
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::insert
       (_InputIterator __first, _InputIterator __last) [inline]
       Definition at line 312 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Pair , typename  = typename
       std::enable_if<std::is_constructible<value_type,
       _Pair&&>::value>::type> iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::insert (_Pair && __x) [inline]
       Definition at line 264 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (const value_type & __x) [inline]
       Definition at line 250 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (const_iterator __hint, node_type && __nh)
       [inline]
       Definition at line 349 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Pair , typename  = typename
       std::enable_if<std::is_constructible<value_type,
       _Pair&&>::value>::type> iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::insert (const_iterator __position, _Pair &&
       __x) [inline]
       Definition at line 299 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (const_iterator __position, const value_type &
       __x) [inline]
       Definition at line 276 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (const_iterator __position, value_type && __x)
       [inline]
       Definition at line 289 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (node_type && __nh) [inline]
       Definition at line 345 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> void std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (std::initializer_list< value_type > __list)
       [inline]
       Definition at line 270 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::insert (value_type && __x) [inline]
       Definition at line 257 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::lower_bound
       (const _Kt & __x) [inline]
       Definition at line 500 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> const_iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::lower_bound
       (const _Kt & __x) const [inline]
       Definition at line 513 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::lower_bound (const key_type & __x) [inline]
       Definition at line 492 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::lower_bound (const key_type & __x) const
       [inline]
       Definition at line 505 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> multimap & std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::operator= (initializer_list< value_type > __l) [inline]
       Definition at line 163 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::rbegin () const [inline],  [noexcept]
       Definition at line 195 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::rbegin () [inline],  [noexcept]
       Definition at line 191 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::rend () const [inline],  [noexcept]
       Definition at line 203 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> reverse_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::rend () [inline],  [noexcept]
       Definition at line 199 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> void std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::swap (multimap< _Key, _Tp, _Compare, _Allocator > & __x)
       [inline],  [noexcept]
       Definition at line 444 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::upper_bound
       (const _Kt & __x) [inline]
       Definition at line 526 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _Kt , typename _Req  = typename
       __has_is_transparent<_Compare, _Kt>::type> const_iterator
       std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >::upper_bound
       (const _Kt & __x) const [inline]
       Definition at line 539 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> iterator std::__debug::multimap< _Key, _Tp, _Compare,
       _Allocator >::upper_bound (const key_type & __x) [inline]
       Definition at line 518 of file map.

   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> const_iterator std::__debug::multimap< _Key, _Tp,
       _Compare, _Allocator >::upper_bound (const key_type & __x) const
       [inline]
       Definition at line 531 of file map.

Friends And Related Function Documentation
   template<typename _Key , typename _Tp , typename _Compare  =
       std::less<_Key>, typename _Allocator  = std::allocator<std::pair<const
       _Key, _Tp> >> template<typename _ItT , typename _SeqT , typename _CatT
       > friend class ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 60 of file map.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++         std::__debug::multimap< _Key, _Tp, _Compare, _Allocator >(3)
