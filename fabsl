fabs(3)                                                                                  Library Functions Manual                                                                                  fabs(3)

NAME
       fabs, fabsf, fabsl - absolute value of floating-point number

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double fabs(double x);
       float fabsf(float x);
       long double fabsl(long double x);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       fabsf(), fabsl():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

DESCRIPTION
       These functions return the absolute value of the floating-point number x.

RETURN VALUE
       These functions return the absolute value of x.

       If x is a NaN, a NaN is returned.

       If x is -0, +0 is returned.

       If x is negative infinity or positive infinity, positive infinity is returned.

ERRORS
       No errors occur.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fabs(), fabsf(), fabsl()                                                                                                                                                │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       C99, POSIX.1-2001.

       The variant returning double also conforms to SVr4, 4.3BSD, C89.

SEE ALSO
       abs(3), cabs(3), ceil(3), floor(3), labs(3), rint(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                         fabs(3)
FABS(3P)                                                                                 POSIX Programmer's Manual                                                                                FABS(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       fabs, fabsf, fabsl — absolute value function

SYNOPSIS
       #include <math.h>

       double fabs(double x);
       float fabsf(float x);
       long double fabsl(long double x);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       These functions shall compute the absolute value of their argument x,|x|.

RETURN VALUE
       Upon successful completion, these functions shall return the absolute value of x.

       If x is NaN, a NaN shall be returned.

       If x is ±0, +0 shall be returned.

       If x is ±Inf, +Inf shall be returned.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
   Computing the 1-Norm of a Floating-Point Vector
       This example shows the use of fabs() to compute the 1-norm of a vector defined as follows:

           norm1(v) = |v[0]| + |v[1]| + ... + |v[n-1]|

       where |x| denotes the absolute value of x, n denotes the vector's dimension v[i] denotes the i-th component of v (0≤i<n).

           #include <math.h>

           double
           norm1(const double v[], const int n)
           {
               int     i;
               double  n1_v;  /* 1-norm of v */

               n1_v = 0;
               for (i=0; i<n; i++) {
                   n1_v += fabs (v[i]);
               }

               return n1_v;
           }

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       isnan()

       The Base Definitions volume of POSIX.1‐2017, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                           FABS(3P)
