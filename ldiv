div(3)                                                                                   Library Functions Manual                                                                                   div(3)

NAME
       div, ldiv, lldiv, imaxdiv - compute quotient and remainder of an integer division

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdlib.h>

       div_t div(int numerator, int denominator);
       ldiv_t ldiv(long numerator, long denominator);
       lldiv_t lldiv(long long numerator, long long denominator);

       #include <inttypes.h>

       imaxdiv_t imaxdiv(intmax_t numerator, intmax_t denominator);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       lldiv():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       The  div()  function computes the value numerator/denominator and returns the quotient and remainder in a structure named div_t that contains two integer members (in unspecified order) named quot
       and rem.  The quotient is rounded toward zero.  The result satisfies quot*denominator+rem = numerator.

       The ldiv(), lldiv(), and imaxdiv() functions do the same, dividing numbers of the indicated type and returning the result in a structure of the indicated name, in all cases with fields  quot  and
       rem of the same type as the function arguments.

RETURN VALUE
       The div_t (etc.) structure.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │div(), ldiv(), lldiv(), imaxdiv()                                                                                                                                       │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C89, C99, SVr4, 4.3BSD.

       lldiv() and imaxdiv() were added in C99.

EXAMPLES
       After

           div_t q = div(-5, 3);

       the values q.quot and q.rem are -1 and -2, respectively.

SEE ALSO
       abs(3), remainder(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                          div(3)
LDIV(3P)                                                                                 POSIX Programmer's Manual                                                                                LDIV(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       ldiv, lldiv — compute quotient and remainder of a long division

SYNOPSIS
       #include <stdlib.h>

       ldiv_t ldiv(long numer, long denom);
       lldiv_t lldiv(long long numer, long long denom);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       These  functions  shall compute the quotient and remainder of the division of the numerator numer by the denominator denom.  If the division is inexact, the resulting quotient is the long integer
       (for the ldiv() function) or long long integer (for the lldiv() function) of lesser magnitude that is the nearest to the algebraic quotient. If the result cannot be represented, the  behavior  is
       undefined; otherwise, quot * denom+rem shall equal numer.

RETURN VALUE
       The ldiv() function shall return a structure of type ldiv_t, comprising both the quotient and the remainder. The structure shall include the following members, in any order:

           long   quot;    /* Quotient */
           long   rem;     /* Remainder */

       The lldiv() function shall return a structure of type lldiv_t, comprising both the quotient and the remainder. The structure shall include the following members, in any order:

           long long   quot;    /* Quotient */
           long long   rem;     /* Remainder */

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       div()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                           LDIV(3P)
