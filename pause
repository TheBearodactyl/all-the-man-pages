PAUSE(3P)                  POSIX Programmer's Manual                 PAUSE(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pause — suspend the thread until a signal is received

SYNOPSIS
       #include <unistd.h>

       int pause(void);

DESCRIPTION
       The pause() function shall suspend the calling thread until delivery of
       a  signal  whose action is either to execute a signal-catching function
       or to terminate the process.

       If the action is to terminate the process, pause() shall not return.

       If the action is to execute a signal-catching function,  pause()  shall
       return after the signal-catching function returns.

RETURN VALUE
       Since pause() suspends thread execution indefinitely unless interrupted
       by a signal, there is no successful completion return value. A value of
       -1 shall be returned and errno set to indicate the error.

ERRORS
       The pause() function shall fail if:

       EINTR  A  signal  is  caught  by the calling process and control is re‐
              turned from the signal-catching function.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Many common uses of pause() have timing windows. The scenario  involves
       checking a condition related to a signal and, if the signal has not oc‐
       curred, calling pause().  When the signal occurs between the check  and
       the  call  to  pause(), the process often blocks indefinitely. The sig‐
       procmask() and sigsuspend() functions can be used to avoid this type of
       problem.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       sigsuspend()

       The Base Definitions volume of POSIX.1‐2017, <unistd.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                            PAUSE(3P)
pause(2)                      System Calls Manual                     pause(2)

NAME
       pause - wait for signal

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <unistd.h>

       int pause(void);

DESCRIPTION
       pause()  causes the calling process (or thread) to sleep until a signal
       is delivered that either terminates the process or causes  the  invoca‐
       tion of a signal-catching function.

RETURN VALUE
       pause()  returns  only when a signal was caught and the signal-catching
       function returned.  In this case, pause() returns -1, and errno is  set
       to EINTR.

ERRORS
       EINTR  a signal was caught and the signal-catching function returned.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, SVr4, 4.3BSD.

SEE ALSO
       kill(2), select(2), signal(2), sigsuspend(2)

Linux man-pages 6.04              2023-03-30                          pause(2)
