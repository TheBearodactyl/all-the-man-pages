fgetws(3)                                                                                Library Functions Manual                                                                                fgetws(3)

NAME
       fgetws - read a wide-character string from a FILE stream

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <wchar.h>

       wchar_t *fgetws(wchar_t ws[restrict .n], int n, FILE *restrict stream);

DESCRIPTION
       The  fgetws() function is the wide-character equivalent of the fgets(3) function.  It reads a string of at most n-1 wide characters into the wide-character array pointed to by ws, and adds a ter‐
       minating null wide character (L'\0').  It stops reading wide characters after it has encountered and stored a newline wide character.  It also stops when end of stream is reached.

       The programmer must ensure that there is room for at least n wide characters at ws.

       For a nonlocking counterpart, see unlocked_stdio(3).

RETURN VALUE
       The fgetws() function, if successful, returns ws.  If end of stream was already reached or if an error occurred, it returns NULL.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fgetws()                                                                                                                                                                │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of fgetws() depends on the LC_CTYPE category of the current locale.

       In the absence of additional information passed to the fopen(3) call, it is reasonable to expect that fgetws() will actually read a multibyte string from the stream and then convert it to a wide-
       character string.

       This function is unreliable, because it does not permit to deal properly with null wide characters that may be present in the input.

SEE ALSO
       fgetwc(3), unlocked_stdio(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       fgetws(3)
FGETWS(3P)                                                                               POSIX Programmer's Manual                                                                              FGETWS(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       fgetws — get a wide-character string from a stream

SYNOPSIS
       #include <stdio.h>
       #include <wchar.h>

       wchar_t *fgetws(wchar_t *restrict ws, int n,
           FILE *restrict stream);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The  fgetws()  function  shall read characters from the stream, convert these to the corresponding wide-character codes, place them in the wchar_t array pointed to by ws, until n-1 characters are
       read, or a <newline> is read, converted, and transferred to ws, or an end-of-file condition is encountered. The wide-character string, ws, shall then be  terminated  with  a  null  wide-character
       code.

       If an error occurs, the resulting value of the file position indicator for the stream is unspecified.

       The fgetws() function may mark the last data access timestamp of the file associated with stream for update. The last data access timestamp shall be marked for update by the first successful exe‐
       cution of fgetwc(), fgetws(), fwscanf(), getwc(), getwchar(), vfwscanf(), vwscanf(), or wscanf() using stream that returns data not supplied by a prior call to ungetwc().

RETURN VALUE
       Upon successful completion, fgetws() shall return ws.  If the end-of-file indicator for the stream is set, or if the stream is at end-of-file, the end-of-file indicator for the  stream  shall  be
       set  and  fgetws()  shall return a null pointer. If a read error occurs, the error indicator for the stream shall be set, fgetws() shall return a null pointer, and shall set errno to indicate the
       error.

ERRORS
       Refer to fgetwc().

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5, Standard I/O Streams, fopen(), fread()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         FGETWS(3P)
