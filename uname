UNAME(1)                                                                                       User Commands                                                                                      UNAME(1)

NAME
       uname - print system information

SYNOPSIS
       uname [OPTION]...

DESCRIPTION
       Print certain system information.  With no OPTION, same as -s.

       -a, --all
              print all information, in the following order, except omit -p and -i if unknown:

       -s, --kernel-name
              print the kernel name

       -n, --nodename
              print the network node hostname

       -r, --kernel-release
              print the kernel release

       -v, --kernel-version
              print the kernel version

       -m, --machine
              print the machine hardware name

       -p, --processor
              print the processor type (non-portable)

       -i, --hardware-platform
              print the hardware platform (non-portable)

       -o, --operating-system
              print the operating system

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2023 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       arch(1), uname(2)

       Full documentation <https://www.gnu.org/software/coreutils/uname>
       or available locally via: info '(coreutils) uname invocation'

GNU coreutils 9.2                                                                               April 2023                                                                                        UNAME(1)
UNAME(1P)                                                                                POSIX Programmer's Manual                                                                               UNAME(1P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       uname — return system name

SYNOPSIS
       uname [-amnrsv]

DESCRIPTION
       By default, the uname utility shall write the operating system name to standard output. When options are specified, symbols representing one or more system characteristics shall be written to the
       standard  output. The format and contents of the symbols are implementation-defined. On systems conforming to the System Interfaces volume of POSIX.1‐2017, the symbols written shall be those sup‐
       ported by the uname() function as defined in the System Interfaces volume of POSIX.1‐2017.

OPTIONS
       The uname utility shall conform to the Base Definitions volume of POSIX.1‐2017, Section 12.2, Utility Syntax Guidelines.

       The following options shall be supported:

       -a        Behave as though all of the options -mnrsv were specified.

       -m        Write the name of the hardware type on which the system is running to standard output.

       -n        Write the name of this node within an implementation-defined communications network.

       -r        Write the current release level of the operating system implementation.

       -s        Write the name of the implementation of the operating system.

       -v        Write the current version level of this release of the operating system implementation.

       If no options are specified, the uname utility shall write the operating system name, as if the -s option had been specified.

OPERANDS
       None.

STDIN
       Not used.

INPUT FILES
       None.

ENVIRONMENT VARIABLES
       The following environment variables shall affect the execution of uname:

       LANG      Provide a default value for the internationalization variables that are unset or null. (See the Base Definitions volume of POSIX.1‐2017, Section 8.2, Internationalization Variables  for
                 the precedence of internationalization variables used to determine the values of locale categories.)

       LC_ALL    If set to a non-empty string value, override the values of all the other internationalization variables.

       LC_CTYPE  Determine the locale for the interpretation of sequences of bytes of text data as characters (for example, single-byte as opposed to multi-byte characters in arguments).

       LC_MESSAGES
                 Determine the locale that should be used to affect the format and contents of diagnostic messages written to standard error.

       NLSPATH   Determine the location of message catalogs for the processing of LC_MESSAGES.

ASYNCHRONOUS EVENTS
       Default.

STDOUT
       By default, the output shall be a single line of the following form:

           "%s\n", <sysname>

       If the -a option is specified, the output shall be a single line of the following form:

           "%s %s %s %s %s\n", <sysname>, <nodename>, <release>,
               <version>, <machine>

       Additional implementation-defined symbols may be written; all such symbols shall be written at the end of the line of output before the <newline>.

       If options are specified to select different combinations of the symbols, only those symbols shall be written, in the order shown above for the -a option. If a symbol is not selected for writing,
       its corresponding trailing <blank> characters also shall not be written.

STDERR
       The standard error shall be used only for diagnostic messages.

OUTPUT FILES
       None.

EXTENDED DESCRIPTION
       None.

EXIT STATUS
       The following exit values shall be returned:

        0    The requested information was successfully written.

       >0    An error occurred.

CONSEQUENCES OF ERRORS
       Default.

       The following sections are informative.

APPLICATION USAGE
       Note that any of the symbols could include embedded <space> characters, which may affect parsing algorithms if multiple options are selected for output.

       The node name is typically a name that the system uses to identify itself for inter-system communication addressing.

EXAMPLES
       The following command:

           uname -sr

       writes the operating system name and release level, separated by one or more <blank> characters.

RATIONALE
       It was suggested that this utility cannot be used portably since the format of the symbols is implementation-defined. The POSIX.1 working group could not achieve consensus on defining these  for‐
       mats  in  the  underlying uname() function, and there was no expectation that this volume of POSIX.1‐2017 would be any more successful. Some applications may still find this historical utility of
       value. For example, the symbols could be used for system log entries or for comparison with operator or user input.

FUTURE DIRECTIONS
       None.

SEE ALSO
       The Base Definitions volume of POSIX.1‐2017, Chapter 8, Environment Variables, Section 12.2, Utility Syntax Guidelines

       The System Interfaces volume of POSIX.1‐2017, uname()

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          UNAME(1P)
UNAME(3P)                                                                                POSIX Programmer's Manual                                                                               UNAME(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       uname — get the name of the current system

SYNOPSIS
       #include <sys/utsname.h>

       int uname(struct utsname *name);

DESCRIPTION
       The uname() function shall store information identifying the current system in the structure pointed to by name.

       The uname() function uses the utsname structure defined in <sys/utsname.h>.

       The uname() function shall return a string naming the current system in the character array sysname.  Similarly, nodename shall contain the name of this node within an implementation-defined com‐
       munications network. The arrays release and version shall further identify the operating system. The array machine shall contain a name that identifies the hardware that the system is running on.

       The format of each member is implementation-defined.

RETURN VALUE
       Upon successful completion, a non-negative value shall be returned.  Otherwise, -1 shall be returned and errno set to indicate the error.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       The inclusion of the nodename member in this structure does not imply that it is sufficient information for interfacing to communications networks.

RATIONALE
       The  values  of the structure members are not constrained to have any relation to the version of this volume of POSIX.1‐2017 implemented in the operating system. An application should instead de‐
       pend on _POSIX_VERSION and related constants defined in <unistd.h>.

       This volume of POSIX.1‐2017 does not define the sizes of the members of the structure and permits them to be of different sizes, although most implementations define them all to be the same size:
       eight bytes plus one byte for the string terminator. That size for nodename is not enough for use with many networks.

       The  uname() function originated in System III, System V, and related implementations, and it does not exist in Version 7 or 4.3 BSD. The values it returns are set at system compile time in those
       historical implementations.

       4.3 BSD has gethostname() and gethostid(), which return a symbolic name and a numeric value, respectively. There are related sethostname() and sethostid() functions that are used to set the  val‐
       ues the other two functions return. The former functions are included in this specification, the latter are not.

FUTURE DIRECTIONS
       None.

SEE ALSO
       The Base Definitions volume of POSIX.1‐2017, <sys_utsname.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          UNAME(3P)
uname(2)                                                                                    System Calls Manual                                                                                   uname(2)

NAME
       uname - get name and information about current kernel

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <sys/utsname.h>

       int uname(struct utsname *buf);

DESCRIPTION
       uname() returns system information in the structure pointed to by buf.  The utsname struct is defined in <sys/utsname.h>:

           struct utsname {
               char sysname[];    /* Operating system name (e.g., "Linux") */
               char nodename[];   /* Name within communications network
                                     to which the node is attached, if any */
               char release[];    /* Operating system release
                                     (e.g., "2.6.28") */
               char version[];    /* Operating system version */
               char machine[];    /* Hardware type identifier */
           #ifdef _GNU_SOURCE
               char domainname[]; /* NIS or YP domain name */
           #endif
           };

       The length of the arrays in a struct utsname is unspecified (see NOTES); the fields are terminated by a null byte ('\0').

RETURN VALUE
       On success, zero is returned.  On error, -1 is returned, and errno is set to indicate the error.

ERRORS
       EFAULT buf is not valid.

VERSIONS
       The domainname member (the NIS or YP domain name) is a GNU extension.

       The  length  of  the fields in the struct varies.  Some operating systems or libraries use a hardcoded 9 or 33 or 65 or 257.  Other systems use SYS_NMLN or _SYS_NMLN or UTSLEN or _UTSNAME_LENGTH.
       Clearly, it is a bad idea to use any of these constants; just use sizeof(...).  SVr4 uses 257, "to support Internet hostnames" — this is the largest value likely to be encountered in the wild.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, SVr4, 4.4BSD.

   C library/kernel differences
       Over time, increases in the size of the utsname structure have led to three successive versions of uname(): sys_olduname() (slot __NR_oldolduname), sys_uname() (slot __NR_olduname), and sys_newu‐
       name()  (slot  __NR_uname).   The first one used length 9 for all fields; the second used 65; the third also uses 65 but adds the domainname field.  The glibc uname() wrapper function hides these
       details from applications, invoking the most recent version of the system call provided by the kernel.

NOTES
       The kernel has the name, release, version, and supported machine type built in.  Conversely, the nodename field is configured by the administrator to match the network (this is what the BSD  his‐
       torically calls the "hostname", and is set via sethostname(2)).  Similarly, the domainname field is set via setdomainname(2).

       Part of the utsname information is also accessible via /proc/sys/kernel/{ostype, hostname, osrelease, version, domainname}.

SEE ALSO
       uname(1), getdomainname(2), gethostname(2), uts_namespaces(7)

Linux man-pages 6.04                                                                            2023-03-30                                                                                        uname(2)
