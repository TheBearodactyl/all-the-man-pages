iconv_open(3)                                                                            Library Functions Manual                                                                            iconv_open(3)

NAME
       iconv_open - allocate descriptor for character set conversion

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <iconv.h>

       iconv_t iconv_open(const char *tocode, const char *fromcode);

DESCRIPTION
       The iconv_open() function allocates a conversion descriptor suitable for converting byte sequences from character encoding fromcode to character encoding tocode.

       The values permitted for fromcode and tocode and the supported combinations are system-dependent.  For the GNU C library, the permitted values are listed by the iconv --list command, and all com‐
       binations of the listed values are supported.  Furthermore the GNU C library and the GNU libiconv library support the following two suffixes:

       //TRANSLIT
              When the string "//TRANSLIT" is appended to tocode, transliteration is activated.  This means that when a character cannot be represented in the target character set, it  can  be  approxi‐
              mated through one or several similarly looking characters.

       //IGNORE
              When the string "//IGNORE" is appended to tocode, characters that cannot be represented in the target character set will be silently discarded.

       The resulting conversion descriptor can be used with iconv(3) any number of times.  It remains valid until deallocated using iconv_close(3).

       A  conversion  descriptor contains a conversion state.  After creation using iconv_open(), the state is in the initial state.  Using iconv(3) modifies the descriptor's conversion state.  To bring
       the state back to the initial state, use iconv(3) with NULL as inbuf argument.

RETURN VALUE
       On success, iconv_open() returns a freshly allocated conversion descriptor.  On failure, it returns (iconv_t) -1 and sets errno to indicate the error.

ERRORS
       The following error can occur, among others:

       EINVAL The conversion from fromcode to tocode is not supported by the implementation.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────────┐
       │Interface                                                                                                                                                        │ Attribute     │ Value          │
       ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────────┤
       │iconv_open()                                                                                                                                                     │ Thread safety │ MT-Safe locale │
       └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       glibc 2.1.  POSIX.1-2001, SUSv2.

SEE ALSO
       iconv(1), iconv(3), iconv_close(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                   iconv_open(3)
ICONV_OPEN(3P)                                                                           POSIX Programmer's Manual                                                                          ICONV_OPEN(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       iconv_open — codeset conversion allocation function

SYNOPSIS
       #include <iconv.h>

       iconv_t iconv_open(const char *tocode, const char *fromcode);

DESCRIPTION
       The iconv_open() function shall return a conversion descriptor that describes a conversion from the codeset specified by the string pointed to by the fromcode argument to the codeset specified by
       the string pointed to by the tocode argument. For state-dependent encodings, the conversion descriptor shall be in a codeset-dependent initial shift state, ready for immediate use with iconv().

       Settings of fromcode and tocode and their permitted combinations are implementation-defined.

       A conversion descriptor shall remain valid until it is closed by iconv_close() or an implicit close.

       If a file descriptor is used to implement conversion descriptors, the FD_CLOEXEC flag shall be set; see <fcntl.h>.

RETURN VALUE
       Upon  successful  completion, iconv_open() shall return a conversion descriptor for use on subsequent calls to iconv().  Otherwise, iconv_open() shall return (iconv_t)-1 and set errno to indicate
       the error.

ERRORS
       The iconv_open() function may fail if:

       EMFILE All file descriptors available to the process are currently open.

       ENFILE Too many files are currently open in the system.

       ENOMEM Insufficient storage space is available.

       EINVAL The conversion specified by fromcode and tocode is not supported by the implementation.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Some implementations of iconv_open() use malloc() to allocate space for internal buffer areas. The iconv_open() function may fail if there is insufficient storage space to accommodate these  buf‐
       fers.

       Conforming applications must assume that conversion descriptors are not valid after a call to one of the exec functions.

       Application developers should consult the system documentation to determine the supported codesets and their naming schemes.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       iconv(), iconv_close()

       The Base Definitions volume of POSIX.1‐2017, <fcntl.h>, <iconv.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                     ICONV_OPEN(3P)
