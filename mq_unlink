mq_unlink(3)                                                                             Library Functions Manual                                                                             mq_unlink(3)

NAME
       mq_unlink - remove a message queue

LIBRARY
       Real-time library (librt, -lrt)

SYNOPSIS
       #include <mqueue.h>

       int mq_unlink(const char *name);

DESCRIPTION
       mq_unlink()  removes the specified message queue name.  The message queue name is removed immediately.  The queue itself is destroyed once any other processes that have the queue open close their
       descriptors referring to the queue.

RETURN VALUE
       On success mq_unlink() returns 0; on error, -1 is returned, with errno set to indicate the error.

ERRORS
       EACCES The caller does not have permission to unlink this message queue.

       ENAMETOOLONG
              name was too long.

       ENOENT There is no message queue with the given name.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │mq_unlink()                                                                                                                                                             │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

SEE ALSO
       mq_close(3), mq_getattr(3), mq_notify(3), mq_open(3), mq_receive(3), mq_send(3), mq_overview(7)

Linux man-pages 6.04                                                                            2023-03-30                                                                                    mq_unlink(3)
MQ_UNLINK(3P)                                                                            POSIX Programmer's Manual                                                                           MQ_UNLINK(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       mq_unlink — remove a message queue (REALTIME)

SYNOPSIS
       #include <mqueue.h>

       int mq_unlink(const char *name);

DESCRIPTION
       The mq_unlink() function shall remove the message queue named by the string name.  If one or more processes have the message queue open when mq_unlink() is  called,  destruction  of  the  message
       queue shall be postponed until all references to the message queue have been closed. However, the mq_unlink() call need not block until all references have been closed; it may return immediately.

       After  a  successful call to mq_unlink(), reuse of the name shall subsequently cause mq_open() to behave as if no message queue of this name exists (that is, mq_open() will fail if O_CREAT is not
       set, or will create a new message queue if O_CREAT is set).

RETURN VALUE
       Upon successful completion, the function shall return a value of zero.  Otherwise, the named message queue shall be unchanged by this function call, and the function shall return a  value  of  -1
       and set errno to indicate the error.

ERRORS
       The mq_unlink() function shall fail if:

       EACCES Permission is denied to unlink the named message queue.

       EINTR  The call to mq_unlink() blocked waiting for all references to the named message queue to be closed and a signal interrupted the call.

       ENOENT The named message queue does not exist.

       The mq_unlink() function may fail if:

       ENAMETOOLONG
              The  length  of  the  name argument exceeds {_POSIX_PATH_MAX} on systems that do not support the XSI option or exceeds {_XOPEN_PATH_MAX} on XSI systems, or has a pathname component that is
              longer than {_POSIX_NAME_MAX} on systems that do not support the XSI option or longer than {_XOPEN_NAME_MAX} on XSI systems.  A call to mq_unlink() with a name argument that  contains  the
              same message queue name as was previously used in a successful mq_open() call shall not give an [ENAMETOOLONG] error.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       A future version might require the mq_open() and mq_unlink() functions to have semantics similar to normal file system operations.

SEE ALSO
       mq_close(), mq_open(), msgctl(), msgget(), msgrcv(), msgsnd()

       The Base Definitions volume of POSIX.1‐2017, <mqueue.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                      MQ_UNLINK(3P)
