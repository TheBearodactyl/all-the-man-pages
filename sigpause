sigpause(3)                Library Functions Manual                sigpause(3)

NAME
       sigpause - atomically release blocked signals and wait for interrupt

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <signal.h>

       [[deprecated]] int sigpause(int sigmask);  /* BSD (but see NOTES) */

       [[deprecated]] int sigpause(int sig);      /* POSIX.1 / SysV / UNIX 95 */

DESCRIPTION
       Don't use this function.  Use sigsuspend(2) instead.

       The  function  sigpause()  is  designed  to  wait  for some signal.  It
       changes the process's signal mask (set of blocked  signals),  and  then
       waits  for  a signal to arrive.  Upon arrival of a signal, the original
       signal mask is restored.

RETURN VALUE
       If sigpause() returns, it was interrupted by a signal  and  the  return
       value is -1 with errno set to EINTR.

ATTRIBUTES
       For  an  explanation  of  the  terms  used  in  this  section,  see at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │sigpause()                                  │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

VERSIONS
       On Linux, this routine is a system call only on the Sparc (sparc64) ar‐
       chitecture.

       glibc uses the BSD version if the _BSD_SOURCE feature test macro is de‐
       fined  and  none  of  _POSIX_SOURCE,  _POSIX_C_SOURCE,   _XOPEN_SOURCE,
       _GNU_SOURCE,  or _SVID_SOURCE is defined.  Otherwise, the System V ver‐
       sion is used, and feature test macros must be defined as follows to ob‐
       tain the declaration:

       •  Since glibc 2.26: _XOPEN_SOURCE >= 500

       •  glibc 2.25 and earlier: _XOPEN_SOURCE

       Since  glibc  2.19, only the System V version is exposed by <signal.h>;
       applications that formerly used the BSD sigpause() should be amended to
       use sigsuspend(2).

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.  Obsoleted in POSIX.1-2008.

       The classical BSD version of this function appeared in 4.2BSD.  It sets
       the process's signal mask to sigmask.  UNIX 95 standardized the  incom‐
       patible System V version of this function, which removes only the spec‐
       ified signal sig from the process's signal mask.  The unfortunate situ‐
       ation  with two incompatible functions with the same name was solved by
       the sigsuspend(2) function, that takes a sigset_t *  argument  (instead
       of an int).

SEE ALSO
       kill(2),   sigaction(2),  sigprocmask(2),  sigsuspend(2),  sigblock(3),
       sigvec(3), feature_test_macros(7)

Linux man-pages 6.04              2023-03-30                       sigpause(3)
SIGPAUSE(3P)               POSIX Programmer's Manual              SIGPAUSE(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       sigpause — remove a signal from the signal mask and suspend the thread

SYNOPSIS
       #include <signal.h>

       int sigpause(int sig);

DESCRIPTION
       Refer to sighold().

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                         SIGPAUSE(3P)
