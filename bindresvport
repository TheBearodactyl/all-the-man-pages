bindresvport(3)                                                                          Library Functions Manual                                                                          bindresvport(3)

NAME
       bindresvport - bind a socket to a privileged IP port

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <sys/types.h>
       #include <netinet/in.h>

       int bindresvport(int sockfd, struct sockaddr_in *sin);

DESCRIPTION
       bindresvport() is used to bind the socket referred to by the file descriptor sockfd to a privileged anonymous IP port, that is, a port number arbitrarily selected from the range 512 to 1023.

       If the bind(2) performed by bindresvport() is successful, and sin is not NULL, then sin->sin_port returns the port number actually allocated.

       sin  can  be NULL, in which case sin->sin_family is implicitly taken to be AF_INET.  However, in this case, bindresvport() has no way to return the port number actually allocated.  (This informa‐
       tion can later be obtained using getsockname(2).)

RETURN VALUE
       bindresvport() returns 0 on success; otherwise -1 is returned and errno is set to indicate the error.

ERRORS
       bindresvport() can fail for any of the same reasons as bind(2).  In addition, the following errors may occur:

       EACCES The calling process was not privileged (on Linux: the calling process did not have the CAP_NET_BIND_SERVICE capability in the user namespace governing its network namespace).

       EADDRINUSE
              All privileged ports are in use.

       EAFNOSUPPORT (EPFNOSUPPORT in glibc 2.7 and earlier)
              sin is not NULL and sin->sin_family is not AF_INET.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌───────────────┬───────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
       │Interface      │ Attribute     │ Value                                                                                                                                                            │
       ├───────────────┼───────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │bindresvport() │ Thread safety │ glibc >= 2.17: MT-Safe; glibc < 2.17: MT-Unsafe                                                                                                                  │
       └───────────────┴───────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

       The bindresvport() function uses a static variable that was not protected by a lock before glibc 2.17, rendering the function MT-Unsafe.

VERSIONS
       Present on the BSDs, Solaris, and many other systems.

NOTES
       Unlike some bindresvport() implementations, the glibc implementation ignores any value that the caller supplies in sin->sin_port.

STANDARDS
       BSD.

SEE ALSO
       bind(2), getsockname(2)

Linux man-pages 6.04                                                                            2023-03-30                                                                                 bindresvport(3)
BINDRESVPORT(3)                                                                        BSD Library Functions Manual                                                                        BINDRESVPORT(3)

NAME
     bindresvport, bindresvport_sa — bind a socket to a privileged IP port

SYNOPSIS
     #include <sys/types.h>
     #include <rpc/rpc.h>

     int
     bindresvport(int sd, struct sockaddr_in *sin);

     int
     bindresvport_sa(int sd, struct sockaddr *sa);

DESCRIPTION
     The bindresvport() and bindresvport_sa() functions are used to bind a socket descriptor to a privileged IP port, that is, a port number in the range 0-1023.

     If sin is a pointer to a struct sockaddr_in then the appropriate fields in the structure should be defined.  Note that sin->sin_family must be initialized to the address family of the socket,
     passed by sd.  If sin->sin_port is ‘0’ then an anonymous port (in the range 600-1023) will be chosen, and if bind(2) is successful, the sin->sin_port will be updated to contain the allocated port.

     If sin is the NULL pointer, an anonymous port will be allocated (as above).  However, there is no way for bindresvport() to return the allocated port in this case.

     Only root can bind to a privileged port; this call will fail for any other users.

     Function prototype of bindresvport() is biased to AF_INET socket.  The bindresvport_sa() function acts exactly the same, with more neutral function prototype.  Note that both functions behave ex‐
     actly the same, and both support AF_INET6 sockets as well as AF_INET sockets.

RETURN VALUES
     The bindresvport() function returns the value 0 if successful; otherwise the value -1 is returned and the global variable errno is set to indicate the error.

ERRORS
     [EPFNOSUPPORT]     If second argument was supplied, and address family did not match between arguments.

     The bindresvport() function may also fail and set errno for any of the errors specified for the calls bind(2), getsockopt(2), or setsockopt(2).

AVAILABILITY
     The bindresvport() function is part of libtirpc.

SEE ALSO
     bind(2), getsockopt(2), setsockopt(2)

BSD                                                                                          November 22, 1987                                                                                         BSD
