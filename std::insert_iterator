std::insert_iterator< _ContLibrary(Functistd::insert_iterator< _Container >(3)

NAME
       std::insert_iterator< _Container > - Turns assignment into insertion.

SYNOPSIS
       #include <iterator>

       Inherits std::iterator< output_iterator_tag, void, void, void, void >.

   Public Types
       typedef _Container container_type
           A nested typedef for the type of whatever container you used.
       using difference_type = ptrdiff_t
       typedef output_iterator_tag iterator_category
           One of the tag types.
       typedef void pointer
           This type represents a pointer-to-value_type.
       typedef void reference
           This type represents a reference-to-value_type.
       typedef void value_type
           The type 'pointed to' by the iterator.

   Public Member Functions
       constexpr insert_iterator (_Container &__x, _Iter __i)
       constexpr insert_iterator & operator* ()
           Simply returns *this.
       constexpr insert_iterator & operator++ ()
           Simply returns *this. (This iterator does not move.)
       constexpr insert_iterator & operator++ (int)
           Simply returns *this. (This iterator does not move.)
       constexpr insert_iterator & operator= (const typename
           _Container::value_type &__value)
       constexpr insert_iterator & operator= (typename _Container::value_type
           &&__value)

   Protected Attributes
       _Container * container
       _Iter iter

Detailed Description
   template<typename _Container>
       class std::insert_iterator< _Container >"Turns assignment into
       insertion.

       These are output iterators, constructed from a container-of-T.
       Assigning a T to the iterator inserts it in the container at the
       iterator's position, rather than overwriting the value at that
       position.

       (Sequences will actually insert a copy of the value before the
       iterator's position.)

       Tip: Using the inserter function to create these iterators can save
       typing.

       Definition at line 900 of file bits/iterator.

Member Typedef Documentation
   template<typename _Container > typedef _Container std::insert_iterator<
       _Container >::container_type
       A nested typedef for the type of whatever container you used.

       Definition at line 914 of file bits/iterator.

   template<typename _Container > using std::insert_iterator< _Container
       >::difference_type =  ptrdiff_t
       Definition at line 917 of file bits/iterator.

   typedef output_iterator_tag  std::iterator< output_iterator_tag , void ,
       void , void , void  >::iterator_category [inherited]
       One of the tag types.

       Definition at line 130 of file stl_iterator_base_types.h.

   typedef void  std::iterator< output_iterator_tag , void , void , void ,
       void  >::pointer [inherited]
       This type represents a pointer-to-value_type.

       Definition at line 136 of file stl_iterator_base_types.h.

   typedef void  std::iterator< output_iterator_tag , void , void , void ,
       void  >::reference [inherited]
       This type represents a reference-to-value_type.

       Definition at line 138 of file stl_iterator_base_types.h.

   typedef void  std::iterator< output_iterator_tag , void , void , void ,
       void  >::value_type [inherited]
       The type 'pointed to' by the iterator.

       Definition at line 132 of file stl_iterator_base_types.h.

Constructor & Destructor Documentation
   template<typename _Container > constexpr std::insert_iterator< _Container
       >::insert_iterator (_Container & __x, _Iter __i) [inline],  [constexpr]
       The only way to create this iterator is with a container and an initial
       position (a normal iterator into the container).

       Definition at line 925 of file bits/iterator.

Member Function Documentation
   template<typename _Container > constexpr insert_iterator &
       std::insert_iterator< _Container >::operator* () [inline],  [constexpr]
       Simply returns *this.

       Definition at line 982 of file bits/iterator.

   template<typename _Container > constexpr insert_iterator &
       std::insert_iterator< _Container >::operator++ () [inline],
       [constexpr]
       Simply returns *this. (This iterator does not move.)

       Definition at line 988 of file bits/iterator.

   template<typename _Container > constexpr insert_iterator &
       std::insert_iterator< _Container >::operator++ (int) [inline],
       [constexpr]
       Simply returns *this. (This iterator does not move.)

       Definition at line 994 of file bits/iterator.

   template<typename _Container > constexpr insert_iterator &
       std::insert_iterator< _Container >::operator= (const typename
       _Container::value_type & __value) [inline],  [constexpr]
       Parameters
           __value An instance of whatever type
           container_type::const_reference is; presumably a reference-to-const
           T for container<T>.

       Returns
           This iterator, for chained operations.

       This kind of iterator maintains its own position in the container.
       Assigning a value to the iterator will insert the value into the
       container at the place before the iterator.

       The position is maintained such that subsequent assignments will insert
       values immediately after one another. For example,

       // vector v contains A and Z

       insert_iterator i (v, ++v.begin());
       i = 1;
       i = 2;
       i = 3;

       // vector v contains A, 1, 2, 3, and Z

       Definition at line 962 of file bits/iterator.

   template<typename _Container > constexpr insert_iterator &
       std::insert_iterator< _Container >::operator= (typename
       _Container::value_type && __value) [inline],  [constexpr]
       Definition at line 971 of file bits/iterator.

Member Data Documentation
   template<typename _Container > _Container* std::insert_iterator< _Container
       >::container [protected]
       Definition at line 909 of file bits/iterator.

   template<typename _Container > _Iter std::insert_iterator< _Container
       >::iter [protected]
       Definition at line 910 of file bits/iterator.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1std::insert_iterator< _Container >(3)
