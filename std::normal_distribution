std::normal_distribution< _LibraryeFunstd::normal_distribution< _RealType >(3)

NAME
       std::normal_distribution< _RealType > - A normal continuous
       distribution for random numbers.

SYNOPSIS
       #include <random>

   Classes
       struct param_type

   Public Types
       typedef _RealType result_type

   Public Member Functions
       normal_distribution (const param_type &__p)
       normal_distribution (result_type __mean, result_type
           __stddev=result_type(1))
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng,
           const param_type &__p)
       template<typename _UniformRandomNumberGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomNumberGenerator
           &__urng, const param_type &__p)
       result_type max () const
           Returns the least upper bound value of the distribution.
       _RealType mean () const
           Returns the mean of the distribution.
       result_type min () const
           Returns the greatest lower bound value of the distribution.
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng)
           Generating functions.
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng, const param_type
           &__p)
       param_type param () const
           Returns the parameter set of the distribution.
       void param (const param_type &__param)
           Sets the parameter set of the distribution.
       void reset ()
           Resets the distribution state.
       _RealType stddev () const
           Returns the standard deviation of the distribution.

   Friends
       template<typename _RealType1 , typename _CharT , typename _Traits >
           std::basic_ostream< _CharT, _Traits > & operator<<
           (std::basic_ostream< _CharT, _Traits > &__os, const
           std::normal_distribution< _RealType1 > &__x)
           Inserts a normal_distribution random number distribution __x into
           the output stream __os.
       template<typename _RealType1 > bool operator== (const
           std::normal_distribution< _RealType1 > &__d1, const
           std::normal_distribution< _RealType1 > &__d2)
           Return true if two normal distributions have the same parameters
           and the sequences that would be generated are equal.
       template<typename _RealType1 , typename _CharT , typename _Traits >
           std::basic_istream< _CharT, _Traits > & operator>>
           (std::basic_istream< _CharT, _Traits > &__is,
           std::normal_distribution< _RealType1 > &__x)
           Extracts a normal_distribution random number distribution __x from
           the input stream __is.

Detailed Description
   template<typename _RealType = double>
       class std::normal_distribution< _RealType >"A normal continuous
       distribution for random numbers.

       The formula for the normal probability density function is
           p(x|,ma) = ac{1}{ma t{2 i}}
                  e^{- ac{{x - }^ {2}}{2 ma ^ {2}} } ]

       Definition at line 1975 of file random.

Member Typedef Documentation
   template<typename _RealType  = double> typedef _RealType
       std::normal_distribution< _RealType >::result_type
       The type of the range of the distribution.

       Definition at line 1982 of file random.

Constructor & Destructor Documentation
   template<typename _RealType  = double> std::normal_distribution< _RealType
       >::normal_distribution () [inline]
       Definition at line 2021 of file random.

   template<typename _RealType  = double> std::normal_distribution< _RealType
       >::normal_distribution (result_type __mean, result_type __stddev =
       result_type(1)) [inline],  [explicit]
       Constructs a normal distribution with parameters $mean$ and standard
       deviation.

       Definition at line 2028 of file random.

   template<typename _RealType  = double> std::normal_distribution< _RealType
       >::normal_distribution (const param_type & __p) [inline],  [explicit]
       Definition at line 2034 of file random.

Member Function Documentation
   template<typename _RealType  = double> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void std::normal_distribution<
       _RealType >::__generate (_ForwardIterator __f, _ForwardIterator __t,
       _UniformRandomNumberGenerator & __urng) [inline]
       Definition at line 2104 of file random.

   template<typename _RealType  = double> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void std::normal_distribution<
       _RealType >::__generate (_ForwardIterator __f, _ForwardIterator __t,
       _UniformRandomNumberGenerator & __urng, const param_type & __p)
       [inline]
       Definition at line 2111 of file random.

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > void std::normal_distribution<
       _RealType >::__generate (result_type * __f, result_type * __t,
       _UniformRandomNumberGenerator & __urng, const param_type & __p)
       [inline]
       Definition at line 2118 of file random.

   template<typename _RealType  = double> result_type
       std::normal_distribution< _RealType >::max () const [inline]
       Returns the least upper bound value of the distribution.

       Definition at line 2085 of file random.

       References std::numeric_limits< _Tp >::max().

   template<typename _RealType  = double> _RealType std::normal_distribution<
       _RealType >::mean () const [inline]
       Returns the mean of the distribution.

       Definition at line 2049 of file random.

   template<typename _RealType  = double> result_type
       std::normal_distribution< _RealType >::min () const [inline]
       Returns the greatest lower bound value of the distribution.

       Definition at line 2078 of file random.

       References std::numeric_limits< _Tp >::lowest().

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > result_type std::normal_distribution<
       _RealType >::operator() (_UniformRandomNumberGenerator & __urng)
       [inline]
       Generating functions.

       Definition at line 2093 of file random.

       References std::normal_distribution< _RealType >::operator()().

       Referenced by std::normal_distribution< _RealType >::operator()().

   template<typename _RealType > template<typename
       _UniformRandomNumberGenerator > normal_distribution< _RealType
       >::result_type std::normal_distribution< _RealType >::operator()
       (_UniformRandomNumberGenerator & __urng, const param_type & __param)
       Polar method due to Marsaglia.

       Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
       New York, 1986, Ch. V, Sect. 4.4.

       Definition at line 1809 of file bits/random.tcc.

       References std::log(), and std::sqrt().

   template<typename _RealType  = double> param_type std::normal_distribution<
       _RealType >::param () const [inline]
       Returns the parameter set of the distribution.

       Definition at line 2063 of file random.

   template<typename _RealType  = double> void std::normal_distribution<
       _RealType >::param (const param_type & __param) [inline]
       Sets the parameter set of the distribution.

       Parameters
           __param The new parameter set of the distribution.

       Definition at line 2071 of file random.

   template<typename _RealType  = double> void std::normal_distribution<
       _RealType >::reset () [inline]
       Resets the distribution state.

       Definition at line 2042 of file random.

       Referenced by std::lognormal_distribution< _RealType >::reset(),
       std::gamma_distribution< _RealType >::reset(),
       std::student_t_distribution< _RealType >::reset(),
       std::binomial_distribution< _IntType >::reset(), and
       std::poisson_distribution< _IntType >::reset().

   template<typename _RealType  = double> _RealType std::normal_distribution<
       _RealType >::stddev () const [inline]
       Returns the standard deviation of the distribution.

       Definition at line 2056 of file random.

Friends And Related Function Documentation
   template<typename _RealType  = double> template<typename _RealType1 ,
       typename _CharT , typename _Traits > std::basic_ostream< _CharT,
       _Traits > & operator<< (std::basic_ostream< _CharT, _Traits > & __os,
       const std::normal_distribution< _RealType1 > & __x) [friend]
       Inserts a normal_distribution random number distribution __x into the
       output stream __os.

       Parameters
           __os An output stream.
           __x A normal_distribution random number distribution.

       Returns
           The output stream with the state of __x inserted or in an error
           state.

   template<typename _RealType  = double> template<typename _RealType1 > bool
       operator== (const std::normal_distribution< _RealType1 > & __d1, const
       std::normal_distribution< _RealType1 > & __d2) [friend]
       Return true if two normal distributions have the same parameters and
       the sequences that would be generated are equal.

   template<typename _RealType  = double> template<typename _RealType1 ,
       typename _CharT , typename _Traits > std::basic_istream< _CharT,
       _Traits > & operator>> (std::basic_istream< _CharT, _Traits > & __is,
       std::normal_distribution< _RealType1 > & __x) [friend]
       Extracts a normal_distribution random number distribution __x from the
       input stream __is.

       Parameters
           __is An input stream.
           __x A normal_distribution random number generator engine.

       Returns
           The input stream with __x extracted or in an error state.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Festd::normal_distribution< _RealType >(3)
