std::__debug(3)            Library Functions Manual            std::__debug(3)

NAME
       std::__debug - GNU debug code, replaces standard behavior with debug
       behavior.

SYNOPSIS
   Classes
       class bitset
           Class std::bitset with additional safety/checking/debug
           instrumentation.
       class deque
           Class std::deque with safety/checking/debug instrumentation.
       class forward_list
           Class std::forward_list with safety/checking/debug instrumentation.
       class list
           Class std::list with safety/checking/debug instrumentation.
       class map
           Class std::map with safety/checking/debug instrumentation.
       class multimap
           Class std::multimap with safety/checking/debug instrumentation.
       class multiset
           Class std::multiset with safety/checking/debug instrumentation.
       class set
           Class std::set with safety/checking/debug instrumentation.
       class unordered_map
           Class std::unordered_map with safety/checking/debug
           instrumentation.
       class unordered_multimap
           Class std::unordered_multimap with safety/checking/debug
           instrumentation.
       class unordered_multiset
           Class std::unordered_multiset with safety/checking/debug
           instrumentation.
       class unordered_set
           Class std::unordered_set with safety/checking/debug
           instrumentation.
       class vector
           Class std::vector with safety/checking/debug instrumentation.

   Functions
       template<typename _InputIterator , typename _ValT  = typename
           iterator_traits<_InputIterator>::value_type, typename _Allocator  =
           allocator<_ValT>, typename  = _RequireInputIter<_InputIterator>,
           typename  = _RequireAllocator<_Allocator>> deque (_InputIterator,
           _InputIterator, _Allocator=_Allocator()) -> deque< _ValT,
           _Allocator >
       template<typename _Tp , typename _Allocator  = allocator<_Tp>, typename
           = _RequireAllocator<_Allocator>> deque (size_t, _Tp,
           _Allocator=_Allocator()) -> deque< _Tp, _Allocator >
       template<typename _InputIterator , typename _ValT  = typename
           iterator_traits<_InputIterator>::value_type, typename _Allocator  =
           allocator<_ValT>, typename  = _RequireInputIter<_InputIterator>,
           typename  = _RequireAllocator<_Allocator>> forward_list
           (_InputIterator, _InputIterator, _Allocator=_Allocator()) ->
           forward_list< _ValT, _Allocator >
       template<typename _Tp , typename _Allocator  = allocator<_Tp>, typename
           = _RequireAllocator<_Allocator>> forward_list (size_t, _Tp,
           _Allocator=_Allocator()) -> forward_list< _Tp, _Allocator >
       template<typename _InputIterator , typename _ValT  = typename
           iterator_traits<_InputIterator>::value_type, typename _Allocator  =
           allocator<_ValT>, typename  = _RequireInputIter<_InputIterator>,
           typename  = _RequireAllocator<_Allocator>> list (_InputIterator,
           _InputIterator, _Allocator=_Allocator()) -> list< _ValT, _Allocator
           >
       template<typename _Tp , typename _Allocator  = allocator<_Tp>, typename
           = _RequireAllocator<_Allocator>> list (size_t, _Tp,
           _Allocator=_Allocator()) -> list< _Tp, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> map (_InputIterator, _InputIterator,
           _Allocator) -> map< __iter_key_t< _InputIterator >, __iter_val_t<
           _InputIterator >, less< __iter_key_t< _InputIterator > >,
           _Allocator >
       template<typename _InputIterator , typename _Compare  =
           less<__iter_key_t<_InputIterator>>, typename _Allocator  =
           allocator<__iter_to_alloc_t<_InputIterator>>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> map (_InputIterator, _InputIterator,
           _Compare=_Compare(), _Allocator=_Allocator()) -> map< __iter_key_t<
           _InputIterator >, __iter_val_t< _InputIterator >, _Compare,
           _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> map (initializer_list< pair< _Key,
           _Tp > >, _Allocator) -> map< _Key, _Tp, less< _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Compare  =
           less<_Key>, typename _Allocator  = allocator<pair<const _Key,
           _Tp>>, typename  = _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> map (initializer_list< pair< _Key,
           _Tp > >, _Compare=_Compare(), _Allocator=_Allocator()) -> map<
           _Key, _Tp, _Compare, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> multimap (_InputIterator,
           _InputIterator, _Allocator) -> multimap< __iter_key_t<
           _InputIterator >, __iter_val_t< _InputIterator >, less<
           __iter_key_t< _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Compare  =
           less<__iter_key_t<_InputIterator>>, typename _Allocator  =
           allocator<__iter_to_alloc_t<_InputIterator>>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> multimap (_InputIterator,
           _InputIterator, _Compare=_Compare(), _Allocator=_Allocator()) ->
           multimap< __iter_key_t< _InputIterator >, __iter_val_t<
           _InputIterator >, _Compare, _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> multimap (initializer_list< pair<
           _Key, _Tp > >, _Allocator) -> multimap< _Key, _Tp, less< _Key >,
           _Allocator >
       template<typename _Key , typename _Tp , typename _Compare  =
           less<_Key>, typename _Allocator  = allocator<pair<const _Key,
           _Tp>>, typename  = _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> multimap (initializer_list< pair<
           _Key, _Tp > >, _Compare=_Compare(), _Allocator=_Allocator()) ->
           multimap< _Key, _Tp, _Compare, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> multiset (_InputIterator,
           _InputIterator, _Allocator) -> multiset< typename iterator_traits<
           _InputIterator >::value_type, less< typename iterator_traits<
           _InputIterator >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Compare  = less<typename
           iterator_traits<_InputIterator>::value_type>, typename _Allocator
           = allocator<typename iterator_traits<_InputIterator>::value_type>,
           typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> multiset (_InputIterator,
           _InputIterator, _Compare=_Compare(), _Allocator=_Allocator()) ->
           multiset< typename iterator_traits< _InputIterator >::value_type,
           _Compare, _Allocator >
       template<typename _Key , typename _Allocator , typename  =
           _RequireAllocator<_Allocator>> multiset (initializer_list< _Key >,
           _Allocator) -> multiset< _Key, less< _Key >, _Allocator >
       template<typename _Key , typename _Compare  = less<_Key>, typename
           _Allocator  = allocator<_Key>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> multiset (initializer_list< _Key >,
           _Compare=_Compare(), _Allocator=_Allocator()) -> multiset< _Key,
           _Compare, _Allocator >
       template<typename _Tp , typename _Alloc > bool operator!= (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator!= (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
       template<typename _Tp , typename _Alloc > bool operator!= (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator!= (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator!= (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator!= (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator!= (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator!= (const
           vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<size_t _Nb> bitset< _Nb > operator& (const bitset< _Nb > &__x,
           const bitset< _Nb > &__y) noexcept
       template<typename _Tp , typename _Alloc > bool operator< (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator< (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
       template<typename _Tp , typename _Alloc > bool operator< (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator< (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator< (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator< (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator< (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator< (const vector<
           _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<typename _CharT , typename _Traits , size_t _Nb>
           std::basic_ostream< _CharT, _Traits > & operator<<
           (std::basic_ostream< _CharT, _Traits > &__os, const bitset< _Nb >
           &__x)
       template<typename _Tp , typename _Alloc > bool operator<= (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator<= (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
           Based on operator<.
       template<typename _Tp , typename _Alloc > bool operator<= (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator<= (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator<= (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator<= (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator<= (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator<= (const
           vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator== (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator== (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
       template<typename _Tp , typename _Alloc > bool operator== (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator== (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator== (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator== (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator== (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Tp , typename _Hash , typename _Pred
           , typename _Alloc > bool operator== (const unordered_map< _Key,
           _Tp, _Hash, _Pred, _Alloc > &__x, const unordered_map< _Key, _Tp,
           _Hash, _Pred, _Alloc > &__y)
       template<typename _Key , typename _Tp , typename _Hash , typename _Pred
           , typename _Alloc > bool operator== (const unordered_multimap<
           _Key, _Tp, _Hash, _Pred, _Alloc > &__x, const unordered_multimap<
           _Key, _Tp, _Hash, _Pred, _Alloc > &__y)
       template<typename _Value , typename _Hash , typename _Pred , typename
           _Alloc > bool operator== (const unordered_multiset< _Value, _Hash,
           _Pred, _Alloc > &__x, const unordered_multiset< _Value, _Hash,
           _Pred, _Alloc > &__y)
       template<typename _Value , typename _Hash , typename _Pred , typename
           _Alloc > bool operator== (const unordered_set< _Value, _Hash,
           _Pred, _Alloc > &__x, const unordered_set< _Value, _Hash, _Pred,
           _Alloc > &__y)
       template<typename _Tp , typename _Alloc > bool operator== (const
           vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator> (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator> (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
           Based on operator<.
       template<typename _Tp , typename _Alloc > bool operator> (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator> (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator> (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator> (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator> (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator> (const vector<
           _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator>= (const deque<
           _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator>= (const
           forward_list< _Tp, _Alloc > &__lx, const forward_list< _Tp, _Alloc
           > &__ly)
           Based on operator<.
       template<typename _Tp , typename _Alloc > bool operator>= (const list<
           _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator>= (const map< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator >
           &__rhs)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > bool operator>= (const multimap< _Key, _Tp, _Compare,
           _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare,
           _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator>= (const multiset< _Key, _Compare, _Allocator > &__lhs,
           const multiset< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Key , typename _Compare , typename _Allocator > bool
           operator>= (const set< _Key, _Compare, _Allocator > &__lhs, const
           set< _Key, _Compare, _Allocator > &__rhs)
       template<typename _Tp , typename _Alloc > bool operator>= (const
           vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)
       template<typename _CharT , typename _Traits , size_t _Nb>
           std::basic_istream< _CharT, _Traits > & operator>>
           (std::basic_istream< _CharT, _Traits > &__is, bitset< _Nb > &__x)
       template<size_t _Nb> bitset< _Nb > operator^ (const bitset< _Nb > &__x,
           const bitset< _Nb > &__y) noexcept
       template<size_t _Nb> bitset< _Nb > operator| (const bitset< _Nb > &__x,
           const bitset< _Nb > &__y) noexcept
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> set (_InputIterator, _InputIterator,
           _Allocator) -> set< typename iterator_traits< _InputIterator
           >::value_type, less< typename iterator_traits< _InputIterator
           >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Compare  = less<typename
           iterator_traits<_InputIterator>::value_type>, typename _Allocator
           = allocator<typename iterator_traits<_InputIterator>::value_type>,
           typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> set (_InputIterator, _InputIterator,
           _Compare=_Compare(), _Allocator=_Allocator()) -> set< typename
           iterator_traits< _InputIterator >::value_type, _Compare, _Allocator
           >
       template<typename _Key , typename _Allocator , typename  =
           _RequireAllocator<_Allocator>> set (initializer_list< _Key >,
           _Allocator) -> set< _Key, less< _Key >, _Allocator >
       template<typename _Key , typename _Compare  = less<_Key>, typename
           _Allocator  = allocator<_Key>, typename  =
           _RequireNotAllocator<_Compare>, typename  =
           _RequireAllocator<_Allocator>> set (initializer_list< _Key >,
           _Compare=_Compare(), _Allocator=_Allocator()) -> set< _Key,
           _Compare, _Allocator >
       template<typename _Tp , typename _Alloc > void swap (deque< _Tp, _Alloc
           > &__lhs, deque< _Tp, _Alloc > &__rhs) noexcept(/*conditional */)
       template<typename _Tp , typename _Alloc > void swap (forward_list< _Tp,
           _Alloc > &__lx, forward_list< _Tp, _Alloc > &__ly)
           noexcept(noexcept(__lx.swap(__ly)))
           See std::forward_list::swap().
       template<typename _Tp , typename _Alloc > void swap (list< _Tp, _Alloc
           > &__lhs, list< _Tp, _Alloc > &__rhs) noexcept(/*conditional */)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > void swap (map< _Key, _Tp, _Compare, _Allocator >
           &__lhs, map< _Key, _Tp, _Compare, _Allocator > &__rhs)
           noexcept(/*conditional */)
       template<typename _Key , typename _Tp , typename _Compare , typename
           _Allocator > void swap (multimap< _Key, _Tp, _Compare, _Allocator >
           &__lhs, multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)
           noexcept(/*conditional */)
       template<typename _Key , typename _Compare , typename _Allocator > void
           swap (multiset< _Key, _Compare, _Allocator > &__x, multiset< _Key,
           _Compare, _Allocator > &__y) noexcept(/*conditional */)
       template<typename _Key , typename _Compare , typename _Allocator > void
           swap (set< _Key, _Compare, _Allocator > &__x, set< _Key, _Compare,
           _Allocator > &__y) noexcept(/*conditional */)
       template<typename _Key , typename _Tp , typename _Hash , typename _Pred
           , typename _Alloc > void swap (unordered_map< _Key, _Tp, _Hash,
           _Pred, _Alloc > &__x, unordered_map< _Key, _Tp, _Hash, _Pred,
           _Alloc > &__y) noexcept(noexcept(__x.swap(__y)))
       template<typename _Key , typename _Tp , typename _Hash , typename _Pred
           , typename _Alloc > void swap (unordered_multimap< _Key, _Tp,
           _Hash, _Pred, _Alloc > &__x, unordered_multimap< _Key, _Tp, _Hash,
           _Pred, _Alloc > &__y) noexcept(noexcept(__x.swap(__y)))
       template<typename _Value , typename _Hash , typename _Pred , typename
           _Alloc > void swap (unordered_multiset< _Value, _Hash, _Pred,
           _Alloc > &__x, unordered_multiset< _Value, _Hash, _Pred, _Alloc >
           &__y) noexcept(noexcept(__x.swap(__y)))
       template<typename _Value , typename _Hash , typename _Pred , typename
           _Alloc > void swap (unordered_set< _Value, _Hash, _Pred, _Alloc >
           &__x, unordered_set< _Value, _Hash, _Pred, _Alloc > &__y)
           noexcept(noexcept(__x.swap(__y)))
       template<typename _Tp , typename _Alloc > void swap (vector< _Tp,
           _Alloc > &__lhs, vector< _Tp, _Alloc > &__rhs)
           noexcept(/*conditional */)
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_map (_InputIterator,
           _InputIterator, _Allocator) -> unordered_map< __iter_key_t<
           _InputIterator >, __iter_val_t< _InputIterator >, hash<
           __iter_key_t< _InputIterator > >, equal_to< __iter_key_t<
           _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_map (_InputIterator,
           _InputIterator, typename unordered_map< int, int >::size_type,
           _Allocator) -> unordered_map< __iter_key_t< _InputIterator >,
           __iter_val_t< _InputIterator >, hash< __iter_key_t< _InputIterator
           > >, equal_to< __iter_key_t< _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Hash , typename _Allocator
           , typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_map (_InputIterator,
           _InputIterator, typename unordered_map< int, int >::size_type,
           _Hash, _Allocator) -> unordered_map< __iter_key_t< _InputIterator
           >, __iter_val_t< _InputIterator >, _Hash, equal_to< __iter_key_t<
           _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Hash  =
           hash<__iter_key_t<_InputIterator>>, typename _Pred  =
           equal_to<__iter_key_t<_InputIterator>>, typename _Allocator  =
           allocator<__iter_to_alloc_t<_InputIterator>>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_map (_InputIterator,
           _InputIterator, typename unordered_map< int, int >::size_type={},
           _Hash=_Hash(), _Pred=_Pred(), _Allocator=_Allocator()) ->
           unordered_map< __iter_key_t< _InputIterator >, __iter_val_t<
           _InputIterator >, _Hash, _Pred, _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> unordered_map (initializer_list<
           pair< _Key, _Tp > >, _Allocator) -> unordered_map< _Key, _Tp, hash<
           _Key >, equal_to< _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> unordered_map (initializer_list<
           pair< _Key, _Tp > >, typename unordered_map< int, int >::size_type,
           _Allocator) -> unordered_map< _Key, _Tp, hash< _Key >, equal_to<
           _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Hash , typename
           _Allocator , typename  = _RequireNotAllocatorOrIntegral<_Hash>,
           typename  = _RequireAllocator<_Allocator>> unordered_map
           (initializer_list< pair< _Key, _Tp > >, typename unordered_map<
           int, int >::size_type, _Hash, _Allocator) -> unordered_map< _Key,
           _Tp, _Hash, equal_to< _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Hash  = hash<_Key>,
           typename _Pred  = equal_to<_Key>, typename _Allocator  =
           allocator<pair<const _Key, _Tp>>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_map (initializer_list<
           pair< _Key, _Tp > >, typename unordered_map< int, int
           >::size_type={}, _Hash=_Hash(), _Pred=_Pred(),
           _Allocator=_Allocator()) -> unordered_map< _Key, _Tp, _Hash, _Pred,
           _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_multimap (_InputIterator,
           _InputIterator, _Allocator) -> unordered_multimap< __iter_key_t<
           _InputIterator >, __iter_val_t< _InputIterator >, hash<
           __iter_key_t< _InputIterator > >, equal_to< __iter_key_t<
           _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_multimap (_InputIterator,
           _InputIterator, unordered_multimap< int, int >::size_type,
           _Allocator) -> unordered_multimap< __iter_key_t< _InputIterator >,
           __iter_val_t< _InputIterator >, hash< __iter_key_t< _InputIterator
           > >, equal_to< __iter_key_t< _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Hash , typename _Allocator
           , typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_multimap (_InputIterator,
           _InputIterator, unordered_multimap< int, int >::size_type, _Hash,
           _Allocator) -> unordered_multimap< __iter_key_t< _InputIterator >,
           __iter_val_t< _InputIterator >, _Hash, equal_to< __iter_key_t<
           _InputIterator > >, _Allocator >
       template<typename _InputIterator , typename _Hash  =
           hash<__iter_key_t<_InputIterator>>, typename _Pred  =
           equal_to<__iter_key_t<_InputIterator>>, typename _Allocator  =
           allocator<__iter_to_alloc_t<_InputIterator>>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_multimap (_InputIterator,
           _InputIterator, unordered_multimap< int, int >::size_type={},
           _Hash=_Hash(), _Pred=_Pred(), _Allocator=_Allocator()) ->
           unordered_multimap< __iter_key_t< _InputIterator >, __iter_val_t<
           _InputIterator >, _Hash, _Pred, _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> unordered_multimap
           (initializer_list< pair< _Key, _Tp > >, _Allocator) ->
           unordered_multimap< _Key, _Tp, hash< _Key >, equal_to< _Key >,
           _Allocator >
       template<typename _Key , typename _Tp , typename _Allocator , typename
           = _RequireAllocator<_Allocator>> unordered_multimap
           (initializer_list< pair< _Key, _Tp > >, unordered_multimap< int,
           int >::size_type, _Allocator) -> unordered_multimap< _Key, _Tp,
           hash< _Key >, equal_to< _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Hash , typename
           _Allocator , typename  = _RequireNotAllocatorOrIntegral<_Hash>,
           typename  = _RequireAllocator<_Allocator>> unordered_multimap
           (initializer_list< pair< _Key, _Tp > >, unordered_multimap< int,
           int >::size_type, _Hash, _Allocator) -> unordered_multimap< _Key,
           _Tp, _Hash, equal_to< _Key >, _Allocator >
       template<typename _Key , typename _Tp , typename _Hash  = hash<_Key>,
           typename _Pred  = equal_to<_Key>, typename _Allocator  =
           allocator<pair<const _Key, _Tp>>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_multimap
           (initializer_list< pair< _Key, _Tp > >, unordered_multimap< int,
           int >::size_type={}, _Hash=_Hash(), _Pred=_Pred(),
           _Allocator=_Allocator()) -> unordered_multimap< _Key, _Tp, _Hash,
           _Pred, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_multiset (_InputIterator,
           _InputIterator, unordered_multiset< int >::size_type, _Allocator)
           -> unordered_multiset< typename iterator_traits< _InputIterator
           >::value_type, hash< typename iterator_traits< _InputIterator
           >::value_type >, equal_to< typename iterator_traits< _InputIterator
           >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Hash , typename _Allocator
           , typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_multiset (_InputIterator,
           _InputIterator, unordered_multiset< int >::size_type, _Hash,
           _Allocator) -> unordered_multiset< typename iterator_traits<
           _InputIterator >::value_type, _Hash, equal_to< typename
           iterator_traits< _InputIterator >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Hash  = hash<typename
           iterator_traits<_InputIterator>::value_type>, typename _Pred  =
           equal_to<typename iterator_traits<_InputIterator>::value_type>,
           typename _Allocator  = allocator<typename
           iterator_traits<_InputIterator>::value_type>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_multiset (_InputIterator,
           _InputIterator, unordered_multiset< int >::size_type={},
           _Hash=_Hash(), _Pred=_Pred(), _Allocator=_Allocator()) ->
           unordered_multiset< typename iterator_traits< _InputIterator
           >::value_type, _Hash, _Pred, _Allocator >
       template<typename _Tp , typename _Allocator , typename  =
           _RequireAllocator<_Allocator>> unordered_multiset
           (initializer_list< _Tp >, unordered_multiset< int >::size_type,
           _Allocator) -> unordered_multiset< _Tp, hash< _Tp >, equal_to< _Tp
           >, _Allocator >
       template<typename _Tp , typename _Hash , typename _Allocator , typename
           = _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_multiset
           (initializer_list< _Tp >, unordered_multiset< int >::size_type,
           _Hash, _Allocator) -> unordered_multiset< _Tp, _Hash, equal_to< _Tp
           >, _Allocator >
       template<typename _Tp , typename _Hash  = hash<_Tp>, typename _Pred  =
           equal_to<_Tp>, typename _Allocator  = allocator<_Tp>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_multiset
           (initializer_list< _Tp >, unordered_multiset< int >::size_type={},
           _Hash=_Hash(), _Pred=_Pred(), _Allocator=_Allocator()) ->
           unordered_multiset< _Tp, _Hash, _Pred, _Allocator >
       template<typename _InputIterator , typename _Allocator , typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireAllocator<_Allocator>> unordered_set (_InputIterator,
           _InputIterator, unordered_set< int >::size_type, _Allocator) ->
           unordered_set< typename iterator_traits< _InputIterator
           >::value_type, hash< typename iterator_traits< _InputIterator
           >::value_type >, equal_to< typename iterator_traits< _InputIterator
           >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Hash , typename _Allocator
           , typename  = _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_set (_InputIterator,
           _InputIterator, unordered_set< int >::size_type, _Hash, _Allocator)
           -> unordered_set< typename iterator_traits< _InputIterator
           >::value_type, _Hash, equal_to< typename iterator_traits<
           _InputIterator >::value_type >, _Allocator >
       template<typename _InputIterator , typename _Hash  = hash<typename
           iterator_traits<_InputIterator>::value_type>, typename _Pred  =
           equal_to<typename iterator_traits<_InputIterator>::value_type>,
           typename _Allocator  = allocator<typename
           iterator_traits<_InputIterator>::value_type>, typename  =
           _RequireInputIter<_InputIterator>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_set (_InputIterator,
           _InputIterator, unordered_set< int >::size_type={}, _Hash=_Hash(),
           _Pred=_Pred(), _Allocator=_Allocator()) -> unordered_set< typename
           iterator_traits< _InputIterator >::value_type, _Hash, _Pred,
           _Allocator >
       template<typename _Tp , typename _Allocator , typename  =
           _RequireAllocator<_Allocator>> unordered_set (initializer_list< _Tp
           >, unordered_set< int >::size_type, _Allocator) -> unordered_set<
           _Tp, hash< _Tp >, equal_to< _Tp >, _Allocator >
       template<typename _Tp , typename _Hash , typename _Allocator , typename
           = _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireAllocator<_Allocator>> unordered_set (initializer_list< _Tp
           >, unordered_set< int >::size_type, _Hash, _Allocator) ->
           unordered_set< _Tp, _Hash, equal_to< _Tp >, _Allocator >
       template<typename _Tp , typename _Hash  = hash<_Tp>, typename _Pred  =
           equal_to<_Tp>, typename _Allocator  = allocator<_Tp>, typename  =
           _RequireNotAllocatorOrIntegral<_Hash>, typename  =
           _RequireNotAllocator<_Pred>, typename  =
           _RequireAllocator<_Allocator>> unordered_set (initializer_list< _Tp
           >, unordered_set< int >::size_type={}, _Hash=_Hash(),
           _Pred=_Pred(), _Allocator=_Allocator()) -> unordered_set< _Tp,
           _Hash, _Pred, _Allocator >
       template<typename _InputIterator , typename _ValT  = typename
           iterator_traits<_InputIterator>::value_type, typename _Allocator  =
           allocator<_ValT>, typename  = _RequireInputIter<_InputIterator>,
           typename  = _RequireAllocator<_Allocator>> vector (_InputIterator,
           _InputIterator, _Allocator=_Allocator()) -> vector< _ValT,
           _Allocator >
       template<typename _Tp , typename _Allocator  = allocator<_Tp>, typename
           = _RequireAllocator<_Allocator>> vector (size_t, _Tp,
           _Allocator=_Allocator()) -> vector< _Tp, _Allocator >

Detailed Description
       GNU debug code, replaces standard behavior with debug behavior.

       Macros and namespaces used by the implementation outside of debug
       wrappers to verify certain properties. The __glibcxx_requires_xxx
       macros are merely wrappers around the __glibcxx_check_xxx wrappers when
       we are compiling with debug mode, but disappear when we are in release
       mode so that there is no checking performed in, e.g., the standard
       library algorithms.

Function Documentation
   template<typename _Tp , typename _Alloc > bool std::__debug::operator!=
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 684 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator!=
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly) [inline]
       Definition at line 884 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator!=
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 937 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator!= (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 762 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator!= (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 644 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator!= (const multiset< _Key, _Compare, _Allocator >
       & __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 614 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator!= (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 624 of file set.h.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator!=
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 762 of file debug/vector.

   template<size_t _Nb> bitset< _Nb > std::__debug::operator& (const bitset<
       _Nb > & __x, const bitset< _Nb > & __y) [noexcept]
       Definition at line 388 of file debug/bitset.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 689 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly) [inline]
       Definition at line 877 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 942 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator< (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 768 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator< (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 650 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator< (const multiset< _Key, _Compare, _Allocator > &
       __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 619 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator< (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 629 of file set.h.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 767 of file debug/vector.

   template<typename _CharT , typename _Traits , size_t _Nb>
       std::basic_ostream< _CharT, _Traits > & std::__debug::operator<<
       (std::basic_ostream< _CharT, _Traits > & __os, const bitset< _Nb > &
       __x)
       Definition at line 403 of file debug/bitset.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<=
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 695 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<=
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly) [inline]
       Based on operator<.

       Definition at line 904 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<=
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 948 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator<= (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 775 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator<= (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 657 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator<= (const multiset< _Key, _Compare, _Allocator >
       & __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 625 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator<= (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 635 of file set.h.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator<=
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 773 of file debug/vector.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator==
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 672 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator==
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly)
       Definition at line 865 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator==
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 925 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator== (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 748 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator== (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 630 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator== (const multiset< _Key, _Compare, _Allocator >
       & __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 601 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator== (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 611 of file set.h.

   template<typename _Key , typename _Tp , typename _Hash , typename _Pred ,
       typename _Alloc > bool std::__debug::operator== (const unordered_map<
       _Key, _Tp, _Hash, _Pred, _Alloc > & __x, const unordered_map< _Key,
       _Tp, _Hash, _Pred, _Alloc > & __y) [inline]
       Definition at line 855 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash , typename _Pred ,
       typename _Alloc > bool std::__debug::operator== (const
       unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > & __x, const
       unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > & __y) [inline]
       Definition at line 1572 of file debug/unordered_map.

   template<typename _Value , typename _Hash , typename _Pred , typename
       _Alloc > bool std::__debug::operator== (const unordered_multiset<
       _Value, _Hash, _Pred, _Alloc > & __x, const unordered_multiset< _Value,
       _Hash, _Pred, _Alloc > & __y) [inline]
       Definition at line 1400 of file debug/unordered_set.

   template<typename _Value , typename _Hash , typename _Pred , typename
       _Alloc > bool std::__debug::operator== (const unordered_set< _Value,
       _Hash, _Pred, _Alloc > & __x, const unordered_set< _Value, _Hash,
       _Pred, _Alloc > & __y) [inline]
       Definition at line 723 of file debug/unordered_set.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator==
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 750 of file debug/vector.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 708 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly) [inline]
       Based on operator<.

       Definition at line 891 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 961 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator> (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 790 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator> (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 672 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator> (const multiset< _Key, _Compare, _Allocator > &
       __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 638 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator> (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 648 of file set.h.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 786 of file debug/vector.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>=
       (const deque< _Tp, _Alloc > & __lhs, const deque< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 702 of file debug/deque.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>=
       (const forward_list< _Tp, _Alloc > & __lx, const forward_list< _Tp,
       _Alloc > & __ly) [inline]
       Based on operator<.

       Definition at line 898 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>=
       (const list< _Tp, _Alloc > & __lhs, const list< _Tp, _Alloc > & __rhs)
       [inline]
       Definition at line 955 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator>= (const map< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const map< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 783 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > bool std::__debug::operator>= (const multimap< _Key, _Tp,
       _Compare, _Allocator > & __lhs, const multimap< _Key, _Tp, _Compare,
       _Allocator > & __rhs) [inline]
       Definition at line 665 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator>= (const multiset< _Key, _Compare, _Allocator >
       & __lhs, const multiset< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 632 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > bool
       std::__debug::operator>= (const set< _Key, _Compare, _Allocator > &
       __lhs, const set< _Key, _Compare, _Allocator > & __rhs) [inline]
       Definition at line 642 of file set.h.

   template<typename _Tp , typename _Alloc > bool std::__debug::operator>=
       (const vector< _Tp, _Alloc > & __lhs, const vector< _Tp, _Alloc > &
       __rhs) [inline]
       Definition at line 780 of file debug/vector.

   template<typename _CharT , typename _Traits , size_t _Nb>
       std::basic_istream< _CharT, _Traits > & std::__debug::operator>>
       (std::basic_istream< _CharT, _Traits > & __is, bitset< _Nb > & __x)
       Definition at line 403 of file debug/bitset.

   template<size_t _Nb> bitset< _Nb > std::__debug::operator^ (const bitset<
       _Nb > & __x, const bitset< _Nb > & __y) [noexcept]
       Definition at line 398 of file debug/bitset.

   template<size_t _Nb> bitset< _Nb > std::__debug::operator| (const bitset<
       _Nb > & __x, const bitset< _Nb > & __y) [noexcept]
       Definition at line 393 of file debug/bitset.

   template<typename _Tp , typename _Alloc > void std::__debug::swap (deque<
       _Tp, _Alloc > & __lhs, deque< _Tp, _Alloc > & __rhs) [inline],
       [noexcept]
       Definition at line 715 of file debug/deque.

   template<typename _Tp , typename _Alloc > void std::__debug::swap
       (forward_list< _Tp, _Alloc > & __lx, forward_list< _Tp, _Alloc > &
       __ly) [inline],  [noexcept]
       See std::forward_list::swap().

       Definition at line 913 of file debug/forward_list.

   template<typename _Tp , typename _Alloc > void std::__debug::swap (list<
       _Tp, _Alloc > & __lhs, list< _Tp, _Alloc > & __rhs) [inline],
       [noexcept]
       Definition at line 968 of file debug/list.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > void std::__debug::swap (map< _Key, _Tp, _Compare,
       _Allocator > & __lhs, map< _Key, _Tp, _Compare, _Allocator > & __rhs)
       [inline],  [noexcept]
       Definition at line 798 of file map.h.

   template<typename _Key , typename _Tp , typename _Compare , typename
       _Allocator > void std::__debug::swap (multimap< _Key, _Tp, _Compare,
       _Allocator > & __lhs, multimap< _Key, _Tp, _Compare, _Allocator > &
       __rhs) [inline],  [noexcept]
       Definition at line 680 of file multimap.h.

   template<typename _Key , typename _Compare , typename _Allocator > void
       std::__debug::swap (multiset< _Key, _Compare, _Allocator > & __x,
       multiset< _Key, _Compare, _Allocator > & __y) [noexcept]
       Definition at line 645 of file multiset.h.

   template<typename _Key , typename _Compare , typename _Allocator > void
       std::__debug::swap (set< _Key, _Compare, _Allocator > & __x, set< _Key,
       _Compare, _Allocator > & __y) [noexcept]
       Definition at line 655 of file set.h.

   template<typename _Key , typename _Tp , typename _Hash , typename _Pred ,
       typename _Alloc > void std::__debug::swap (unordered_map< _Key, _Tp,
       _Hash, _Pred, _Alloc > & __x, unordered_map< _Key, _Tp, _Hash, _Pred,
       _Alloc > & __y) [inline],  [noexcept]
       Definition at line 847 of file debug/unordered_map.

   template<typename _Key , typename _Tp , typename _Hash , typename _Pred ,
       typename _Alloc > void std::__debug::swap (unordered_multimap< _Key,
       _Tp, _Hash, _Pred, _Alloc > & __x, unordered_multimap< _Key, _Tp,
       _Hash, _Pred, _Alloc > & __y) [inline],  [noexcept]
       Definition at line 1564 of file debug/unordered_map.

   template<typename _Value , typename _Hash , typename _Pred , typename
       _Alloc > void std::__debug::swap (unordered_multiset< _Value, _Hash,
       _Pred, _Alloc > & __x, unordered_multiset< _Value, _Hash, _Pred, _Alloc
       > & __y) [inline],  [noexcept]
       Definition at line 1393 of file debug/unordered_set.

   template<typename _Value , typename _Hash , typename _Pred , typename
       _Alloc > void std::__debug::swap (unordered_set< _Value, _Hash, _Pred,
       _Alloc > & __x, unordered_set< _Value, _Hash, _Pred, _Alloc > & __y)
       [inline],  [noexcept]
       Definition at line 716 of file debug/unordered_set.

   template<typename _Tp , typename _Alloc > void std::__debug::swap (vector<
       _Tp, _Alloc > & __lhs, vector< _Tp, _Alloc > & __rhs) [inline],
       [noexcept]
       Definition at line 793 of file debug/vector.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023                 std::__debug(3)
