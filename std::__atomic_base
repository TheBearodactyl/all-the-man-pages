std::__atomic_base< _ITp >(Library Functions Manustd::__atomic_base< _ITp >(3)

NAME
       std::__atomic_base< _ITp > - Base class for atomic integrals.

SYNOPSIS
       #include <atomic>

   Public Types
       using difference_type = value_type
       using value_type = _ITp

   Public Member Functions
       constexpr __atomic_base (__int_type __i) noexcept
       __atomic_base (const __atomic_base &)=delete
       bool compare_exchange_strong (__int_type &__i1, __int_type __i2,
           memory_order __m1, memory_order __m2) noexcept
       bool compare_exchange_strong (__int_type &__i1, __int_type __i2,
           memory_order __m1, memory_order __m2) volatile noexcept
       bool compare_exchange_strong (__int_type &__i1, __int_type __i2,
           memory_order __m=memory_order_seq_cst) noexcept
       bool compare_exchange_strong (__int_type &__i1, __int_type __i2,
           memory_order __m=memory_order_seq_cst) volatile noexcept
       bool compare_exchange_weak (__int_type &__i1, __int_type __i2,
           memory_order __m1, memory_order __m2) noexcept
       bool compare_exchange_weak (__int_type &__i1, __int_type __i2,
           memory_order __m1, memory_order __m2) volatile noexcept
       bool compare_exchange_weak (__int_type &__i1, __int_type __i2,
           memory_order __m=memory_order_seq_cst) noexcept
       bool compare_exchange_weak (__int_type &__i1, __int_type __i2,
           memory_order __m=memory_order_seq_cst) volatile noexcept
       __int_type exchange (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type exchange (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       __int_type fetch_add (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type fetch_add (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       __int_type fetch_and (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type fetch_and (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       __int_type fetch_or (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type fetch_or (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       __int_type fetch_sub (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type fetch_sub (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       __int_type fetch_xor (__int_type __i, memory_order
           __m=memory_order_seq_cst) noexcept
       __int_type fetch_xor (__int_type __i, memory_order
           __m=memory_order_seq_cst) volatile noexcept
       bool is_lock_free () const noexcept
       bool is_lock_free () const volatile noexcept
       __int_type load (memory_order __m=memory_order_seq_cst) const noexcept
       __int_type load (memory_order __m=memory_order_seq_cst) const volatile
           noexcept
       void notify_all () noexcept
       void notify_one () noexcept
       operator __int_type () const noexcept
       operator __int_type () const volatile noexcept
       __int_type operator&= (__int_type __i) noexcept
       __int_type operator&= (__int_type __i) volatile noexcept
       __int_type operator++ () noexcept
       __int_type operator++ () volatile noexcept
       __int_type operator++ (int) noexcept
       __int_type operator++ (int) volatile noexcept
       __int_type operator+= (__int_type __i) noexcept
       __int_type operator+= (__int_type __i) volatile noexcept
       __int_type operator-- () noexcept
       __int_type operator-- () volatile noexcept
       __int_type operator-- (int) noexcept
       __int_type operator-- (int) volatile noexcept
       __int_type operator-= (__int_type __i) noexcept
       __int_type operator-= (__int_type __i) volatile noexcept
       __int_type operator= (__int_type __i) noexcept
       __int_type operator= (__int_type __i) volatile noexcept
       __atomic_base & operator= (const __atomic_base &) volatile=delete
       __atomic_base & operator= (const __atomic_base &)=delete
       __int_type operator^= (__int_type __i) noexcept
       __int_type operator^= (__int_type __i) volatile noexcept
       __int_type operator|= (__int_type __i) noexcept
       __int_type operator|= (__int_type __i) volatile noexcept
       void store (__int_type __i, memory_order __m=memory_order_seq_cst)
           noexcept
       void store (__int_type __i, memory_order __m=memory_order_seq_cst)
           volatile noexcept
       void wait (__int_type __old, memory_order __m=memory_order_seq_cst)
           const noexcept

Detailed Description
   template<typename _ITp>
       struct std::__atomic_base< _ITp >"Base class for atomic integrals.

       Definition at line 324 of file atomic.

Member Typedef Documentation
   template<typename _ITp > using std::__atomic_base< _ITp >::difference_type
       =  value_type
       Definition at line 327 of file atomic.

   template<typename _ITp > using std::__atomic_base< _ITp >::value_type =
       _ITp
       Definition at line 326 of file atomic.

Constructor & Destructor Documentation
   template<typename _ITp > constexpr std::__atomic_base< _ITp
       >::__atomic_base (__int_type __i) [inline],  [constexpr],  [noexcept]
       Definition at line 345 of file atomic.

Member Function Documentation
   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_strong (__int_type & __i1, __int_type __i2,
       memory_order __m1, memory_order __m2) [inline],  [noexcept]
       Definition at line 555 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_strong (__int_type & __i1, __int_type __i2,
       memory_order __m1, memory_order __m2) volatile [inline],  [noexcept]
       Definition at line 565 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_strong (__int_type & __i1, __int_type __i2,
       memory_order __m = memory_order_seq_cst) [inline],  [noexcept]
       Definition at line 576 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_strong (__int_type & __i1, __int_type __i2,
       memory_order __m = memory_order_seq_cst) volatile [inline],  [noexcept]
       Definition at line 584 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_weak (__int_type & __i1, __int_type __i2,
       memory_order __m1, memory_order __m2) [inline],  [noexcept]
       Definition at line 518 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_weak (__int_type & __i1, __int_type __i2,
       memory_order __m1, memory_order __m2) volatile [inline],  [noexcept]
       Definition at line 528 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_weak (__int_type & __i1, __int_type __i2,
       memory_order __m = memory_order_seq_cst) [inline],  [noexcept]
       Definition at line 539 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp
       >::compare_exchange_weak (__int_type & __i1, __int_type __i2,
       memory_order __m = memory_order_seq_cst) volatile [inline],  [noexcept]
       Definition at line 547 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::exchange
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 503 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::exchange
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 511 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_add
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 616 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_add
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 621 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_and
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 636 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_and
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 641 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_or
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 646 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_or
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 651 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_sub
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 626 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_sub
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 631 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_xor
       (__int_type __i, memory_order __m = memory_order_seq_cst) [inline],
       [noexcept]
       Definition at line 656 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::fetch_xor
       (__int_type __i, memory_order __m = memory_order_seq_cst) volatile
       [inline],  [noexcept]
       Definition at line 661 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp >::is_lock_free ()
       const [inline],  [noexcept]
       Definition at line 440 of file atomic.

   template<typename _ITp > bool std::__atomic_base< _ITp >::is_lock_free ()
       const volatile [inline],  [noexcept]
       Definition at line 448 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::load
       (memory_order __m = memory_order_seq_cst) const [inline],  [noexcept]
       Definition at line 481 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::load
       (memory_order __m = memory_order_seq_cst) const volatile [inline],
       [noexcept]
       Definition at line 492 of file atomic.

   template<typename _ITp > void std::__atomic_base< _ITp >::notify_all ()
       [inline],  [noexcept]
       Definition at line 609 of file atomic.

   template<typename _ITp > void std::__atomic_base< _ITp >::notify_one ()
       [inline],  [noexcept]
       Definition at line 603 of file atomic.

   template<typename _ITp > std::__atomic_base< _ITp >::operator __int_type ()
       const [inline],  [noexcept]
       Definition at line 347 of file atomic.

   template<typename _ITp > std::__atomic_base< _ITp >::operator __int_type ()
       const volatile [inline],  [noexcept]
       Definition at line 350 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator&=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 416 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator&=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 420 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator++
       () [inline],  [noexcept]
       Definition at line 384 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator++
       () volatile [inline],  [noexcept]
       Definition at line 388 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator++
       (int) [inline],  [noexcept]
       Definition at line 368 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator++
       (int) volatile [inline],  [noexcept]
       Definition at line 372 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator+=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 400 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator+=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 404 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator--
       () [inline],  [noexcept]
       Definition at line 392 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator--
       () volatile [inline],  [noexcept]
       Definition at line 396 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator--
       (int) [inline],  [noexcept]
       Definition at line 376 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator--
       (int) volatile [inline],  [noexcept]
       Definition at line 380 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator-=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 408 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator-=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 412 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 354 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 361 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator^=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 432 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator^=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 436 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator|=
       (__int_type __i) [inline],  [noexcept]
       Definition at line 424 of file atomic.

   template<typename _ITp > __int_type std::__atomic_base< _ITp >::operator|=
       (__int_type __i) volatile [inline],  [noexcept]
       Definition at line 428 of file atomic.

   template<typename _ITp > void std::__atomic_base< _ITp >::store (__int_type
       __i, memory_order __m = memory_order_seq_cst) [inline],  [noexcept]
       Definition at line 456 of file atomic.

   template<typename _ITp > void std::__atomic_base< _ITp >::store (__int_type
       __i, memory_order __m = memory_order_seq_cst) volatile [inline],
       [noexcept]
       Definition at line 468 of file atomic.

   template<typename _ITp > void std::__atomic_base< _ITp >::wait (__int_type
       __old, memory_order __m = memory_order_seq_cst) const [inline],
       [noexcept]
       Definition at line 593 of file atomic.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023   std::__atomic_base< _ITp >(3)
