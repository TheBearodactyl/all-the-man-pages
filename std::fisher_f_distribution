std::fisher_f_distribution<LibraryyFstd::fisher_f_distribution< _RealType >(3)

NAME
       std::fisher_f_distribution< _RealType > - A fisher_f_distribution
       random number distribution.

SYNOPSIS
       #include <random>

   Classes
       struct param_type

   Public Types
       typedef _RealType result_type

   Public Member Functions
       fisher_f_distribution (_RealType __m, _RealType __n=_RealType(1))
       fisher_f_distribution (const param_type &__p)
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng)
       template<typename _ForwardIterator , typename
           _UniformRandomNumberGenerator > void __generate (_ForwardIterator
           __f, _ForwardIterator __t, _UniformRandomNumberGenerator &__urng,
           const param_type &__p)
       template<typename _UniformRandomNumberGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomNumberGenerator
           &__urng)
       template<typename _UniformRandomNumberGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomNumberGenerator
           &__urng, const param_type &__p)
       _RealType m () const
       result_type max () const
           Returns the least upper bound value of the distribution.
       result_type min () const
           Returns the greatest lower bound value of the distribution.
       _RealType n () const
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng)
           Generating functions.
       template<typename _UniformRandomNumberGenerator > result_type
           operator() (_UniformRandomNumberGenerator &__urng, const param_type
           &__p)
       param_type param () const
           Returns the parameter set of the distribution.
       void param (const param_type &__param)
           Sets the parameter set of the distribution.
       void reset ()
           Resets the distribution state.

   Friends
       template<typename _RealType1 , typename _CharT , typename _Traits >
           std::basic_ostream< _CharT, _Traits > & operator<<
           (std::basic_ostream< _CharT, _Traits > &__os, const
           std::fisher_f_distribution< _RealType1 > &__x)
           Inserts a fisher_f_distribution random number distribution __x into
           the output stream __os.
       bool operator== (const fisher_f_distribution &__d1, const
           fisher_f_distribution &__d2)
           Return true if two Fisher f distributions have the same parameters
           and the sequences that would be generated are equal.
       template<typename _RealType1 , typename _CharT , typename _Traits >
           std::basic_istream< _CharT, _Traits > & operator>>
           (std::basic_istream< _CharT, _Traits > &__is,
           std::fisher_f_distribution< _RealType1 > &__x)
           Extracts a fisher_f_distribution random number distribution __x
           from the input stream __is.

Detailed Description
   template<typename _RealType = double>
       class std::fisher_f_distribution< _RealType >"A fisher_f_distribution
       random number distribution.

       The formula for the normal probability mass function is
           p(x|m,n) = ac{Gamma((m+n)/2)}{Gamma(m/2)Gamma(n/2)}
                      (ac{m}{n})^{m/2} x^{(m/2)-1}
                      (1 + ac{mx}{n})^{-(m+n)/2} ]

       Definition at line 3067 of file random.

Member Typedef Documentation
   template<typename _RealType  = double> typedef _RealType
       std::fisher_f_distribution< _RealType >::result_type
       The type of the range of the distribution.

       Definition at line 3074 of file random.

Constructor & Destructor Documentation
   template<typename _RealType  = double> std::fisher_f_distribution<
       _RealType >::fisher_f_distribution () [inline]
       Definition at line 3109 of file random.

   template<typename _RealType  = double> std::fisher_f_distribution<
       _RealType >::fisher_f_distribution (_RealType __m, _RealType __n =
       _RealType(1)) [inline],  [explicit]
       Definition at line 3112 of file random.

   template<typename _RealType  = double> std::fisher_f_distribution<
       _RealType >::fisher_f_distribution (const param_type & __p) [inline],
       [explicit]
       Definition at line 3118 of file random.

Member Function Documentation
   template<typename _RealType  = double> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void
       std::fisher_f_distribution< _RealType >::__generate (_ForwardIterator
       __f, _ForwardIterator __t, _UniformRandomNumberGenerator & __urng)
       [inline]
       Definition at line 3194 of file random.

   template<typename _RealType  = double> template<typename _ForwardIterator ,
       typename _UniformRandomNumberGenerator > void
       std::fisher_f_distribution< _RealType >::__generate (_ForwardIterator
       __f, _ForwardIterator __t, _UniformRandomNumberGenerator & __urng,
       const param_type & __p) [inline]
       Definition at line 3201 of file random.

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > void std::fisher_f_distribution<
       _RealType >::__generate (result_type * __f, result_type * __t,
       _UniformRandomNumberGenerator & __urng) [inline]
       Definition at line 3208 of file random.

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > void std::fisher_f_distribution<
       _RealType >::__generate (result_type * __f, result_type * __t,
       _UniformRandomNumberGenerator & __urng, const param_type & __p)
       [inline]
       Definition at line 3214 of file random.

   template<typename _RealType  = double> _RealType
       std::fisher_f_distribution< _RealType >::m () const [inline]
       Definition at line 3136 of file random.

   template<typename _RealType  = double> result_type
       std::fisher_f_distribution< _RealType >::max () const [inline]
       Returns the least upper bound value of the distribution.

       Definition at line 3169 of file random.

       References std::numeric_limits< _Tp >::max().

   template<typename _RealType  = double> result_type
       std::fisher_f_distribution< _RealType >::min () const [inline]
       Returns the greatest lower bound value of the distribution.

       Definition at line 3162 of file random.

   template<typename _RealType  = double> _RealType
       std::fisher_f_distribution< _RealType >::n () const [inline]
       Definition at line 3140 of file random.

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > result_type std::fisher_f_distribution<
       _RealType >::operator() (_UniformRandomNumberGenerator & __urng)
       [inline]
       Generating functions.

       Definition at line 3177 of file random.

   template<typename _RealType  = double> template<typename
       _UniformRandomNumberGenerator > result_type std::fisher_f_distribution<
       _RealType >::operator() (_UniformRandomNumberGenerator & __urng, const
       param_type & __p) [inline]
       Definition at line 3182 of file random.

   template<typename _RealType  = double> param_type
       std::fisher_f_distribution< _RealType >::param () const [inline]
       Returns the parameter set of the distribution.

       Definition at line 3147 of file random.

   template<typename _RealType  = double> void std::fisher_f_distribution<
       _RealType >::param (const param_type & __param) [inline]
       Sets the parameter set of the distribution.

       Parameters
           __param The new parameter set of the distribution.

       Definition at line 3155 of file random.

   template<typename _RealType  = double> void std::fisher_f_distribution<
       _RealType >::reset () [inline]
       Resets the distribution state.

       Definition at line 3126 of file random.

       References std::gamma_distribution< _RealType >::reset().

Friends And Related Function Documentation
   template<typename _RealType  = double> template<typename _RealType1 ,
       typename _CharT , typename _Traits > std::basic_ostream< _CharT,
       _Traits > & operator<< (std::basic_ostream< _CharT, _Traits > & __os,
       const std::fisher_f_distribution< _RealType1 > & __x) [friend]
       Inserts a fisher_f_distribution random number distribution __x into the
       output stream __os.

       Parameters
           __os An output stream.
           __x A fisher_f_distribution random number distribution.

       Returns
           The output stream with the state of __x inserted or in an error
           state.

   template<typename _RealType  = double> bool operator== (const
       fisher_f_distribution< _RealType > & __d1, const fisher_f_distribution<
       _RealType > & __d2) [friend]
       Return true if two Fisher f distributions have the same parameters and
       the sequences that would be generated are equal.

       Definition at line 3225 of file random.

   template<typename _RealType  = double> template<typename _RealType1 ,
       typename _CharT , typename _Traits > std::basic_istream< _CharT,
       _Traits > & operator>> (std::basic_istream< _CharT, _Traits > & __is,
       std::fisher_f_distribution< _RealType1 > & __x) [friend]
       Extracts a fisher_f_distribution random number distribution __x from
       the input stream __is.

       Parameters
           __is An input stream.
           __x A fisher_f_distribution random number generator engine.

       Returns
           The input stream with __x extracted or in an error state.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed std::fisher_f_distribution< _RealType >(3)
