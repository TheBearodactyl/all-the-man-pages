getprotoent(3)                                                                           Library Functions Manual                                                                           getprotoent(3)

NAME
       getprotoent, getprotobyname, getprotobynumber, setprotoent, endprotoent - get protocol entry

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <netdb.h>

       struct protoent *getprotoent(void);

       struct protoent *getprotobyname(const char *name);
       struct protoent *getprotobynumber(int proto);

       void setprotoent(int stayopen);
       void endprotoent(void);

DESCRIPTION
       The  getprotoent()  function reads the next entry from the protocols database (see protocols(5)) and returns a protoent structure containing the broken-out fields from the entry.  A connection is
       opened to the database if necessary.

       The getprotobyname() function returns a protoent structure for the entry from the database that matches the protocol name name.  A connection is opened to the database if necessary.

       The getprotobynumber() function returns a protoent structure for the entry from the database that matches the protocol number number.  A connection is opened to the database if necessary.

       The setprotoent() function opens a connection to the database, and sets the next entry to the first entry.  If stayopen is nonzero, then the connection to the database will not be closed  between
       calls to one of the getproto*() functions.

       The endprotoent() function closes the connection to the database.

       The protoent structure is defined in <netdb.h> as follows:

           struct protoent {
               char  *p_name;       /* official protocol name */
               char **p_aliases;    /* alias list */
               int    p_proto;      /* protocol number */
           }

       The members of the protoent structure are:

       p_name The official name of the protocol.

       p_aliases
              A NULL-terminated list of alternative names for the protocol.

       p_proto
              The protocol number.

RETURN VALUE
       The getprotoent(), getprotobyname(), and getprotobynumber() functions return a pointer to a statically allocated protoent structure, or a null pointer if an error occurs or the end of the file is
       reached.

FILES
       /etc/protocols
              protocol database file

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────┬───────────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
       │Interface                    │ Attribute     │ Value                                                                                                                                              │
       ├─────────────────────────────┼───────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │getprotoent()                │ Thread safety │ MT-Unsafe race:protoent race:protoentbuf locale                                                                                                    │
       ├─────────────────────────────┼───────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │getprotobyname()             │ Thread safety │ MT-Unsafe race:protobyname locale                                                                                                                  │
       ├─────────────────────────────┼───────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │getprotobynumber()           │ Thread safety │ MT-Unsafe race:protobynumber locale                                                                                                                │
       ├─────────────────────────────┼───────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │setprotoent(), endprotoent() │ Thread safety │ MT-Unsafe race:protoent locale                                                                                                                     │
       └─────────────────────────────┴───────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
       In the above table, protoent in race:protoent signifies that if any of the functions setprotoent(), getprotoent(), or endprotoent() are used in parallel in different threads of  a  program,  then
       data races could occur.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, 4.3BSD.

SEE ALSO
       getnetent(3), getprotoent_r(3), getservent(3), protocols(5)

Linux man-pages 6.04                                                                            2023-03-30                                                                                  getprotoent(3)
ENDPROTOENT(3P)                                                                          POSIX Programmer's Manual                                                                         ENDPROTOENT(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       endprotoent, getprotobyname, getprotobynumber, getprotoent, setprotoent — network protocol database functions

SYNOPSIS
       #include <netdb.h>

       void endprotoent(void);
       struct protoent *getprotobyname(const char *name);
       struct protoent *getprotobynumber(int proto);
       struct protoent *getprotoent(void);
       void setprotoent(int stayopen);

DESCRIPTION
       These functions shall retrieve information about protocols. This information is considered to be stored in a database that can be accessed sequentially or randomly.  The  implementation  of  this
       database is unspecified.

       The  setprotoent()  function shall open a connection to the database, and set the next entry to the first entry. If the stayopen argument is non-zero, the connection to the network protocol data‐
       base shall not be closed after each call to getprotoent() (either directly, or indirectly through one of the other getproto*() functions), and the implementation may maintain  an  open  file  de‐
       scriptor for the database.

       The  getprotobyname() function shall search the database from the beginning and find the first entry for which the protocol name specified by name matches the p_name member, opening and closing a
       connection to the database as necessary.

       The getprotobynumber() function shall search the database from the beginning and find the first entry for which the protocol number specified by proto matches  the  p_proto  member,  opening  and
       closing a connection to the database as necessary.

       The getprotoent() function shall read the next entry of the database, opening and closing a connection to the database as necessary.

       The getprotobyname(), getprotobynumber(), and getprotoent() functions shall each return a pointer to a protoent structure, the members of which shall contain the fields of an entry in the network
       protocol database.

       The endprotoent() function shall close the connection to the database, releasing any open file descriptor.

       These functions need not be thread-safe.

RETURN VALUE
       Upon successful completion, getprotobyname(), getprotobynumber(), and getprotoent() return a pointer to a protoent structure if the requested entry was found, and a null pointer if the end of the
       database was reached or the requested entry was not found.  Otherwise, a null pointer is returned.

       The  application  shall not modify the structure to which the return value points, nor any storage areas pointed to by pointers within the structure. The returned pointer, and pointers within the
       structure, might be invalidated or the structure or the storage areas might be overwritten by a subsequent call to getprotobyname(), getprotobynumber(), or getprotoent().  The  returned  pointer,
       and pointers within the structure, might also be invalidated if the calling thread is terminated.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       The Base Definitions volume of POSIX.1‐2017, <netdb.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                    ENDPROTOENT(3P)
