std::__debug::vector< _Tp, LibrarytFstd::__debug::vector< _Tp, _Allocator >(3)

NAME
       std::__debug::vector< _Tp, _Allocator > - Class std::vector with
       safety/checking/debug instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, vector< _Tp, std::allocator< _Tp >
       >, and __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence >.

   Public Types
       typedef _Allocator allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator, vector >
           const_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef _Base::difference_type difference_type
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, vector > iterator
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef _Base::size_type size_type
       typedef _Tp value_type

   Public Member Functions
       vector (_Base_ref __x)
           Construction from a normal-mode vector.
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> vector (_InputIterator
           __first, _InputIterator __last, const _Allocator &__a=_Allocator())
       vector (const _Allocator &__a) noexcept
       vector (const vector &)=default
       vector (const vector &__x, const __type_identity_t< allocator_type >
           &__a)
       vector (initializer_list< value_type > __l, const allocator_type
           &__a=allocator_type())
       vector (size_type __n, const __type_identity_t< _Tp > &__value, const
           _Allocator &__a=_Allocator())
       vector (size_type __n, const _Allocator &__a=_Allocator())
       vector (vector &&)=default
       vector (vector &&__x, const __type_identity_t< allocator_type > &__a)
           noexcept(std::is_nothrow_constructible< _Base, _Base, const
           allocator_type & >::value)
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       template<typename _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> void assign (_InputIterator
           __first, _InputIterator __last)
       void assign (initializer_list< value_type > __l)
       void assign (size_type __n, const _Tp &__u)
       const_reference back () const noexcept
       reference back () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       size_type capacity () const noexcept
       const_iterator cbegin () const noexcept
       const_iterator cend () const noexcept
       void clear () noexcept
       const_reverse_iterator crbegin () const noexcept
       const_reverse_iterator crend () const noexcept
       template<typename... _Args> iterator emplace (const_iterator
           __position, _Args &&... __args)
       template<typename... _Args> reference emplace_back (_Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __position)
       const_reference front () const noexcept
       reference front () noexcept
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> iterator insert
           (const_iterator __position, _InputIterator __first, _InputIterator
           __last)
       template<typename _Up  = _Tp> __gnu_cxx::__enable_if<!std::__are_same<
           _Up, bool >::__value, iterator >::__type insert (const_iterator
           __position, _Tp &&__x)
       iterator insert (const_iterator __position, const _Tp &__x)
       iterator insert (const_iterator __position, initializer_list<
           value_type > __l)
       iterator insert (const_iterator __position, size_type __n, const _Tp
           &__x)
       vector & operator= (const vector &)=default
       vector & operator= (initializer_list< value_type > __l)
       vector & operator= (vector &&)=default
       const_reference operator[] (size_type __n) const noexcept
       reference operator[] (size_type __n) noexcept
       void pop_back () noexcept
       template<typename _Up  = _Tp> __gnu_cxx::__enable_if<!std::__are_same<
           _Up, bool >::__value, void >::__type push_back (_Tp &&__x)
       void push_back (const _Tp &__x)
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       void reserve (size_type __n)
       void resize (size_type __sz)
       void resize (size_type __sz, const _Tp &__c)
       void shrink_to_fit ()
       void swap (vector &__x) noexcept(/*conditional */)

   Protected Member Functions
       bool _M_requires_reallocation (size_type __elements) const noexcept
       void _M_swap (_Safe_container &__x) noexcept
       void _M_update_guaranteed_capacity () noexcept

   Protected Attributes
       size_type _M_guaranteed_capacity

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator

Detailed Description
   template<typename _Tp, typename _Allocator = std::allocator<_Tp>>
       class std::__debug::vector< _Tp, _Allocator >"Class std::vector with
       safety/checking/debug instrumentation.

       Definition at line 117 of file debug/vector.

Member Typedef Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Allocator std::__debug::vector< _Tp, _Allocator >::allocator_type
       Definition at line 160 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator< _Base_const_iterator, vector>
       std::__debug::vector< _Tp, _Allocator >::const_iterator
       Definition at line 154 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_pointer std::__debug::vector< _Tp, _Allocator
       >::const_pointer
       Definition at line 162 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_reference std::__debug::vector< _Tp, _Allocator
       >::const_reference
       Definition at line 149 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<const_iterator> std::__debug::vector< _Tp,
       _Allocator >::const_reverse_iterator
       Definition at line 164 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::difference_type std::__debug::vector< _Tp, _Allocator
       >::difference_type
       Definition at line 157 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator< _Base_iterator, vector>
       std::__debug::vector< _Tp, _Allocator >::iterator
       Definition at line 152 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::pointer std::__debug::vector< _Tp, _Allocator >::pointer
       Definition at line 161 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::reference std::__debug::vector< _Tp, _Allocator >::reference
       Definition at line 148 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<iterator> std::__debug::vector< _Tp, _Allocator
       >::reverse_iterator
       Definition at line 163 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::size_type std::__debug::vector< _Tp, _Allocator >::size_type
       Definition at line 156 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Tp std::__debug::vector< _Tp, _Allocator >::value_type
       Definition at line 159 of file debug/vector.

Constructor & Destructor Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (const _Allocator &
       __a) [inline],  [explicit],  [noexcept]
       Definition at line 176 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (size_type __n, const
       _Allocator & __a = _Allocator()) [inline],  [explicit]
       Definition at line 181 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (size_type __n, const
       __type_identity_t< _Tp > & __value, const _Allocator & __a =
       _Allocator()) [inline]
       Definition at line 184 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> std::__debug::vector< _Tp,
       _Allocator >::vector (_InputIterator __first, _InputIterator __last,
       const _Allocator & __a = _Allocator()) [inline]
       Definition at line 200 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (const vector< _Tp,
       _Allocator > & __x, const __type_identity_t< allocator_type > & __a)
       [inline]
       Definition at line 215 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (vector< _Tp,
       _Allocator > && __x, const __type_identity_t< allocator_type > & __a)
       [inline],  [noexcept]
       Definition at line 218 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (initializer_list<
       value_type > __l, const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 226 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::vector< _Tp, _Allocator >::vector (_Base_ref __x)
       [inline]
       Construction from a normal-mode vector.

       Definition at line 234 of file debug/vector.

Member Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> const
       _Base & std::__debug::vector< _Tp, _Allocator >::_M_base () const
       [inline],  [noexcept]
       Definition at line 737 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> _Base &
       std::__debug::vector< _Tp, _Allocator >::_M_base () [inline],
       [noexcept]
       Definition at line 734 of file debug/vector.

   template<typename _SafeSequence , typename _BaseSequence > bool
       __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence
       >::_M_requires_reallocation (size_type __elements) const [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 98 of file debug/vector.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _SafeSequence , typename _BaseSequence > void
       __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence
       >::_M_update_guaranteed_capacity () [inline],  [protected],
       [noexcept],  [inherited]
       Definition at line 102 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> void std::__debug::vector< _Tp,
       _Allocator >::assign (_InputIterator __first, _InputIterator __last)
       [inline]
       Definition at line 261 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::assign (initializer_list<
       value_type > __l) [inline]
       Definition at line 286 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::assign (size_type __n, const
       _Tp & __u) [inline]
       Definition at line 277 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::vector< _Tp, _Allocator >::back () const
       [inline],  [noexcept]
       Definition at line 482 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::vector< _Tp, _Allocator >::back () [inline],
       [noexcept]
       Definition at line 474 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::vector< _Tp, _Allocator >::begin () const
       [inline],  [noexcept]
       Definition at line 304 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::begin () [inline],
       [noexcept]
       Definition at line 299 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       size_type std::__debug::vector< _Tp, _Allocator >::capacity () const
       [inline],  [noexcept]
       Definition at line 415 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::vector< _Tp, _Allocator >::cbegin () const
       [inline],  [noexcept]
       Definition at line 340 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::vector< _Tp, _Allocator >::cend () const
       [inline],  [noexcept]
       Definition at line 345 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::clear () [inline],  [noexcept]
       Definition at line 727 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::vector< _Tp, _Allocator >::crbegin
       () const [inline],  [noexcept]
       Definition at line 350 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::vector< _Tp, _Allocator >::crend
       () const [inline],  [noexcept]
       Definition at line 355 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> iterator std::__debug::vector< _Tp,
       _Allocator >::emplace (const_iterator __position, _Args &&... __args)
       [inline]
       Definition at line 540 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> reference std::__debug::vector< _Tp,
       _Allocator >::emplace_back (_Args &&... __args) [inline]
       Definition at line 516 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::vector< _Tp, _Allocator >::end () const
       [inline],  [noexcept]
       Definition at line 314 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::end () [inline],
       [noexcept]
       Definition at line 309 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::erase (const_iterator
       __first, const_iterator __last) [inline]
       Definition at line 692 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::erase (const_iterator
       __position) [inline]
       Definition at line 678 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::vector< _Tp, _Allocator >::front () const
       [inline],  [noexcept]
       Definition at line 466 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::vector< _Tp, _Allocator >::front () [inline],
       [noexcept]
       Definition at line 458 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> iterator std::__debug::vector<
       _Tp, _Allocator >::insert (const_iterator __position, _InputIterator
       __first, _InputIterator __last) [inline]
       Definition at line 622 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _Up  = _Tp> __gnu_cxx::__enable_if<!std::__are_same<
       _Up, bool >::__value, iterator >::__type std::__debug::vector< _Tp,
       _Allocator >::insert (const_iterator __position, _Tp && __x) [inline]
       Definition at line 579 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::insert
       (const_iterator __position, const _Tp & __x) [inline]
       Definition at line 558 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::insert
       (const_iterator __position, initializer_list< value_type > __l)
       [inline]
       Definition at line 583 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::vector< _Tp, _Allocator >::insert
       (const_iterator __position, size_type __n, const _Tp & __x) [inline]
       Definition at line 589 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> vector
       & std::__debug::vector< _Tp, _Allocator >::operator= (initializer_list<
       value_type > __l) [inline]
       Definition at line 245 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::vector< _Tp, _Allocator >::operator[]
       (size_type __n) const [inline],  [noexcept]
       Definition at line 448 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::vector< _Tp, _Allocator >::operator[]
       (size_type __n) [inline],  [noexcept]
       Definition at line 440 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::pop_back () [inline],
       [noexcept]
       Definition at line 530 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _Up  = _Tp> __gnu_cxx::__enable_if<!std::__are_same<
       _Up, bool >::__value, void >::__type std::__debug::vector< _Tp,
       _Allocator >::push_back (_Tp && __x) [inline]
       Definition at line 507 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::push_back (const _Tp & __x)
       [inline]
       Definition at line 494 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::vector< _Tp, _Allocator >::rbegin
       () const [inline],  [noexcept]
       Definition at line 324 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::vector< _Tp, _Allocator >::rbegin ()
       [inline],  [noexcept]
       Definition at line 319 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::vector< _Tp, _Allocator >::rend ()
       const [inline],  [noexcept]
       Definition at line 334 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::vector< _Tp, _Allocator >::rend ()
       [inline],  [noexcept]
       Definition at line 329 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::reserve (size_type __n)
       [inline]
       Definition at line 427 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::resize (size_type __sz)
       [inline]
       Definition at line 365 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::resize (size_type __sz, const
       _Tp & __c) [inline]
       Definition at line 377 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::shrink_to_fit () [inline]
       Definition at line 403 of file debug/vector.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::vector< _Tp, _Allocator >::swap (vector< _Tp, _Allocator
       > & __x) [inline],  [noexcept]
       Definition at line 718 of file debug/vector.

Friends And Related Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _ItT , typename _SeqT , typename _CatT > friend class
       ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 135 of file debug/vector.

Member Data Documentation
   template<typename _SafeSequence , typename _BaseSequence > size_type
       __gnu_debug::_Safe_vector< _SafeSequence, _BaseSequence
       >::_M_guaranteed_capacity [protected],  [inherited]
       Definition at line 95 of file debug/vector.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed std::__debug::vector< _Tp, _Allocator >(3)
