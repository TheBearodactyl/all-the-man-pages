xcb_input_get_selected_extension_events(3)                                                     XCB Requests                                                     xcb_input_get_selected_extension_events(3)

NAME
       xcb_input_get_selected_extension_events -

SYNOPSIS
       #include <xcb/xinput.h>

   Request function
       xcb_input_get_selected_extension_events_cookie_t xcb_input_get_selected_extension_events(xcb_connection_t *conn, xcb_window_t window);

   Reply datastructure
       typedef struct xcb_input_get_selected_extension_events_reply_t {
           uint8_t  response_type;
           uint8_t  xi_reply_type;
           uint16_t sequence;
           uint32_t length;
           uint16_t num_this_classes;
           uint16_t num_all_classes;
           uint8_t  pad0[20];
       } xcb_input_get_selected_extension_events_reply_t;

   Reply function
       xcb_input_get_selected_extension_events_reply_t *xcb_input_get_selected_extension_events_reply(xcb_connection_t *conn, xcb_input_get_selected_extension_events_cookie_t cookie,
              xcb_generic_error_t **e);

   Reply accessors
       xcb_input_event_class_t *xcb_input_get_selected_extension_events_this_classes(const xcb_input_get_selected_extension_events_request_t *reply);

       int xcb_input_get_selected_extension_events_this_classes_length(const xcb_input_get_selected_extension_events_reply_t *reply);

       xcb_generic_iterator_t xcb_input_get_selected_extension_events_this_classes_end(const xcb_input_get_selected_extension_events_reply_t *reply);

       xcb_input_event_class_t *xcb_input_get_selected_extension_events_all_classes(const xcb_input_get_selected_extension_events_request_t *reply);

       int xcb_input_get_selected_extension_events_all_classes_length(const xcb_input_get_selected_extension_events_reply_t *reply);

       xcb_generic_iterator_t xcb_input_get_selected_extension_events_all_classes_end(const xcb_input_get_selected_extension_events_reply_t *reply);

REQUEST ARGUMENTS
       conn      The XCB connection to X11.

       window    TODO: NOT YET DOCUMENTED.

REPLY FIELDS
       response_type
                 The type of this reply, in this case XCB_INPUT_GET_SELECTED_EXTENSION_EVENTS. This field is also present in the xcb_generic_reply_t and can be used to tell replies apart from each oth‚Äê
                 er.

       sequence  The sequence number of the last request processed by the X11 server.

       length    The length of the reply, in words (a word is 4 bytes).

       xi_reply_type
                 TODO: NOT YET DOCUMENTED.

       num_this_classes
                 TODO: NOT YET DOCUMENTED.

       num_all_classes
                 TODO: NOT YET DOCUMENTED.

DESCRIPTION
RETURN VALUE
       Returns an xcb_input_get_selected_extension_events_cookie_t. Errors have to be handled when calling the reply function xcb_input_get_selected_extension_events_reply.

       If you want to handle errors in the event loop instead, use xcb_input_get_selected_extension_events_unchecked. See xcb-requests(3) for details.

ERRORS
       This request does never generate any errors.

SEE ALSO
AUTHOR
       Generated from xinput.xml. Contact xcb@lists.freedesktop.org for corrections and improvements.

X Version 11                                                                                    libxcb 1.15                                                     xcb_input_get_selected_extension_events(3)
