AFMTODIT(1)                                                                               General Commands Manual                                                                              AFMTODIT(1)

NAME
       afmtodit - create font files for use with groff -Tps and -Tpdf

SYNOPSIS
       afmtodit [-ckmnsx] [-a n] [-d desc-file] [-e enc-file] [-f internal-name] [-i n] [-o output-file] afm-file map-file font

       afmtodit -v

DESCRIPTION
       afmtodit creates a font file for use with groff, grops, and gropdf.  afmtodit is written in Perl; you must have Perl version 5.004 or newer installed in order to run afmtodit.

       afm-file is the AFM (Adobe Font Metric) file for the font.

       map-file is a file that says which groff character names map onto each PostScript character name; this file should contain a sequence of lines of the form
              ps-char groff-char
       where  ps-char  is the PostScript name of the character and groff-char is the groff name of the character (as used in the groff font file).  The same ps-char can occur multiple times in the file;
       each groff-char must occur at most once.  Lines starting with ‘#’ and blank lines are ignored.  If the file isn't found in the current directory, it is searched for in the  devps/generate  subdi‐
       rectory of the default font directory.

       If  a  PostScript  character is not mentioned in map-file, and a generic groff glyph name can't be deduced using the Adobe Glyph List (AGL, built into afmtodit), then afmtodit puts the PostScript
       character into the groff font file as an unnamed character which can only be accessed by the ‘\N’ escape sequence in a roff document.  In particular, this is true for glyph variants named in  the
       form  “foo.bar”;  all glyph names containing one or more periods are mapped to unnamed entities.  If option -e is not specified, the encoding defined in the AFM file (i.e., entries with non-nega‐
       tive character codes) is used.  Refer to section “Using Symbols” in Groff: The GNU Implementation of troff, the groff Texinfo manual, which describes how groff glyph names are constructed.

       Characters not encoded in the AFM file (i.e., entries which have ‘-1’ as the character code) are still available in groff; they get glyph index values greater than 255 (or greater than  the  big‐
       gest  character  code used in the AFM file in the unlikely case that it is greater than 255) in the groff font file.  Glyph indices of unencoded characters don't have a specific order; it is best
       to access them with glyph names only.

       The groff font file will be output to a file called font, unless the -o option is used.

       If there is a downloadable font file for the font, it may be listed in the file /usr/share/groff/1.22.4/font/devps/download; see grops(1).

       If the -i option is used, afmtodit will automatically generate an italic correction, a left italic correction and a subscript correction for each character (the significance of  these  parameters
       is explained in groff_font(5)); these parameters may be specified for individual characters by adding to the afm-file lines of the form:
              italicCorrection ps-char n
              leftItalicCorrection ps-char n
              subscriptCorrection ps-char n
       where ps-char is the PostScript name of the character, and n is the desired value of the corresponding parameter in thousandths of an em.  These parameters are normally needed only for italic (or
       oblique) fonts.

OPTIONS
       Whitespace is permitted between a command-line option and its argument.

       -an    Use n as the slant parameter in the font file; this is used by groff in the positioning of accents.  By default afmtodit uses the negative of the ItalicAngle specified  in  the  AFM  file;
              with true italic fonts it is sometimes desirable to use a slant that is less than this.  If you find that characters from an italic font have accents placed too far to the right over them,
              then use the -a option to give the font a smaller slant.

       -c     Include comments in the font file in order to identify the PostScript font.

       -ddesc-file
              The device description file is desc-file rather than the default DESC.  If not found in the current directory, the devps subdirectory of the default font directory  is  searched  (this  is
              true for both the default device description file and a file given with option -d).

       -eenc-file
              The  PostScript font should be reencoded to use the encoding described in enc-file.  The format of enc-file is described in grops(1).  If not found in the current directory, the devps sub‐
              directory of the default font directory is searched.

       -fname The internal name of the groff font is set to name.

       -in    Generate an italic correction for each character so that the character's width plus the character's italic correction is equal to n thousandths of an em plus the amount by which the  right
              edge of the character's bounding box is to the right of the character's origin.  If this would result in a negative italic correction, use a zero italic correction instead.

              Also  generate a subscript correction equal to the product of the tangent of the slant of the font and four fifths of the x-height of the font.  If this would result in a subscript correc‐
              tion greater than the italic correction, use a subscript correction equal to the italic correction instead.

              Also generate a left italic correction for each character equal to n thousandths of an em plus the amount by which the left edge of the character's bounding box is to the left of the char‐
              acter's origin.  The left italic correction may be negative unless option -m is given.

              This option is normally needed only with italic (or oblique) fonts.  The font files distributed with groff were created using an option of -i50 for italic fonts.

       -ooutput-file
              The output file is output-file instead of font.

       -k     Omit any kerning data from the groff font; use only for monospaced (constant-width) fonts.

       -m     Prevent negative left italic correction values.  Roman font files distributed with groff were created with -i0 -m to improve spacing with eqn(1).

       -n     Don't output a ligatures command for this font; use with monospaced (constant-width) fonts.

       -s     The font is special.  The effect of this option is to add the special command to the font file.

       -v     Print version and exit.

       -x     Don't use the built-in Adobe Glyph List.

FILES
       /usr/share/groff/1.22.4/font/devps/DESC
              Device description file.

       /usr/share/groff/1.22.4/font/devps/F
              Font description file for font F.

       /usr/share/groff/1.22.4/font/devps/download
              List of downloadable fonts.

       /usr/share/groff/1.22.4/font/devps/text.enc
              Encoding used for text fonts.

       /usr/share/groff/1.22.4/font/devps/generate/textmap
              Standard mapping.

SEE ALSO
       Groff:  The  GNU  Implementation of troff, by Trent A. Fisher and Werner Lemberg, is the primary groff manual.  Section “Using Symbols” may be of particular note.  You can browse it interactively
       with “info '(groff)Using Symbols'”.

       groff(1), gropdf(1), grops(1), groff_font(5), perl(1)

groff 1.22.4                                                                                   14 March 2023                                                                                   AFMTODIT(1)
