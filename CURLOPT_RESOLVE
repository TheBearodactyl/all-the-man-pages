CURLOPT_RESOLVE(3)                                                                       curl_easy_setopt options                                                                       CURLOPT_RESOLVE(3)

NAME
       CURLOPT_RESOLVE - provide custom host name to IP address resolves

SYNOPSIS
       #include <curl/curl.h>

       CURLcode curl_easy_setopt(CURL *handle, CURLOPT_RESOLVE,
                                 struct curl_slist *hosts);

DESCRIPTION
       Pass a pointer to a linked list of strings with host name resolve information to use for requests with this handle. The linked list should be a fully valid list of struct curl_slist structs prop‚Äê
       erly filled in. Use curl_slist_append(3) to create the list and curl_slist_free_all(3) to clean up an entire list.

       Each resolve rule to add should be written using the format

        [+]HOST:PORT:ADDRESS[,ADDRESS]

       ... where HOST is the name libcurl will try to resolve, PORT is the port number of the service where libcurl wants to connect to the HOST and ADDRESS is one or more numerical IP addresses. If you
       specify multiple IP addresses they need to be separated by comma. If libcurl is built to support IPv6, each of the ADDRESS entries can of course be either IPv4 or IPv6 style addressing.

       This option effectively pre-populates the DNS cache with entries for the host+port pair so redirects and everything that operations against the HOST+PORT will instead use your provided ADDRESS.

       The  optional  leading  "+" specifies that the new entry should time-out. Entries added without the leading plus character will never time-out whereas entries added with "+HOST:..." will time-out
       just like ordinary DNS cache entries.

       If the DNS cache already has an entry for the given host+port pair, the new entry will override the former one.

       An ADDRESS provided by this option will only be used if not restricted by the setting of CURLOPT_IPRESOLVE(3) to a different IP version.

       To remove names from the DNS cache again, to stop providing these fake resolves, include a string in the linked list that uses the format

         -HOST:PORT

       The entry to remove must be prefixed with a dash, and the host name and port number must exactly match what was added previously.

DEFAULT
       NULL

PROTOCOLS
       All

EXAMPLE
       CURL *curl;
       struct curl_slist *host = NULL;
       host = curl_slist_append(NULL, "example.com:443:127.0.0.1");

       curl = curl_easy_init();
       if(curl) {
         curl_easy_setopt(curl, CURLOPT_RESOLVE, host);
         curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

         curl_easy_perform(curl);

         /* always cleanup */
         curl_easy_cleanup(curl);
       }

       curl_slist_free_all(host);

AVAILABILITY
       Added in 7.21.3. Removal support added in 7.42.0.

       Support for providing the ADDRESS within [brackets] was added in 7.57.0.

       Support for providing multiple IP addresses per entry was added in 7.59.0.

       Support for adding non-permanent entries by using the "+" prefix was added in 7.75.0.

RETURN VALUE
       Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.

SEE ALSO
       CURLOPT_IPRESOLVE(3), CURLOPT_DNS_CACHE_TIMEOUT(3), CURLOPT_CONNECT_TO(3),

libcurl 7.37.0                                                                                  19 Jun 2014                                                                             CURLOPT_RESOLVE(3)
