GETPEERNAME(3P)                                                                          POSIX Programmer's Manual                                                                         GETPEERNAME(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       getpeername — get the name of the peer socket

SYNOPSIS
       #include <sys/socket.h>

       int getpeername(int socket, struct sockaddr *restrict address,
           socklen_t *restrict address_len);

DESCRIPTION
       The getpeername() function shall retrieve the peer address of the specified socket, store this address in the sockaddr structure pointed to by the address argument, and store the length  of  this
       address in the object pointed to by the address_len argument.

       The address_len argument points to a socklen_t object which on input specifies the length of the supplied sockaddr structure, and on output specifies the length of the stored address.  If the ac‐
       tual length of the address is greater than the length of the supplied sockaddr structure, the stored address shall be truncated.

       If the protocol permits connections by unbound clients, and the peer is not bound, then the value stored in the object pointed to by address is unspecified.

RETURN VALUE
       Upon successful completion, 0 shall be returned. Otherwise, -1 shall be returned and errno set to indicate the error.

ERRORS
       The getpeername() function shall fail if:

       EBADF  The socket argument is not a valid file descriptor.

       EINVAL The socket has been shut down.

       ENOTCONN
              The socket is not connected or otherwise has not had the peer pre-specified.

       ENOTSOCK
              The socket argument does not refer to a socket.

       EOPNOTSUPP
              The operation is not supported for the socket protocol.

       The getpeername() function may fail if:

       ENOBUFS
              Insufficient resources were available in the system to complete the call.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       accept(), bind(), getsockname(), socket()

       The Base Definitions volume of POSIX.1‐2017, <sys_socket.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                    GETPEERNAME(3P)
getpeername(2)                                                                              System Calls Manual                                                                             getpeername(2)

NAME
       getpeername - get name of connected peer socket

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <sys/socket.h>

       int getpeername(int sockfd, struct sockaddr *restrict addr,
                       socklen_t *restrict addrlen);

DESCRIPTION
       getpeername() returns the address of the peer connected to the socket sockfd, in the buffer pointed to by addr.  The addrlen argument should be initialized to indicate the amount of space pointed
       to by addr.  On return it contains the actual size of the name returned (in bytes).  The name is truncated if the buffer provided is too small.

       The returned address is truncated if the buffer provided is too small; in this case, addrlen will return a value greater than was supplied to the call.

RETURN VALUE
       On success, zero is returned.  On error, -1 is returned, and errno is set to indicate the error.

ERRORS
       EBADF  The argument sockfd is not a valid file descriptor.

       EFAULT The addr argument points to memory not in a valid part of the process address space.

       EINVAL addrlen is invalid (e.g., is negative).

       ENOBUFS
              Insufficient resources were available in the system to perform the operation.

       ENOTCONN
              The socket is not connected.

       ENOTSOCK
              The file descriptor sockfd does not refer to a socket.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, SVr4, 4.4BSD (first appeared in 4.2BSD).

NOTES
       For stream sockets, once a connect(2) has been performed, either socket can call getpeername() to obtain the address of the peer socket.  On the other hand, datagram sockets  are  connectionless.
       Calling  connect(2)  on a datagram socket merely sets the peer address for outgoing datagrams sent with write(2) or recv(2).  The caller of connect(2) can use getpeername() to obtain the peer ad‐
       dress that it earlier set for the socket.  However, the peer socket is unaware of this information, and calling getpeername() on the peer socket will return no useful information (unless  a  con‐
       nect(2) call was also executed on the peer).  Note also that the receiver of a datagram can obtain the address of the sender when using recvfrom(2).

SEE ALSO
       accept(2), bind(2), getsockname(2), ip(7), socket(7), unix(7)

Linux man-pages 6.04                                                                            2023-04-03                                                                                  getpeername(2)
