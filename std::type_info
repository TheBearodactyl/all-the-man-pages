std::type_info(3)          Library Functions Manual          std::type_info(3)

NAME
       std::type_info - Part of RTTI.

SYNOPSIS
       Inherited by __cxxabiv1::__array_type_info,
       __cxxabiv1::__class_type_info, __cxxabiv1::__enum_type_info,
       __cxxabiv1::__function_type_info, __cxxabiv1::__fundamental_type_info,
       and __cxxabiv1::__pbase_type_info.

   Public Member Functions
       virtual ~type_info ()
       virtual bool __do_catch (const type_info *__thr_type, void **__thr_obj,
           unsigned __outer) const
       virtual bool __do_upcast (const __cxxabiv1::__class_type_info
           *__target, void **__obj_ptr) const
       virtual bool __is_function_p () const
       virtual bool __is_pointer_p () const
       bool before (const type_info &__arg) const noexcept
       size_t hash_code () const noexcept
       const char * name () const noexcept
       _GLIBCXX23_CONSTEXPR bool operator== (const type_info &__arg) const
           noexcept

   Protected Member Functions
       type_info (const char *__n)

   Protected Attributes
       const char * __name

Detailed Description
       Part of RTTI.

       The type_info class describes type information generated by an
       implementation.

       Definition at line 92 of file typeinfo.

Constructor & Destructor Documentation
   virtual std::type_info::~type_info () [virtual]
       Destructor first. Being the first non-inline virtual function, this
       controls in which translation unit the vtable is emitted. The compiler
       makes use of that information to know where to emit the runtime-
       mandated type_info structures in the new-abi.

   std::type_info::type_info (const char * __n) [inline],  [explicit],
       [protected]
       Definition at line 152 of file typeinfo.

Member Function Documentation
   bool std::type_info::before (const type_info & __arg) const [noexcept]
       Returns true if *this precedes __arg in the implementation's collation
       order.

   size_t std::type_info::hash_code () const [inline],  [noexcept]
       Definition at line 119 of file typeinfo.

   const char * std::type_info::name () const [inline],  [noexcept]
       Returns an implementation-defined byte string; this is not portable
       between compilers!

       Definition at line 103 of file typeinfo.

Member Data Documentation
   const char* std::type_info::__name [protected]
       Definition at line 150 of file typeinfo.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023               std::type_info(3)
