SIGPENDING(3P)             POSIX Programmer's Manual            SIGPENDING(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       sigpending — examine pending signals

SYNOPSIS
       #include <signal.h>

       int sigpending(sigset_t *set);

DESCRIPTION
       The sigpending() function shall store, in the  location  referenced  by
       the  set argument, the set of signals that are blocked from delivery to
       the calling thread and that are pending on the process or  the  calling
       thread.

RETURN VALUE
       Upon  successful completion, sigpending() shall return 0; otherwise, -1
       shall be returned and errno set to indicate the error.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       exec, pthread_sigmask(), sigaddset(), sigdelset(), sigemptyset(),  sig‐
       fillset(), sigismember()

       The Base Definitions volume of POSIX.1‐2017, <signal.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                       SIGPENDING(3P)
sigpending(2)                 System Calls Manual                sigpending(2)

NAME
       sigpending, rt_sigpending - examine pending signals

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <signal.h>

       int sigpending(sigset_t *set);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       sigpending():
           _POSIX_C_SOURCE

DESCRIPTION
       sigpending()  returns  the set of signals that are pending for delivery
       to the calling thread (i.e., the signals which have been  raised  while
       blocked).  The mask of pending signals is returned in set.

RETURN VALUE
       sigpending()  returns 0 on success.  On failure, -1 is returned and er‐
       rno is set to indicate the error.

ERRORS
       EFAULT set points to memory which is not a valid part  of  the  process
              address space.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

   C library/kernel differences
       The  original  Linux system call was named sigpending().  However, with
       the addition of real-time signals in Linux 2.2, the fixed-size,  32-bit
       sigset_t  argument  supported by that system call was no longer fit for
       purpose.  Consequently, a new system call, rt_sigpending(),  was  added
       to support an enlarged sigset_t type.  The new system call takes a sec‐
       ond argument, size_t sigsetsize, which specifies the size in  bytes  of
       the  signal  set in set.  The glibc sigpending() wrapper function hides
       these details from us, transparently calling rt_sigpending()  when  the
       kernel provides it.

NOTES
       See sigsetops(3) for details on manipulating signal sets.

       If  a  signal is both blocked and has a disposition of "ignored", it is
       not added to the mask of pending signals when generated.

       The set of signals that is pending for a thread is the union of the set
       of  signals that is pending for that thread and the set of signals that
       is pending for the process as a whole; see signal(7).

       A child created via fork(2) initially has an empty pending signal  set;
       the pending signal set is preserved across an execve(2).

BUGS
       Up to and including glibc 2.2.1, there is a bug in the wrapper function
       for sigpending() which means that information about  pending  real-time
       signals is not correctly returned.

SEE ALSO
       kill(2), sigaction(2), signal(2), sigprocmask(2), sigsuspend(2), sigse‐
       tops(3), signal(7)

Linux man-pages 6.04              2023-03-30                     sigpending(2)
