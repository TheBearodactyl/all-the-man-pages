__gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >(3)Library Functions Manual__gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >(3)

NAME
       __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >

SYNOPSIS
       #include <trie_policy.hpp>

   Public Types
       enum { reverse }
       enum { min_e_val, max_e_val, max_size }
       typedef detail::__conditional_type< Reverse, typenameString::const_reverse_iterator, typenameString::const_iterator >::__type const_iterator
           Element const iterator type.
       typedef std::iterator_traits< const_iterator >::value_type e_type
           Element type.
       typedef detail::rebind_traits< _Alloc, key_type >::const_reference key_const_reference
       typedef String key_type
       typedef _Alloc::size_type size_type

   Static Public Member Functions
       static const_iterator begin (key_const_reference)
           Returns a const_iterator to the first element of key_const_reference agumnet.
       static size_type e_pos (e_type e)
           Maps an element to a position.
       static const_iterator end (key_const_reference)
           Returns a const_iterator to the after-last element of key_const_reference argument.

Detailed Description
   template<typename String = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc = std::allocator<char>>
       struct __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >"Element access traits for string types.

       Template Parameters
           String String type.
           Min_E_Val Minimal element value.
           Max_E_Val Maximum element value.
           Reverse Reverse iteration should be used. Default: false.
           _Alloc Allocator type.

       Definition at line 74 of file trie_policy.hpp.

Member Typedef Documentation
   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> typedef
       detail::__conditional_type<Reverse,typenameString::const_reverse_iterator,typenameString::const_iterator>::__type __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse,
       _Alloc >::const_iterator
       Element const iterator type.

       Definition at line 90 of file trie_policy.hpp.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> typedef std::iterator_traits<const_iterator>::value_type
       __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >::e_type
       Element type.

       Definition at line 93 of file trie_policy.hpp.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> typedef detail::rebind_traits<_Alloc,key_type>::const_reference
       __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >::key_const_reference
       Definition at line 80 of file trie_policy.hpp.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> typedef String __gnu_pbds::trie_string_access_traits< String,
       Min_E_Val, Max_E_Val, Reverse, _Alloc >::key_type
       Definition at line 78 of file trie_policy.hpp.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> typedef _Alloc::size_type __gnu_pbds::trie_string_access_traits<
       String, Min_E_Val, Max_E_Val, Reverse, _Alloc >::size_type
       Definition at line 77 of file trie_policy.hpp.

Member Enumeration Documentation
   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> anonymous enum
       Definition at line 82 of file trie_policy.hpp.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> anonymous enum
       Definition at line 95 of file trie_policy.hpp.

Member Function Documentation
   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> static const_iterator __gnu_pbds::trie_string_access_traits< String,
       Min_E_Val, Max_E_Val, Reverse, _Alloc >::begin (key_const_reference) [inline],  [static]
       Returns a const_iterator to the first element of key_const_reference agumnet.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> static size_type __gnu_pbds::trie_string_access_traits< String,
       Min_E_Val, Max_E_Val, Reverse, _Alloc >::e_pos (e_type e) [inline],  [static]
       Maps an element to a position.

   template<typename String  = std::string, typename String::value_type Min_E_Val = detail::__numeric_traits<typename String::value_type>::__min, typename String::value_type Max_E_Val =
       detail::__numeric_traits<typename String::value_type>::__max, bool Reverse = false, typename _Alloc  = std::allocator<char>> static const_iterator __gnu_pbds::trie_string_access_traits< String,
       Min_E_Val, Max_E_Val, Reverse, _Alloc >::end (key_const_reference) [inline],  [static]
       Returns a const_iterator to the after-last element of key_const_reference argument.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023     __gnu_pbds::trie_string_access_traits< String, Min_E_Val, Max_E_Val, Reverse, _Alloc >(3)
