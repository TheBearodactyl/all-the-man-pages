wcsrtombs(3)                                                                             Library Functions Manual                                                                             wcsrtombs(3)

NAME
       wcsrtombs - convert a wide-character string to a multibyte string

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <wchar.h>

       size_t wcsrtombs(char dest[restrict .len], const wchar_t **restrict src,
                        size_t len, mbstate_t *restrict ps);

DESCRIPTION
       If  dest  is not NULL, the wcsrtombs() function converts the wide-character string *src to a multibyte string starting at dest.  At most len bytes are written to dest.  The shift state *ps is up‐
       dated.  The conversion is effectively performed by repeatedly calling wcrtomb(dest, *src, ps), as long as this call succeeds, and then incrementing dest by the number of bytes written and *src by
       one.  The conversion can stop for three reasons:

       •  A wide character has been encountered that can not be represented as a multibyte sequence (according to the current locale).  In this case, *src is left pointing to the invalid wide character,
          (size_t) -1 is returned, and errno is set to EILSEQ.

       •  The length limit forces a stop.  In this case, *src is left pointing to the next wide character to be converted, and the number of bytes written to dest is returned.

       •  The wide-character string has been completely converted, including the terminating null wide character (L'\0'), which has the side effect of bringing back *ps to the initial  state.   In  this
          case, *src is set to NULL, and the number of bytes written to dest, excluding the terminating null byte ('\0'), is returned.

       If dest is NULL, len is ignored, and the conversion proceeds as above, except that the converted bytes are not written out to memory, and that no length limit exists.

       In both of the above cases, if ps is NULL, a static anonymous state known only to the wcsrtombs() function is used instead.

       The programmer must ensure that there is room for at least len bytes at dest.

RETURN VALUE
       The  wcsrtombs()  function  returns  the number of bytes that make up the converted part of multibyte sequence, not including the terminating null byte.  If a wide character was encountered which
       could not be converted, (size_t) -1 is returned, and errno set to EILSEQ.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────┬───────────────┬─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
       │Interface   │ Attribute     │ Value                                                                                                                                                               │
       ├────────────┼───────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
       │wcsrtombs() │ Thread safety │ MT-Unsafe race:wcsrtombs/!ps                                                                                                                                        │
       └────────────┴───────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of wcsrtombs() depends on the LC_CTYPE category of the current locale.

       Passing NULL as ps is not multithread safe.

SEE ALSO
       iconv(3), mbsinit(3), wcrtomb(3), wcsnrtombs(3), wcstombs(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                    wcsrtombs(3)
WCSRTOMBS(3P)                                                                            POSIX Programmer's Manual                                                                           WCSRTOMBS(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       wcsnrtombs, wcsrtombs — convert a wide-character string to a character string (restartable)

SYNOPSIS
       #include <wchar.h>

       size_t wcsnrtombs(char *restrict dst, const wchar_t **restrict src,
           size_t nwc, size_t len, mbstate_t *restrict ps);
       size_t wcsrtombs(char *restrict dst, const wchar_t **restrict src,
           size_t len, mbstate_t *restrict ps);

DESCRIPTION
       For wcsrtombs(): The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the  ISO C  standard  is  uninten‐
       tional. This volume of POSIX.1‐2017 defers to the ISO C standard.

       The wcsrtombs() function shall convert a sequence of wide characters from the array indirectly pointed to by src into a sequence of corresponding characters, beginning in the conversion state de‐
       scribed by the object pointed to by ps.  If dst is not a null pointer, the converted characters shall then be stored into the array pointed to by dst.  Conversion continues up to and including  a
       terminating null wide character, which shall also be stored. Conversion shall stop earlier in the following cases:

        *  When a code is reached that does not correspond to a valid character

        *  When the next character would exceed the limit of len total bytes to be stored in the array pointed to by dst (and dst is not a null pointer)

       Each conversion shall take place as if by a call to the wcrtomb() function.

       If dst is not a null pointer, the pointer object pointed to by src shall be assigned either a null pointer (if conversion stopped due to reaching a terminating null wide character) or the address
       just past the last wide character converted (if any). If conversion stopped due to reaching a terminating null wide character, the resulting state described shall be the initial conversion state.

       If ps is a null pointer, the wcsrtombs() function shall use its own internal mbstate_t object, which is initialized at program start-up to the initial conversion state. Otherwise,  the  mbstate_t
       object pointed to by ps shall be used to completely describe the current conversion state of the associated character sequence.

       The wcsnrtombs() and wcsrtombs() functions need not be thread-safe if called with a NULL ps argument.

       The wcsnrtombs() function shall be equivalent to the wcsrtombs() function, except that the conversion is limited to the first nwc wide characters.

       The wcsrtombs() function shall not change the setting of errno if successful.

       The behavior of these functions shall be affected by the LC_CTYPE category of the current locale.

       The implementation shall behave as if no function defined in System Interfaces volume of POSIX.1‐2017 calls these functions.

RETURN VALUE
       If conversion stops because a code is reached that does not correspond to a valid character, an encoding error occurs. In this case, these functions shall store the value of the macro [EILSEQ] in
       errno and return (size_t)-1; the conversion state is undefined.  Otherwise, these functions shall return the number of bytes in the resulting character sequence,  not  including  the  terminating
       null (if any).

ERRORS
       These functions shall fail if:

       EILSEQ A wide-character code does not correspond to a valid character.

       These functions may fail if:

       EINVAL ps points to an object that contains an invalid conversion state.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbsinit(), wcrtomb()

       The Base Definitions volume of POSIX.1‐2017, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                      WCSRTOMBS(3P)
