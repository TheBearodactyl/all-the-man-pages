__gnu_debug::_Safe_unordered_container_base(3)                                           Library Functions Manual                                           __gnu_debug::_Safe_unordered_container_base(3)

NAME
       __gnu_debug::_Safe_unordered_container_base - Base class that supports tracking of local iterators that reference an unordered container.

SYNOPSIS
       #include <safe_unordered_base.h>

       Inherits __gnu_debug::_Safe_sequence_base.

       Inherited by __gnu_debug::_Safe_unordered_container< _Container >.

   Public Attributes
       _Safe_iterator_base * _M_const_iterators
           The list of constant iterators that reference this container.
       _Safe_iterator_base * _M_const_local_iterators
           The list of constant local iterators that reference this container.
       _Safe_iterator_base * _M_iterators
           The list of mutable iterators that reference this container.
       _Safe_iterator_base * _M_local_iterators
           The list of mutable local iterators that reference this container.
       unsigned int _M_version
           The container version number. This number may never be 0.

   Protected Member Functions
       _Safe_unordered_container_base (_Safe_unordered_container_base &&__x) noexcept
       _Safe_unordered_container_base (const _Safe_unordered_container_base &) noexcept
       ~_Safe_unordered_container_base () noexcept
       void _M_detach_all ()
       void _M_detach_singular ()
       __gnu_cxx::__mutex & _M_get_mutex ()  throw ()
       void _M_invalidate_all () const
       void _M_revalidate_singular ()
       void _M_swap (_Safe_sequence_base &__x) noexcept
       void _M_swap (_Safe_unordered_container_base &__x) noexcept

   Friends
       class _Safe_local_iterator_base

Detailed Description
       Base class that supports tracking of local iterators that reference an unordered container.

       The _Safe_unordered_container_base class provides basic support for tracking iterators into an unordered container. Containers that track iterators must derived from
       _Safe_unordered_container_base publicly, so that safe iterators (which inherit _Safe_iterator_base) can attach to them. This class contains four linked lists of iterators, one for constant
       iterators, one for mutable iterators, one for constant local iterators, one for mutable local iterators and a version number that allows very fast invalidation of all iterators that reference the
       container.

       This class must ensure that no operation on it may throw an exception, otherwise safe containers may fail to provide the exception-safety guarantees required by the C++ standard.

       Definition at line 120 of file safe_unordered_base.h.

Constructor & Destructor Documentation
   __gnu_debug::_Safe_unordered_container_base::_Safe_unordered_container_base () [inline],  [protected],  [noexcept]
       Definition at line 134 of file safe_unordered_base.h.

   __gnu_debug::_Safe_unordered_container_base::_Safe_unordered_container_base (const _Safe_unordered_container_base &) [inline],  [protected],  [noexcept]
       Definition at line 139 of file safe_unordered_base.h.

   __gnu_debug::_Safe_unordered_container_base::_Safe_unordered_container_base (_Safe_unordered_container_base && __x) [inline],  [protected],  [noexcept]
       Definition at line 144 of file safe_unordered_base.h.

   __gnu_debug::_Safe_unordered_container_base::~_Safe_unordered_container_base () [inline],  [protected],  [noexcept]
       Notify all iterators that reference this container that the container is being destroyed.

       Definition at line 151 of file safe_unordered_base.h.

Member Function Documentation
   void __gnu_debug::_Safe_unordered_container_base::_M_detach_all () [protected]
       Detach all iterators, leaving them singular.

   void __gnu_debug::_Safe_sequence_base::_M_detach_singular () [protected],  [inherited]
       Detach all singular iterators.

       Postcondition
           for all iterators i attached to this sequence, i->_M_version == _M_version.

   __gnu_cxx::__mutex & __gnu_debug::_Safe_sequence_base::_M_get_mutex () [protected],  [inherited]
       For use in _Safe_sequence.

       Referenced by __gnu_debug::_Safe_sequence< _Sequence >::_M_transfer_from_if().

   void __gnu_debug::_Safe_sequence_base::_M_invalidate_all () const [inline],  [protected],  [inherited]
       Invalidates all iterators.

       Definition at line 256 of file safe_base.h.

       References __gnu_debug::_Safe_sequence_base::_M_version.

   void __gnu_debug::_Safe_sequence_base::_M_revalidate_singular () [protected],  [inherited]
       Revalidates all attached singular iterators. This method may be used to validate iterators that were invalidated before (but for some reason, such as an exception, need to become valid again).

   void __gnu_debug::_Safe_sequence_base::_M_swap (_Safe_sequence_base & __x) [protected],  [noexcept],  [inherited]
       Swap this sequence with the given sequence. This operation also swaps ownership of the iterators, so that when the operation is complete all iterators that originally referenced one container now
       reference the other container.

   void __gnu_debug::_Safe_unordered_container_base::_M_swap (_Safe_unordered_container_base & __x) [protected],  [noexcept]
       Swap this container with the given container. This operation also swaps ownership of the iterators, so that when the operation is complete all iterators that originally referenced one container
       now reference the other container.

Friends And Related Function Documentation
   friend class _Safe_local_iterator_base [friend]
       Definition at line 122 of file safe_unordered_base.h.

Member Data Documentation
   _Safe_iterator_base* __gnu_debug::_Safe_sequence_base::_M_const_iterators [inherited]
       The list of constant iterators that reference this container.

       Definition at line 197 of file safe_base.h.

       Referenced by __gnu_debug::_Safe_sequence< _Sequence >::_M_transfer_from_if().

   _Safe_iterator_base* __gnu_debug::_Safe_unordered_container_base::_M_const_local_iterators
       The list of constant local iterators that reference this container.

       Definition at line 130 of file safe_unordered_base.h.

   _Safe_iterator_base* __gnu_debug::_Safe_sequence_base::_M_iterators [inherited]
       The list of mutable iterators that reference this container.

       Definition at line 194 of file safe_base.h.

       Referenced by __gnu_debug::_Safe_sequence< _Sequence >::_M_transfer_from_if().

   _Safe_iterator_base* __gnu_debug::_Safe_unordered_container_base::_M_local_iterators
       The list of mutable local iterators that reference this container.

       Definition at line 127 of file safe_unordered_base.h.

   unsigned int __gnu_debug::_Safe_sequence_base::_M_version [mutable],  [inherited]
       The container version number. This number may never be 0.

       Definition at line 200 of file safe_base.h.

       Referenced by __gnu_debug::_Safe_sequence_base::_M_invalidate_all(), and __gnu_debug::_Safe_local_iterator< _Iterator, _Sequence >::operator=().

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                                __gnu_debug::_Safe_unordered_container_base(3)
