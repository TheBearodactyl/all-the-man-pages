frexp(3)                                                                                 Library Functions Manual                                                                                 frexp(3)

NAME
       frexp, frexpf, frexpl - convert floating-point number to fractional and integral components

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double frexp(double x, int *exp);
       float frexpf(float x, int *exp);
       long double frexpl(long double x, int *exp);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       frexpf(), frexpl():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

DESCRIPTION
       These functions are used to split the number x into a normalized fraction and an exponent which is stored in exp.

RETURN VALUE
       These functions return the normalized fraction.  If the argument x is not zero, the normalized fraction is x times a power of two, and its absolute value is always in the range 1/2 (inclusive) to
       1 (exclusive), that is, [0.5,1).

       If x is zero, then the normalized fraction is zero and zero is stored in exp.

       If x is a NaN, a NaN is returned, and the value of *exp is unspecified.

       If x is positive infinity (negative infinity), positive infinity (negative infinity) is returned, and the value of *exp is unspecified.

ERRORS
       No errors occur.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │frexp(), frexpf(), frexpl()                                                                                                                                             │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       C99, POSIX.1-2001.

       The variant returning double also conforms to SVr4, 4.3BSD, C89.

EXAMPLES
       The program below produces results such as the following:

           $ ./a.out 2560
           frexp(2560, &e) = 0.625: 0.625 * 2^12 = 2560
           $ ./a.out -4
           frexp(-4, &e) = -0.5: -0.5 * 2^3 = -4

   Program source

       #include <float.h>
       #include <math.h>
       #include <stdio.h>
       #include <stdlib.h>

       int
       main(int argc, char *argv[])
       {
           double x, r;
           int exp;

           x = strtod(argv[1], NULL);
           r = frexp(x, &exp);

           printf("frexp(%g, &e) = %g: %g * %d^%d = %g\n",
                  x, r, r, FLT_RADIX, exp, x);
           exit(EXIT_SUCCESS);
       }

SEE ALSO
       ldexp(3), modf(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                        frexp(3)
FREXP(3P)                                                                                POSIX Programmer's Manual                                                                               FREXP(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       frexp, frexpf, frexpl — extract mantissa and exponent from a double precision number

SYNOPSIS
       #include <math.h>

       double frexp(double num, int *exp);
       float frexpf(float num, int *exp);
       long double frexpl(long double num, int *exp);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       These functions shall break a floating-point number num into a normalized fraction and an integral power of 2. The integer exponent shall be stored in the int object pointed to by exp.

RETURN VALUE
       For finite arguments, these functions shall return the value x, such that x has a magnitude in the interval [½,1) or 0, and num equals x times 2 raised to the power *exp.

       If num is NaN, a NaN shall be returned, and the value of *exp is unspecified.

       If num is ±0, ±0 shall be returned, and the value of *exp shall be 0.

       If num is ±Inf, num shall be returned, and the value of *exp is unspecified.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       isnan(), ldexp(), modf()

       The Base Definitions volume of POSIX.1‐2017, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                          FREXP(3P)
