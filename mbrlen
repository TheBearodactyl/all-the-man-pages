mbrlen(3)                                                                                Library Functions Manual                                                                                mbrlen(3)

NAME
       mbrlen - determine number of bytes in next multibyte character

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <wchar.h>

       size_t mbrlen(const char s[restrict .n], size_t n,
                     mbstate_t *restrict ps);

DESCRIPTION
       The mbrlen() function inspects at most n bytes of the multibyte string starting at s and extracts the next complete multibyte character.  It updates the shift state *ps.  If the multibyte charac‐
       ter is not the null wide character, it returns the number of bytes that were consumed from s.  If the multibyte character is the null wide character, it resets the shift state *ps to the  initial
       state and returns 0.

       If  the  n  bytes  starting  at s do not contain a complete multibyte character, mbrlen() returns (size_t) -2.  This can happen even if n >= MB_CUR_MAX, if the multibyte string contains redundant
       shift sequences.

       If the multibyte string starting at s contains an invalid multibyte sequence before the next complete character, mbrlen() returns (size_t) -1 and sets errno to EILSEQ.  In this case, the  effects
       on *ps are undefined.

       If ps is NULL, a static anonymous state known only to the mbrlen() function is used instead.

RETURN VALUE
       The mbrlen() function returns the number of bytes parsed from the multibyte sequence starting at s, if a non-null wide character was recognized.  It returns 0, if a null wide character was recog‐
       nized.  It returns (size_t) -1 and sets errno to EILSEQ, if an invalid multibyte sequence was encountered.  It returns (size_t) -2 if it couldn't parse a  complete  multibyte  character,  meaning
       that n should be increased.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬───────────────────────────┐
       │Interface                                                                                                                                             │ Attribute     │ Value                     │
       ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼───────────────────────────┤
       │mbrlen()                                                                                                                                              │ Thread safety │ MT-Unsafe race:mbrlen/!ps │
       └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴───────────────────────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

NOTES
       The behavior of mbrlen() depends on the LC_CTYPE category of the current locale.

SEE ALSO
       mbrtowc(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       mbrlen(3)
MBRLEN(3P)                                                                               POSIX Programmer's Manual                                                                              MBRLEN(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       mbrlen — get number of bytes in a character (restartable)

SYNOPSIS
       #include <wchar.h>

       size_t mbrlen(const char *restrict s, size_t n,
           mbstate_t *restrict ps);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       If s is not a null pointer, mbrlen() shall determine the number of bytes constituting the character pointed to by s.  It shall be equivalent to:

           mbstate_t internal;
           mbrtowc(NULL, s, n, ps != NULL ? ps : &internal);

       If  ps is a null pointer, the mbrlen() function shall use its own internal mbstate_t object, which is initialized at program start-up to the initial conversion state. Otherwise, the mbstate_t ob‐
       ject pointed to by ps shall be used to completely describe the current conversion state of the associated character sequence. The implementation shall behave as if no  function  defined  in  this
       volume of POSIX.1‐2017 calls mbrlen().

       The behavior of this function is affected by the LC_CTYPE category of the current locale.

       The mbrlen() function need not be thread-safe if called with a NULL ps argument.

       The mbrlen() function shall not change the setting of errno if successful.

RETURN VALUE
       The mbrlen() function shall return the first of the following that applies:

       0           If the next n or fewer bytes complete the character that corresponds to the null wide character.

       positive    If the next n or fewer bytes complete a valid character; the value returned shall be the number of bytes that complete the character.

       (size_t)-2  If  the  next  n  bytes contribute to an incomplete but potentially valid character, and all n bytes have been processed. When n has at least the value of the {MB_CUR_MAX} macro, this
                   case can only occur if s points at a sequence of redundant shift sequences (for implementations with state-dependent encodings).

       (size_t)-1  If an encoding error occurs, in which case the next n or fewer bytes do not contribute to a complete and valid character. In this case, [EILSEQ] shall be stored in errno and the  con‐
                   version state is undefined.

ERRORS
       The mbrlen() function shall fail if:

       EILSEQ An invalid character sequence is detected.  In the POSIX locale an [EILSEQ] error cannot occur since all byte values are valid characters.

       The mbrlen() function may fail if:

       EINVAL ps points to an object that contains an invalid conversion state.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbsinit(), mbrtowc()

       The Base Definitions volume of POSIX.1‐2017, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         MBRLEN(3P)
