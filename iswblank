iswblank(3)                                                                              Library Functions Manual                                                                              iswblank(3)

NAME
       iswblank - test for whitespace wide character

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <wctype.h>

       int iswblank(wint_t wc);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       iswblank():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       The iswblank() function is the wide-character equivalent of the isblank(3) function.  It tests whether wc is a wide character belonging to the wide-character class "blank".

       The wide-character class "blank" is a subclass of the wide-character class "space".

       Being  a  subclass of the wide-character class "space", the wide-character class "blank" is disjoint from the wide-character class "graph" and therefore also disjoint from its subclasses "alnum",
       "alpha", "upper", "lower", "digit", "xdigit", "punct".

       The wide-character class "blank" always contains at least the space character and the control character '\t'.

RETURN VALUE
       The iswblank() function returns nonzero if wc is a wide character belonging to the wide-character class "blank".  Otherwise, it returns zero.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────────┐
       │Interface                                                                                                                                                        │ Attribute     │ Value          │
       ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────────┤
       │iswblank()                                                                                                                                                       │ Thread safety │ MT-Safe locale │
       └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

NOTES
       The behavior of iswblank() depends on the LC_CTYPE category of the current locale.

SEE ALSO
       isblank(3), iswctype(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                     iswblank(3)
ISWBLANK(3P)                                                                             POSIX Programmer's Manual                                                                            ISWBLANK(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       iswblank, iswblank_l — test for a blank wide-character code

SYNOPSIS
       #include <wctype.h>

       int iswblank(wint_t wc);
       int iswblank_l(wint_t wc, locale_t locale);

DESCRIPTION
       For iswblank(): The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and  the  ISO C  standard  is  uninten‐
       tional. This volume of POSIX.1‐2017 defers to the ISO C standard.

       The  iswblank()  and iswblank() functions shall test whether wc is a wide-character code representing a character of class blank in the current locale, or in the locale represented by locale, re‐
       spectively; see the Base Definitions volume of POSIX.1‐2017, Chapter 7, Locale.

       The wc argument is a wint_t, the value of which the application shall ensure is a wide-character code corresponding to a valid character in the locale used by the function, or equal to the  value
       of the macro WEOF. If the argument has any other value, the behavior is undefined.

       The behavior is undefined if the locale argument to iswblank_l() is the special locale object LC_GLOBAL_LOCALE or is not a valid locale object handle.

RETURN VALUE
       The iswblank() and iswblank_l() functions shall return non-zero if wc is a blank wide-character code; otherwise, they shall return 0.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       To  ensure applications portability, especially across natural languages, only these functions and the functions in the reference pages listed in the SEE ALSO section should be used for character
       classification.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       iswalnum(), iswalpha(), iswcntrl(), iswctype(), iswdigit(), iswgraph(), iswlower(), iswprint(), iswpunct(), iswspace(), iswupper(), iswxdigit(), setlocale(), uselocale()

       The Base Definitions volume of POSIX.1‐2017, Chapter 7, Locale, <locale.h>, <wctype.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                       ISWBLANK(3P)
