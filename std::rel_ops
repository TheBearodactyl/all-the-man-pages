std::rel_ops(3)            Library Functions Manual            std::rel_ops(3)

NAME
       std::rel_ops - The generated relational operators are sequestered here.

SYNOPSIS
   Functions
       template<class _Tp > bool operator!= (const _Tp &__x, const _Tp &__y)
           Defines != for arbitrary types, in terms of ==.
       template<class _Tp > bool operator<= (const _Tp &__x, const _Tp &__y)
           Defines <= for arbitrary types, in terms of <.
       template<class _Tp > bool operator> (const _Tp &__x, const _Tp &__y)
           Defines > for arbitrary types, in terms of <.
       template<class _Tp > bool operator>= (const _Tp &__x, const _Tp &__y)
           Defines >= for arbitrary types, in terms of <.

Detailed Description
       The generated relational operators are sequestered here.

       Libstdc++ headers must not use the contents of rel_ops. User code
       should also avoid them, because unconstrained function templates are
       too greedy and can easily cause ambiguities.

       C++20 default comparisons are a better solution.

Function Documentation
   template<class _Tp > bool std::rel_ops::operator!= (const _Tp & __x, const
       _Tp & __y) [inline]
       Defines != for arbitrary types, in terms of ==.

       Parameters
           __x A thing.
           __y Another thing.

       Returns
           __x != __y

       This function uses == to determine its result.

       Definition at line 88 of file stl_relops.h.

   template<class _Tp > bool std::rel_ops::operator<= (const _Tp & __x, const
       _Tp & __y) [inline]
       Defines <= for arbitrary types, in terms of <.

       Parameters
           __x A thing.
           __y Another thing.

       Returns
           __x <= __y

       This function uses < to determine its result.

       Definition at line 113 of file stl_relops.h.

   template<class _Tp > bool std::rel_ops::operator> (const _Tp & __x, const
       _Tp & __y) [inline]
       Defines > for arbitrary types, in terms of <.

       Parameters
           __x A thing.
           __y Another thing.

       Returns
           __x > __y

       This function uses < to determine its result.

       Definition at line 101 of file stl_relops.h.

   template<class _Tp > bool std::rel_ops::operator>= (const _Tp & __x, const
       _Tp & __y) [inline]
       Defines >= for arbitrary types, in terms of <.

       Parameters
           __x A thing.
           __y Another thing.

       Returns
           __x >= __y

       This function uses < to determine its result.

       Definition at line 127 of file stl_relops.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023                 std::rel_ops(3)
