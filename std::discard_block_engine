std::discard_block_engine< _RandomNumberEngine, __p, __r >(3)                            Library Functions Manual                            std::discard_block_engine< _RandomNumberEngine, __p, __r >(3)

NAME
       std::discard_block_engine< _RandomNumberEngine, __p, __r >

SYNOPSIS
       #include <random>

   Public Types
       template<typename _Sseq > using _If_seed_seq = typename enable_if< __detail::__is_seed_seq< _Sseq, discard_block_engine, result_type >::value >::type
       typedef _RandomNumberEngine::result_type result_type

   Public Member Functions
       discard_block_engine ()
           Constructs a default discard_block_engine engine.
       discard_block_engine (_RandomNumberEngine &&__rng)
           Move constructs a discard_block_engine engine.
       template<typename _Sseq , typename  = _If_seed_seq<_Sseq>> discard_block_engine (_Sseq &__q)
           Generator construct a discard_block_engine engine.
       discard_block_engine (const _RandomNumberEngine &__rng)
           Copy constructs a discard_block_engine engine.
       discard_block_engine (result_type __s)
           Seed constructs a discard_block_engine engine.
       const _RandomNumberEngine & base () const noexcept
           Gets a const reference to the underlying generator engine object.
       void discard (unsigned long long __z)
           Discard a sequence of random numbers.
       result_type operator() ()
           Gets the next value in the generated random number sequence.
       void seed ()
           Reseeds the discard_block_engine object with the default seed for the underlying base class generator engine.
       template<typename _Sseq > _If_seed_seq< _Sseq > seed (_Sseq &__q)
           Reseeds the discard_block_engine object with the given seed sequence.
       void seed (result_type __s)
           Reseeds the discard_block_engine object with the default seed for the underlying base class generator engine.

   Static Public Member Functions
       static constexpr result_type max ()
           Gets the maximum value in the generated random number range.
       static constexpr result_type min ()
           Gets the minimum value in the generated random number range.

   Static Public Attributes
       static constexpr size_t block_size
       static constexpr size_t used_block

   Friends
       template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > std::basic_ostream< _CharT, _Traits > & operator<< (std::basic_ostream< _CharT, _Traits >
           &__os, const std::discard_block_engine< _RandomNumberEngine1, __p1, __r1 > &__x)
           Inserts the current state of a discard_block_engine random number generator engine __x into the output stream __os.
       bool operator== (const discard_block_engine &__lhs, const discard_block_engine &__rhs)
           Compares two discard_block_engine random number generator objects of the same type for equality.
       template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > std::basic_istream< _CharT, _Traits > & operator>> (std::basic_istream< _CharT, _Traits >
           &__is, std::discard_block_engine< _RandomNumberEngine1, __p1, __r1 > &__x)
           Extracts the current state of a % subtract_with_carry_engine random number generator engine __x from the input stream __is.

Detailed Description
   template<typename _RandomNumberEngine, size_t __p, size_t __r>
       class std::discard_block_engine< _RandomNumberEngine, __p, __r >"Produces random numbers from some base engine by discarding blocks of data.

       0 <= __r <= __p

       Definition at line 887 of file random.

Member Typedef Documentation
   template<typename _RandomNumberEngine , size_t __p, size_t __r> template<typename _Sseq > using std::discard_block_engine< _RandomNumberEngine, __p, __r >::_If_seed_seq =  typename
       enable_if<__detail::__is_seed_seq< _Sseq, discard_block_engine, result_type>::value>::type
       Definition at line 897 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> typedef _RandomNumberEngine::result_type std::discard_block_engine< _RandomNumberEngine, __p, __r >::result_type
       The type of the generated random value.

       Definition at line 894 of file random.

Constructor & Destructor Documentation
   template<typename _RandomNumberEngine , size_t __p, size_t __r> std::discard_block_engine< _RandomNumberEngine, __p, __r >::discard_block_engine () [inline]
       Constructs a default discard_block_engine engine. The underlying engine is default constructed as well.

       Definition at line 909 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> std::discard_block_engine< _RandomNumberEngine, __p, __r >::discard_block_engine (const _RandomNumberEngine & __rng) [inline],
       [explicit]
       Copy constructs a discard_block_engine engine. Copies an existing base class random number generator.

       Parameters
           __rng An existing (base class) engine object.

       Definition at line 919 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> std::discard_block_engine< _RandomNumberEngine, __p, __r >::discard_block_engine (_RandomNumberEngine && __rng) [inline],  [explicit]
       Move constructs a discard_block_engine engine. Copies an existing base class random number generator.

       Parameters
           __rng An existing (base class) engine object.

       Definition at line 929 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> std::discard_block_engine< _RandomNumberEngine, __p, __r >::discard_block_engine (result_type __s) [inline],  [explicit]
       Seed constructs a discard_block_engine engine. Constructs the underlying generator engine seeded with __s.

       Parameters
           __s A seed value for the base class engine.

       Definition at line 939 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> template<typename _Sseq , typename  = _If_seed_seq<_Sseq>> std::discard_block_engine< _RandomNumberEngine, __p, __r
       >::discard_block_engine (_Sseq & __q) [inline],  [explicit]
       Generator construct a discard_block_engine engine.

       Parameters
           __q A seed sequence.

       Definition at line 949 of file random.

Member Function Documentation
   template<typename _RandomNumberEngine , size_t __p, size_t __r> const _RandomNumberEngine & std::discard_block_engine< _RandomNumberEngine, __p, __r >::base () const [inline],  [noexcept]
       Gets a const reference to the underlying generator engine object.

       Definition at line 993 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> void std::discard_block_engine< _RandomNumberEngine, __p, __r >::discard (unsigned long long __z) [inline]
       Discard a sequence of random numbers.

       Definition at line 1014 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> static constexpr result_type std::discard_block_engine< _RandomNumberEngine, __p, __r >::max () [inline],  [static],  [constexpr]
       Gets the maximum value in the generated random number range.

       Definition at line 1007 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> static constexpr result_type std::discard_block_engine< _RandomNumberEngine, __p, __r >::min () [inline],  [static],  [constexpr]
       Gets the minimum value in the generated random number range.

       Definition at line 1000 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> discard_block_engine< _RandomNumberEngine, __p, __r >::result_type std::discard_block_engine< _RandomNumberEngine, __p, __r
       >::operator()
       Gets the next value in the generated random number sequence.

       Definition at line 686 of file bits/random.tcc.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> void std::discard_block_engine< _RandomNumberEngine, __p, __r >::seed () [inline]
       Reseeds the discard_block_engine object with the default seed for the underlying base class generator engine.

       Definition at line 958 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> template<typename _Sseq > _If_seed_seq< _Sseq > std::discard_block_engine< _RandomNumberEngine, __p, __r >::seed (_Sseq & __q) [inline]
       Reseeds the discard_block_engine object with the given seed sequence.

       Parameters
           __q A seed generator function.

       Definition at line 982 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> void std::discard_block_engine< _RandomNumberEngine, __p, __r >::seed (result_type __s) [inline]
       Reseeds the discard_block_engine object with the default seed for the underlying base class generator engine.

       Definition at line 969 of file random.

Friends And Related Function Documentation
   template<typename _RandomNumberEngine , size_t __p, size_t __r> template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > std::basic_ostream< _CharT,
       _Traits > & operator<< (std::basic_ostream< _CharT, _Traits > & __os, const std::discard_block_engine< _RandomNumberEngine1, __p1, __r1 > & __x) [friend]
       Inserts the current state of a discard_block_engine random number generator engine __x into the output stream __os.

       Parameters
           __os An output stream.
           __x A discard_block_engine random number generator engine.

       Returns
           The output stream with the state of __x inserted or in an error state.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> bool operator== (const discard_block_engine< _RandomNumberEngine, __p, __r > & __lhs, const discard_block_engine< _RandomNumberEngine,
       __p, __r > & __rhs) [friend]
       Compares two discard_block_engine random number generator objects of the same type for equality.

       Parameters
           __lhs A discard_block_engine random number generator object.
           __rhs Another discard_block_engine random number generator object.

       Returns
           true if the infinite sequences of generated values would be equal, false otherwise.

       Definition at line 1038 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> template<typename _RandomNumberEngine1 , size_t __p1, size_t __r1, typename _CharT , typename _Traits > std::basic_istream< _CharT,
       _Traits > & operator>> (std::basic_istream< _CharT, _Traits > & __is, std::discard_block_engine< _RandomNumberEngine1, __p1, __r1 > & __x) [friend]
       Extracts the current state of a % subtract_with_carry_engine random number generator engine __x from the input stream __is.

       Parameters
           __is An input stream.
           __x A discard_block_engine random number generator engine.

       Returns
           The input stream with the state of __x extracted or in an error state.

Member Data Documentation
   template<typename _RandomNumberEngine , size_t __p, size_t __r> constexpr size_t std::discard_block_engine< _RandomNumberEngine, __p, __r >::block_size [static],  [constexpr]
       Definition at line 901 of file random.

   template<typename _RandomNumberEngine , size_t __p, size_t __r> constexpr size_t std::discard_block_engine< _RandomNumberEngine, __p, __r >::used_block [static],  [constexpr]
       Definition at line 902 of file random.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                 std::discard_block_engine< _RandomNumberEngine, __p, __r >(3)
