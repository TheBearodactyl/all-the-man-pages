std::__debustd::__debug::unordered_multiset<a_Value,e_Hash,l_Pred,)_Alloc >(3)

NAME
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc > -
       Class std::unordered_multiset with safety/checking/debug
       instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and unordered_multiset< _Value,
       std::hash< _Value >, std::equal_to< _Value >, std::allocator< _Value >
       >.

   Public Types
       typedef _Base::allocator_type allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator,
           unordered_multiset > const_iterator
       typedef __gnu_debug::_Safe_local_iterator< _Base_const_local_iterator,
           unordered_multiset > const_local_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef _Base::difference_type difference_type
       typedef _Base::hasher hasher
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, unordered_multiset
           > iterator
       typedef _Base::key_equal key_equal
       typedef _Base::key_type key_type
       typedef __gnu_debug::_Safe_local_iterator< _Base_local_iterator,
           unordered_multiset > local_iterator
       using node_type = typename _Base::node_type
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef _Base::size_type size_type
       typedef _Base::value_type value_type

   Public Member Functions
       unordered_multiset (_Base_ref __x)
       template<typename _InputIterator > unordered_multiset (_InputIterator
           __first, _InputIterator __last, size_type __n, const allocator_type
           &__a)
       template<typename _InputIterator > unordered_multiset (_InputIterator
           __first, _InputIterator __last, size_type __n, const hasher &__hf,
           const allocator_type &__a)
       template<typename _InputIterator > unordered_multiset (_InputIterator
           __first, _InputIterator __last, size_type __n=0, const hasher
           &__hf=hasher(), const key_equal &__eql=key_equal(), const
           allocator_type &__a=allocator_type())
       unordered_multiset (const allocator_type &__a)
       unordered_multiset (const unordered_multiset &)=default
       unordered_multiset (const unordered_multiset &__uset, const
           allocator_type &__a)
       unordered_multiset (initializer_list< value_type > __l, size_type __n,
           const allocator_type &__a)
       unordered_multiset (initializer_list< value_type > __l, size_type __n,
           const hasher &__hf, const allocator_type &__a)
       unordered_multiset (initializer_list< value_type > __l, size_type
           __n=0, const hasher &__hf=hasher(), const key_equal
           &__eql=key_equal(), const allocator_type &__a=allocator_type())
       unordered_multiset (size_type __n, const allocator_type &__a)
       unordered_multiset (size_type __n, const hasher &__hf, const
           allocator_type &__a)
       unordered_multiset (size_type __n, const hasher &__hf=hasher(), const
           key_equal &__eql=key_equal(), const allocator_type
           &__a=allocator_type())
       unordered_multiset (unordered_multiset &&)=default
       unordered_multiset (unordered_multiset &&__uset, const allocator_type
           &__a) noexcept(noexcept(_Base(std::move(__uset), __a)))
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       local_iterator begin (size_type __b)
       const_local_iterator begin (size_type __b) const
       size_type bucket_size (size_type __b) const
       const_iterator cbegin () const noexcept
       const_local_iterator cbegin (size_type __b) const
       const_iterator cend () const noexcept
       const_local_iterator cend (size_type __b) const
       void clear () noexcept
       template<typename... _Args> iterator emplace (_Args &&... __args)
       template<typename... _Args> iterator emplace_hint (const_iterator
           __hint, _Args &&... __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       local_iterator end (size_type __b)
       const_local_iterator end (size_type __b) const
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< iterator, iterator > equal_range (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           std::pair< const_iterator, const_iterator > equal_range (const _Kt
           &__k) const
       std::pair< iterator, iterator > equal_range (const key_type &__key)
       std::pair< const_iterator, const_iterator > equal_range (const key_type
           &__key) const
       _Base_iterator erase (_Base_const_iterator __it)
       size_type erase (const key_type &__key)
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __it)
       iterator erase (iterator __it)
       node_type extract (const key_type &__key)
       node_type extract (const_iterator __position)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>> iterator
           find (const _Kt &__k)
       template<typename _Kt , typename  = std::__has_is_transparent_t<_Hash,
           _Kt>, typename  = std::__has_is_transparent_t<_Pred, _Kt>>
           const_iterator find (const _Kt &__k) const
       iterator find (const key_type &__key)
       const_iterator find (const key_type &__key) const
       template<typename _InputIterator > void insert (_InputIterator __first,
           _InputIterator __last)
       iterator insert (const value_type &__obj)
       iterator insert (const_iterator __hint, const value_type &__obj)
       iterator insert (const_iterator __hint, node_type &&__nh)
       iterator insert (const_iterator __hint, value_type &&__obj)
       iterator insert (node_type &&__nh)
       void insert (std::initializer_list< value_type > __l)
       iterator insert (value_type &&__obj)
       float max_load_factor () const noexcept
       void max_load_factor (float __f)
       template<typename _H2 , typename _P2 > void merge (unordered_multiset<
           _Value, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_multiset<
           _Value, _H2, _P2, _Alloc > &__source)
       template<typename _H2 , typename _P2 > void merge (unordered_set<
           _Value, _H2, _P2, _Alloc > &&__source)
       template<typename _H2 , typename _P2 > void merge (unordered_set<
           _Value, _H2, _P2, _Alloc > &__source)
       unordered_multiset & operator= (const unordered_multiset &)=default
       unordered_multiset & operator= (initializer_list< value_type > __l)
       unordered_multiset & operator= (unordered_multiset &&)=default
       void swap (unordered_multiset &__x) noexcept(noexcept(declval< _Base &
           >().swap(__x)))

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator
       template<typename _ItT , typename _SeqT > class
           ::__gnu_debug::_Safe_local_iterator

Detailed Description
   template<typename _Value, typename _Hash = std::hash<_Value>, typename
       _Pred = std::equal_to<_Value>, typename _Alloc =
       std::allocator<_Value>>
       class std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >"Class std::unordered_multiset with safety/checking/debug
       instrumentation.

       Definition at line 740 of file debug/unordered_set.

Member Typedef Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::allocator_type
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::allocator_type
       Definition at line 774 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_iterator<
       _Base_const_iterator, unordered_multiset>
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::const_iterator
       Definition at line 786 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_local_iterator<
       _Base_const_local_iterator, unordered_multiset>
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::const_local_iterator
       Definition at line 790 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::const_pointer
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::const_pointer
       Definition at line 780 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::const_reference
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::const_reference
       Definition at line 782 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::difference_type
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::difference_type
       Definition at line 771 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::hasher
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::hasher
       Definition at line 772 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_iterator<
       _Base_iterator, unordered_multiset> std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::iterator
       Definition at line 784 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::key_equal
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::key_equal
       Definition at line 773 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::key_type
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::key_type
       Definition at line 776 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef __gnu_debug::_Safe_local_iterator<
       _Base_local_iterator, unordered_multiset>
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::local_iterator
       Definition at line 788 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> using std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::node_type =  typename _Base::node_type
       Definition at line 1091 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::pointer
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::pointer
       Definition at line 779 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::reference
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::reference
       Definition at line 781 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::size_type
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::size_type
       Definition at line 770 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> typedef _Base::value_type
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::value_type
       Definition at line 777 of file debug/unordered_set.

Constructor & Destructor Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (size_type __n, const hasher
       & __hf = hasher(), const key_equal & __eql = key_equal(), const
       allocator_type & __a = allocator_type()) [inline],  [explicit]
       Definition at line 795 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::unordered_multiset (_InputIterator __first, _InputIterator __last,
       size_type __n = 0, const hasher & __hf = hasher(), const key_equal &
       __eql = key_equal(), const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 802 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (_Base_ref __x) [inline]
       Definition at line 814 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (const allocator_type & __a)
       [inline],  [explicit]
       Definition at line 820 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (const unordered_multiset<
       _Value, _Hash, _Pred, _Alloc > & __uset, const allocator_type & __a)
       [inline]
       Definition at line 823 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (unordered_multiset< _Value,
       _Hash, _Pred, _Alloc > && __uset, const allocator_type & __a) [inline],
       [noexcept]
       Definition at line 827 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (initializer_list<
       value_type > __l, size_type __n = 0, const hasher & __hf = hasher(),
       const key_equal & __eql = key_equal(), const allocator_type & __a =
       allocator_type()) [inline]
       Definition at line 833 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (size_type __n, const
       allocator_type & __a) [inline]
       Definition at line 840 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (size_type __n, const hasher
       & __hf, const allocator_type & __a) [inline]
       Definition at line 844 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::unordered_multiset (_InputIterator __first, _InputIterator __last,
       size_type __n, const allocator_type & __a) [inline]
       Definition at line 850 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator >
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::unordered_multiset (_InputIterator __first, _InputIterator __last,
       size_type __n, const hasher & __hf, const allocator_type & __a)
       [inline]
       Definition at line 857 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (initializer_list<
       value_type > __l, size_type __n, const allocator_type & __a) [inline]
       Definition at line 863 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::unordered_multiset (initializer_list<
       value_type > __l, size_type __n, const hasher & __hf, const
       allocator_type & __a) [inline]
       Definition at line 869 of file debug/unordered_set.

Member Function Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const _Base & std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::_M_base () const [inline],  [noexcept]
       Definition at line 1277 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> _Base & std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::_M_base () [inline],  [noexcept]
       Definition at line 1274 of file debug/unordered_set.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::begin
       () const [inline],  [noexcept]
       Definition at line 916 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::begin () [inline],  [noexcept]
       Definition at line 912 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::begin
       (size_type __b) [inline]
       Definition at line 937 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::begin
       (size_type __b) const [inline]
       Definition at line 951 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> size_type std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::bucket_size (size_type __b) const
       [inline]
       Definition at line 982 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::cbegin () const [inline],  [noexcept]
       Definition at line 928 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::cbegin (size_type __b) const [inline]
       Definition at line 965 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::cend
       () const [inline],  [noexcept]
       Definition at line 932 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::cend
       (size_type __b) const [inline]
       Definition at line 972 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::clear () [inline],  [noexcept]
       Definition at line 905 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename... _Args> iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::emplace (_Args &&... __args) [inline]
       Definition at line 1007 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename... _Args> iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::emplace_hint (const_iterator __hint, _Args &&... __args) [inline]
       Definition at line 1017 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::end
       () const [inline],  [noexcept]
       Definition at line 924 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::end () [inline],  [noexcept]
       Definition at line 920 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::end
       (size_type __b) [inline]
       Definition at line 944 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_local_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::end
       (size_type __b) const [inline]
       Definition at line 958 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< iterator, iterator
       > std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const _Kt & __k) [inline]
       Definition at line 1196 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> std::pair< const_iterator,
       const_iterator > std::__debug::unordered_multiset< _Value, _Hash,
       _Pred, _Alloc >::equal_range (const _Kt & __k) const [inline]
       Definition at line 1215 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< iterator, iterator >
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const key_type & __key) [inline]
       Definition at line 1185 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> std::pair< const_iterator, const_iterator >
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::equal_range (const key_type & __key) const [inline]
       Definition at line 1204 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> _Base_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::erase
       (_Base_const_iterator __it) [inline]
       Definition at line 1245 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> size_type std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::erase (const key_type & __key) [inline]
       Definition at line 1223 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::erase (const_iterator __first,
       const_iterator __last) [inline]
       Definition at line 1259 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::erase (const_iterator __it) [inline]
       Definition at line 1238 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::erase (iterator __it) [inline]
       Definition at line 1252 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> node_type std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::extract (const key_type & __key)
       [inline]
       Definition at line 1101 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> node_type std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::extract (const_iterator __position)
       [inline]
       Definition at line 1094 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::find
       (const _Kt & __k) [inline]
       Definition at line 1161 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _Kt , typename  =
       std::__has_is_transparent_t<_Hash, _Kt>, typename  =
       std::__has_is_transparent_t<_Pred, _Kt>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::find
       (const _Kt & __k) const [inline]
       Definition at line 1174 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::find (const key_type & __key) [inline]
       Definition at line 1153 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> const_iterator
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::find
       (const key_type & __key) const [inline]
       Definition at line 1166 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _InputIterator > void
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::insert (_InputIterator __first, _InputIterator __last) [inline]
       Definition at line 1075 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (const value_type & __obj)
       [inline]
       Definition at line 1028 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (const_iterator __hint, const
       value_type & __obj) [inline]
       Definition at line 1037 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (const_iterator __hint,
       node_type && __nh) [inline]
       Definition at line 1114 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (const_iterator __hint,
       value_type && __obj) [inline]
       Definition at line 1056 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (node_type && __nh) [inline]
       Definition at line 1110 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::insert (std::initializer_list< value_type >
       __l) [inline]
       Definition at line 1066 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> iterator std::__debug::unordered_multiset<
       _Value, _Hash, _Pred, _Alloc >::insert (value_type && __obj) [inline]
       Definition at line 1047 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> float std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::max_load_factor () const [inline],  [noexcept]
       Definition at line 992 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::max_load_factor (float __f) [inline]
       Definition at line 996 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_multiset< _Value, _H2, _P2, _Alloc > && __source) [inline]
       Definition at line 1131 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_multiset< _Value, _H2, _P2, _Alloc > & __source) [inline]
       Definition at line 1122 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_set< _Value, _H2, _P2, _Alloc > && __source) [inline]
       Definition at line 1145 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _H2 , typename _P2 > void
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc >::merge
       (unordered_set< _Value, _H2, _P2, _Alloc > & __source) [inline]
       Definition at line 1136 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> unordered_multiset &
       std::__debug::unordered_multiset< _Value, _Hash, _Pred, _Alloc
       >::operator= (initializer_list< value_type > __l) [inline]
       Definition at line 884 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> void std::__debug::unordered_multiset< _Value,
       _Hash, _Pred, _Alloc >::swap (unordered_multiset< _Value, _Hash, _Pred,
       _Alloc > & __x) [inline],  [noexcept]
       Definition at line 897 of file debug/unordered_set.

Friends And Related Function Documentation
   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _ItT , typename _SeqT ,
       typename _CatT > friend class ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 757 of file debug/unordered_set.

   template<typename _Value , typename _Hash  = std::hash<_Value>, typename
       _Pred  = std::equal_to<_Value>, typename _Alloc  =
       std::allocator<_Value>> template<typename _ItT , typename _SeqT >
       friend class ::__gnu_debug::_Safe_local_iterator [friend]
       Definition at line 759 of file debug/unordered_set.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++  std::__debug::unordered_multiset<2_Value, _Hash, _Pred, _Alloc >(3)
