SCHED_GET_PRIORITY_MAX(3P) POSIX Programmer's ManualSCHED_GET_PRIORITY_MAX(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       sched_get_priority_max, sched_get_priority_min —  get  priority  limits
       (REALTIME)

SYNOPSIS
       #include <sched.h>

       int sched_get_priority_max(int policy);
       int sched_get_priority_min(int policy);

DESCRIPTION
       The  sched_get_priority_max()  and  sched_get_priority_min()  functions
       shall return the appropriate maximum or minimum, respectively, for  the
       scheduling policy specified by policy.

       The  value  of  policy shall be one of the scheduling policy values de‐
       fined in <sched.h>.

RETURN VALUE
       If  successful,  the  sched_get_priority_max()   and   sched_get_prior‐
       ity_min()  functions  shall  return  the appropriate maximum or minimum
       values, respectively. If unsuccessful, they shall return a value of  -1
       and set errno to indicate the error.

ERRORS
       The  sched_get_priority_max()  and  sched_get_priority_min()  functions
       shall fail if:

       EINVAL The value of the policy parameter does not represent  a  defined
              scheduling policy.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       sched_getparam(), sched_setparam(), sched_getscheduler(),
       sched_rr_get_interval(), sched_setscheduler()

       The Base Definitions volume of POSIX.1‐2017, <sched.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017           SCHED_GET_PRIORITY_MAX(3P)
sched_get_priority_max(2)     System Calls Manual    sched_get_priority_max(2)

NAME
       sched_get_priority_max,  sched_get_priority_min   - get static priority
       range

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <sched.h>

       int sched_get_priority_max(int policy);
       int sched_get_priority_min(int policy);

DESCRIPTION
       sched_get_priority_max() returns the maximum priority value that can be
       used    with   the   scheduling   algorithm   identified   by   policy.
       sched_get_priority_min() returns the minimum priority value that can be
       used  with  the  scheduling  algorithm identified by policy.  Supported
       policy  values  are  SCHED_FIFO,  SCHED_RR,  SCHED_OTHER,  SCHED_BATCH,
       SCHED_IDLE,  and  SCHED_DEADLINE.  Further details about these policies
       can be found in sched(7).

       Processes with numerically higher priority values are scheduled  before
       processes  with numerically lower priority values.  Thus, the value re‐
       turned by sched_get_priority_max() will be greater than the  value  re‐
       turned by sched_get_priority_min().

       Linux  allows  the static priority range 1 to 99 for the SCHED_FIFO and
       SCHED_RR policies, and the  priority  0  for  the  remaining  policies.
       Scheduling priority ranges for the various policies are not alterable.

       The  range  of  scheduling  priorities may vary on other POSIX systems,
       thus it is a good idea for portable applications to use a virtual  pri‐
       ority  range  and  map  it  to  the  interval given by sched_get_prior‐
       ity_max() and sched_get_priority_min() POSIX.1 requires a spread of  at
       least  32 between the maximum and the minimum values for SCHED_FIFO and
       SCHED_RR.

       POSIX systems on which  sched_get_priority_max()  and  sched_get_prior‐
       ity_min()    are   available   define   _POSIX_PRIORITY_SCHEDULING   in
       <unistd.h>.

RETURN VALUE
       On success, sched_get_priority_max() and  sched_get_priority_min()  re‐
       turn  the  maximum/minimum priority value for the named scheduling pol‐
       icy.  On error, -1 is returned, and errno is set to indicate the error.

ERRORS
       EINVAL The argument policy does not identify a defined scheduling  pol‐
              icy.

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

SEE ALSO
       sched_getaffinity(2), sched_getparam(2), sched_getscheduler(2),
       sched_setaffinity(2), sched_setparam(2), sched_setscheduler(2),
       sched(7)

Linux man-pages 6.04              2023-03-30         sched_get_priority_max(2)
