nextafter(3)                                                                             Library Functions Manual                                                                             nextafter(3)

NAME
       nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl - floating-point number manipulation

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double nextafter(double x, double y);
       float nextafterf(float x, float y);
       long double nextafterl(long double x, long double y);

       double nexttoward(double x, long double y);
       float nexttowardf(float x, long double y);
       long double nexttowardl(long double x, long double y);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       nextafter():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
               || _XOPEN_SOURCE >= 500
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

       nextafterf(), nextafterl():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
               || /* Since glibc 2.19: */ _DEFAULT_SOURCE
               || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

       nexttoward(), nexttowardf(), nexttowardl():
           _XOPEN_SOURCE >= 600 || _ISOC99_SOURCE
               || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       The  nextafter(),  nextafterf(), and nextafterl() functions return the next representable floating-point value following x in the direction of y.  If y is less than x, these functions will return
       the largest representable number less than x.

       If x equals y, the functions return y.

       The nexttoward(), nexttowardf(), and nexttowardl() functions do the same as the corresponding nextafter() functions, except that they have a long double second argument.

RETURN VALUE
       On success, these functions return the next representable floating-point value after x in the direction of y.

       If x equals y, then y (cast to the same type as x) is returned.

       If x or y is a NaN, a NaN is returned.

       If x is finite, and the result would overflow, a range error occurs, and the functions return HUGE_VAL, HUGE_VALF, or HUGE_VALL, respectively, with the correct mathematical sign.

       If x is not equal to y, and the correct function result would be subnormal, zero, or underflow, a range error occurs, and either the correct value (if it can be represented), or 0.0, is returned.

ERRORS
       See math_error(7) for information on how to determine whether an error has occurred when calling these functions.

       The following errors can occur:

       Range error: result overflow
              errno is set to ERANGE.  An overflow floating-point exception (FE_OVERFLOW) is raised.

       Range error: result is subnormal or underflows
              errno is set to ERANGE.  An underflow floating-point exception (FE_UNDERFLOW) is raised.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │nextafter(), nextafterf(), nextafterl(), nexttoward(), nexttowardf(), nexttowardl()                                                                                     │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

       This function is defined in IEC 559 (and the appendix with recommended functions in IEEE 754/IEEE 854).

HISTORY
       C99, POSIX.1-2001.

BUGS
       In glibc 2.5 and earlier, these functions do not raise an underflow floating-point (FE_UNDERFLOW) exception when an underflow occurs.

       Before glibc 2.23 these functions did not set errno.

SEE ALSO
       nearbyint(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                    nextafter(3)
NEXTAFTER(3P)                                                                            POSIX Programmer's Manual                                                                           NEXTAFTER(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl — next representable floating-point number

SYNOPSIS
       #include <math.h>

       double nextafter(double x, double y);
       float nextafterf(float x, float y);
       long double nextafterl(long double x, long double y);
       double nexttoward(double x, long double y);
       float nexttowardf(float x, long double y);
       long double nexttowardl(long double x, long double y);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The  nextafter(),  nextafterf(),  and  nextafterl()  functions shall compute the next representable floating-point value following x in the direction of y.  Thus, if y is less than x, nextafter()
       shall return the largest representable floating-point number less than x.  The nextafter(), nextafterf(), and nextafterl() functions shall return y if x equals y.

       The nexttoward(), nexttowardf(), and nexttowardl() functions shall be equivalent to the corresponding nextafter() functions, except that the second parameter shall have type long double  and  the
       functions shall return y converted to the type of the function if x equals y.

       An  application  wishing  to check for error situations should set errno to zero and call feclearexcept(FE_ALL_EXCEPT) before calling these functions. On return, if errno is non-zero or fetestex‐
       cept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW) is non-zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return the next representable floating-point value following x in the direction of y.

       If x==y, y (of the type x) shall be returned.

       If x is finite and the correct function value would overflow, a range error shall occur and ±HUGE_VAL, ±HUGE_VALF, and ±HUGE_VALL (with the same sign as x) shall be returned  as  appropriate  for
       the return type of the function.

       If x or y is NaN, a NaN shall be returned.

       If x!=y and the correct function value is subnormal, zero, or underflows, a range error shall occur, and
       the correct function value (if representable) or
       0.0 shall be returned.

ERRORS
       These functions shall fail if:

       Range Error The correct value overflows.

                   If the integer expression (math_errhandling & MATH_ERRNO) is non-zero, then errno shall be set to [ERANGE].  If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
                   then the overflow floating-point exception shall be raised.

       Range Error The correct value is subnormal or underflows.

                   If the integer expression (math_errhandling & MATH_ERRNO) is non-zero, then errno shall be set to [ERANGE].  If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
                   then the underflow floating-point exception shall be raised.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling & MATH_ERREXCEPT) are independent of each other, but at least one of them must be non-zero.

       When  <tgmath.h> is included, note that the return type of nextafter() depends on the generic typing deduced from both arguments, while the return type of nexttoward() depends only on the generic
       typing of the first argument.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept(), fetestexcept()

       The Base Definitions volume of POSIX.1‐2017, Section 4.20, Treatment of Error Conditions for Mathematical Functions, <math.h>, <tgmath.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                      NEXTAFTER(3P)
