std::uniform_int_distributiLibrarystd::uniform_int_distribution< _IntType >(3)

NAME
       std::uniform_int_distribution< _IntType > - Uniform discrete
       distribution for random numbers. A discrete random distribution on the
       range $[min, max]$ with equal probability throughout the range.

SYNOPSIS
       #include <random>

   Classes
       struct param_type

   Public Types
       typedef _IntType result_type

   Public Member Functions
       uniform_int_distribution ()
           Constructs a uniform distribution object.
       uniform_int_distribution (_IntType __a, _IntType
           __b=__gnu_cxx::__int_traits< _IntType >::__max)
           Constructs a uniform distribution object.
       uniform_int_distribution (const param_type &__p)
       template<typename _ForwardIterator , typename
           _UniformRandomBitGenerator > void __generate (_ForwardIterator __f,
           _ForwardIterator __t, _UniformRandomBitGenerator &__urng)
       template<typename _ForwardIterator , typename
           _UniformRandomBitGenerator > void __generate (_ForwardIterator __f,
           _ForwardIterator __t, _UniformRandomBitGenerator &__urng, const
           param_type &__p)
       template<typename _UniformRandomBitGenerator > void __generate
           (result_type *__f, result_type *__t, _UniformRandomBitGenerator
           &__urng, const param_type &__p)
       result_type a () const
       result_type b () const
       result_type max () const
           Returns the inclusive upper bound of the distribution range.
       result_type min () const
           Returns the inclusive lower bound of the distribution range.
       template<typename _UniformRandomBitGenerator > result_type operator()
           (_UniformRandomBitGenerator &__urng)
           Generating functions.
       template<typename _UniformRandomBitGenerator > result_type operator()
           (_UniformRandomBitGenerator &__urng, const param_type &__p)
       param_type param () const
           Returns the parameter set of the distribution.
       void param (const param_type &__param)
           Sets the parameter set of the distribution.
       void reset ()
           Resets the distribution state.

   Friends
       bool operator== (const uniform_int_distribution &__d1, const
           uniform_int_distribution &__d2)
           Return true if two uniform integer distributions have the same
           parameters.

Detailed Description
   template<typename _IntType = int>
       class std::uniform_int_distribution< _IntType >"Uniform discrete
       distribution for random numbers. A discrete random distribution on the
       range $[min, max]$ with equal probability throughout the range.

       Definition at line 77 of file random.

Member Typedef Documentation
   template<typename _IntType  = int> typedef _IntType
       std::uniform_int_distribution< _IntType >::result_type
       The type of the range of the distribution.

       Definition at line 84 of file random.

Constructor & Destructor Documentation
   template<typename _IntType  = int> std::uniform_int_distribution< _IntType
       >::uniform_int_distribution () [inline]
       Constructs a uniform distribution object.

       Definition at line 125 of file random.

   template<typename _IntType  = int> std::uniform_int_distribution< _IntType
       >::uniform_int_distribution (_IntType __a, _IntType __b =
       __gnu_cxx::__int_traits<_IntType>::__max) [inline],  [explicit]
       Constructs a uniform distribution object.

       Definition at line 131 of file random.

   template<typename _IntType  = int> std::uniform_int_distribution< _IntType
       >::uniform_int_distribution (const param_type & __p) [inline],
       [explicit]
       Definition at line 138 of file random.

Member Function Documentation
   template<typename _IntType  = int> template<typename _ForwardIterator ,
       typename _UniformRandomBitGenerator > void
       std::uniform_int_distribution< _IntType >::__generate (_ForwardIterator
       __f, _ForwardIterator __t, _UniformRandomBitGenerator & __urng)
       [inline]
       Definition at line 203 of file random.

   template<typename _IntType  = int> template<typename _ForwardIterator ,
       typename _UniformRandomBitGenerator > void
       std::uniform_int_distribution< _IntType >::__generate (_ForwardIterator
       __f, _ForwardIterator __t, _UniformRandomBitGenerator & __urng, const
       param_type & __p) [inline]
       Definition at line 210 of file random.

   template<typename _IntType  = int> template<typename
       _UniformRandomBitGenerator > void std::uniform_int_distribution<
       _IntType >::__generate (result_type * __f, result_type * __t,
       _UniformRandomBitGenerator & __urng, const param_type & __p) [inline]
       Definition at line 217 of file random.

   template<typename _IntType  = int> result_type
       std::uniform_int_distribution< _IntType >::a () const [inline]
       Definition at line 151 of file random.

   template<typename _IntType  = int> result_type
       std::uniform_int_distribution< _IntType >::b () const [inline]
       Definition at line 155 of file random.

   template<typename _IntType  = int> result_type
       std::uniform_int_distribution< _IntType >::max () const [inline]
       Returns the inclusive upper bound of the distribution range.

       Definition at line 184 of file random.

   template<typename _IntType  = int> result_type
       std::uniform_int_distribution< _IntType >::min () const [inline]
       Returns the inclusive lower bound of the distribution range.

       Definition at line 177 of file random.

   template<typename _IntType  = int> template<typename
       _UniformRandomBitGenerator > result_type std::uniform_int_distribution<
       _IntType >::operator() (_UniformRandomBitGenerator & __urng) [inline]
       Generating functions.

       Definition at line 192 of file random.

       References std::uniform_int_distribution< _IntType >::operator()().

       Referenced by std::uniform_int_distribution< _IntType >::operator()().

   template<typename _IntType > template<typename _UniformRandomBitGenerator >
       uniform_int_distribution< _IntType >::result_type
       std::uniform_int_distribution< _IntType >::operator()
       (_UniformRandomBitGenerator & __urng, const param_type & __p)
       Definition at line 276 of file random.

   template<typename _IntType  = int> param_type
       std::uniform_int_distribution< _IntType >::param () const [inline]
       Returns the parameter set of the distribution.

       Definition at line 162 of file random.

       Referenced by std::operator>>().

   template<typename _IntType  = int> void std::uniform_int_distribution<
       _IntType >::param (const param_type & __param) [inline]
       Sets the parameter set of the distribution.

       Parameters
           __param The new parameter set of the distribution.

       Definition at line 170 of file random.

   template<typename _IntType  = int> void std::uniform_int_distribution<
       _IntType >::reset () [inline]
       Resets the distribution state. Does nothing for the uniform integer
       distribution.

       Definition at line 148 of file random.

Friends And Related Function Documentation
   template<typename _IntType  = int> bool operator== (const
       uniform_int_distribution< _IntType > & __d1, const
       uniform_int_distribution< _IntType > & __d2) [friend]
       Return true if two uniform integer distributions have the same
       parameters.

       Definition at line 227 of file random.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Westd::uniform_int_distribution< _IntType >(3)
