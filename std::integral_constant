std::integral_constant< _TpLibrary(Functistd::integral_constant< _Tp, __v >(3)

NAME
       std::integral_constant< _Tp, __v > - integral_constant

SYNOPSIS
       Inherited by std::__is_fast_hash< hash< std::basic_string< _CharT > >
       >, std::__is_fast_hash< hash< _Tp > >, std::is_base_of<
       random_access_iterator_tag, __iterator_category_t< _It > >,
       std::__detail::__is_contiguous_iter< _Tp >,
       std::__detail::__is_contiguous_iter< _Tp * >,
       std::__detail::__is_contiguous_iter< __gnu_cxx::__normal_iterator< _Tp
       *, _Cont > >, std::__detail::__variant::_Extra_visit_slot_needed<
       _Maybe_variant_cookie, _Variant >::_Variant_never_valueless< variant<
       _Types... > >, std::__detail::__variant::_Multi_array< _Tp
       >::__untag_result< typename >, std::__detail::__variant::_Multi_array<
       _Tp >::__untag_result< __deduce_visit_result< _Res >(*)(_Args...)>,
       std::__detail::__variant::_Multi_array< _Tp >::__untag_result<
       __variant_cookie(*)(_Args...)>, std::__detail::__variant::_Multi_array<
       _Tp >::__untag_result< __variant_idx_cookie(*)(_Args...)>,
       std::__detail::__variant::_Multi_array< _Tp >::__untag_result< const
       void(*)(_Args...)>, std::__detail::__variant::_Never_valueless_alt<
       std::any >, std::__detail::__variant::_Never_valueless_alt<
       std::function< _Signature > >,
       std::__detail::__variant::_Never_valueless_alt< std::shared_ptr< _Tp >
       >, std::__detail::__variant::_Never_valueless_alt< std::unique_ptr<
       _Tp, _Del > >, std::__detail::__variant::_Never_valueless_alt<
       std::weak_ptr< _Tp > >, std::__has_iec559_behavior< _Trait, _Tp >,
       std::__has_iec559_storage_format< _Tp >,
       std::__is_alloc_insertable_impl< _Alloc, _Tp, _ValueT, typename >,
       std::__is_alloc_insertable_impl< _Alloc, _Tp, _ValueT, __void_t<
       decltype(allocator_traits< _Alloc >::construct(std::declval< _Alloc &
       >(), std::declval< _ValueT * >(), std::declval< _Tp >()))> >,
       std::__is_allocator< _Alloc, typename >, std::__is_allocator< _Alloc,
       __void_t< typename _Alloc::value_type, decltype(std::declval< _Alloc &
       >().allocate(size_t{}))> >, std::__is_bitwise_relocatable<::deque< _Tp
       > >, std::__is_byte_like< _Tp, _Pred >, std::__is_byte_like< byte,
       equal_to< byte > >, std::__is_byte_like< byte, equal_to< void > >,
       std::__is_copy_assignable_impl< _Tp, false >,
       std::__is_copy_insertable< _Alloc >, std::__is_empty_non_tuple< tuple<
       _El0, _El... > >, std::__is_fast_hash< _Hash >, std::__is_fast_hash<
       hash< experimental::string_view > >, std::__is_fast_hash< hash<
       experimental::u16string_view > >, std::__is_fast_hash< hash<
       experimental::u32string_view > >, std::__is_fast_hash< hash<
       experimental::wstring_view > >, std::__is_fast_hash< hash< long double
       > >, std::__is_fast_hash< hash< string > >, std::__is_fast_hash< hash<
       string_view > >, std::__is_fast_hash< hash< u16string > >,
       std::__is_fast_hash< hash< u16string_view > >, std::__is_fast_hash<
       hash< u32string > >, std::__is_fast_hash< hash< u32string_view > >,
       std::__is_fast_hash< hash< variant< _Types... > > >,
       std::__is_fast_hash< hash< wstring > >, std::__is_fast_hash< hash<
       wstring_view > >, std::__is_location_invariant<
       __future_base::_State_base::_Setter< _Res, _Arg > >,
       std::__is_location_invariant< __future_base::_Task_setter< _Res_ptr,
       _Fn, _Res > >, std::__is_member_function_pointer_helper< typename >,
       std::__is_member_object_pointer_helper< typename >,
       std::__is_move_assignable_impl< _Tp, false >,
       std::__is_move_insertable< _Alloc >, std::__is_nt_copy_assignable_impl<
       _Tp, false >, std::__is_nt_move_assignable_impl< _Tp, false >,
       std::__is_null_pointer_helper< typename >,
       std::__is_null_pointer_helper< std::nullptr_t >,
       std::__is_pointer_helper< typename >, std::__is_pointer_helper< _Tp *
       >, std::__is_trivially_copy_assignable_impl< _Tp, false >,
       std::__is_trivially_copy_constructible_impl< _Tp, false >,
       std::__is_trivially_move_assignable_impl< _Tp, false >,
       std::__is_trivially_move_constructible_impl< _Tp, false >,
       std::__is_tuple_like_impl< array< _Tp, _Nm > >,
       std::__is_tuple_like_impl< pair< _T1, _T2 > >,
       std::__is_tuple_like_impl< tuple< _Tps... > >,
       std::__parse_int::_Number< _Base, _Digs >, std::__parse_int::_Number<
       _Base >, std::__parse_int::_Parse_int< _Digs >,
       std::__parse_int::_Parse_int< '0', 'B', _Digs... >,
       std::__parse_int::_Parse_int< '0', 'X', _Digs... >,
       std::__parse_int::_Parse_int< '0', 'b', _Digs... >,
       std::__parse_int::_Parse_int< '0', 'x', _Digs... >,
       std::__parse_int::_Parse_int< '0', _Digs... >,
       std::__parse_int::_Power< _Base, _Digs >, std::__parse_int::_Power<
       _Base >, std::__sp_compatible_with< _Yp_ptr, _Tp_ptr >,
       std::__sp_compatible_with< _Up(*)[_Nm], _Up(*)[]>,
       std::__sp_compatible_with< _Up(*)[_Nm], const _Up(*)[]>,
       std::__sp_compatible_with< _Up(*)[_Nm], const volatile _Up(*)[]>,
       std::__sp_compatible_with< _Up(*)[_Nm], volatile _Up(*)[]>,
       std::__sp_is_constructible_arr< _Up, _Yp, typename >,
       std::__sp_is_constructible_arrN< _Up, _Nm, _Yp, typename >,
       std::__value_exists_impl< _Trait, _Tp, typename >,
       std::__value_exists_impl< _Trait, _Tp, void_t< decltype(_Trait< _Tp
       >::value)> >, std::chrono::is_clock< _Tp >, std::chrono::is_clock< _Tp
       >, std::chrono::is_clock< file_clock >, std::chrono::is_clock<
       gps_clock >, std::chrono::is_clock< steady_clock >,
       std::chrono::is_clock< system_clock >, std::chrono::is_clock< tai_clock
       >, std::chrono::is_clock< utc_clock >,
       std::experimental::fundamentals_v2::__make_array_elem< void, _Types...
       >::__is_reference_wrapper< typename >,
       std::experimental::fundamentals_v2::__make_array_elem< void, _Types...
       >::__is_reference_wrapper< reference_wrapper< _Up > >,
       std::has_unique_object_representations< _Tp >, std::is_aggregate< _Tp
       >, std::is_array< typename >, std::is_array< _Tp[]>, std::is_array<
       _Tp[_Size]>, std::is_bind_expression< _Tp >, std::is_bind_expression<
       _Bind< _Signature > >, std::is_bind_expression< _Bind_result< _Result,
       _Signature > >, std::is_bind_expression< const _Bind< _Signature > >,
       std::is_bind_expression< const _Bind_result< _Result, _Signature > >,
       std::is_bind_expression< const volatile _Bind< _Signature > >,
       std::is_bind_expression< const volatile _Bind_result< _Result,
       _Signature > >, std::is_bind_expression< volatile _Bind< _Signature >
       >, std::is_bind_expression< volatile _Bind_result< _Result, _Signature
       > >, std::is_const< typename >, std::is_const< _Tp const >,
       std::is_error_code_enum< _Tp >, std::is_error_code_enum< future_errc >,
       std::is_error_code_enum< io_errc >, std::is_error_condition_enum< _Tp
       >, std::is_error_condition_enum< errc >, std::is_function< _Tp & >,
       std::is_function< _Tp && >, std::is_layout_compatible< _Tp, _Up >,
       std::is_lvalue_reference< typename >, std::is_lvalue_reference< _Tp &
       >, std::is_member_function_pointer< _Tp >,
       std::is_member_object_pointer< _Tp >, std::is_null_pointer< _Tp >,
       std::is_pointer< _Tp >, std::is_pointer_interconvertible_base_of<
       _Base, _Derived >, std::is_rvalue_reference< typename >,
       std::is_rvalue_reference< _Tp && >, std::is_same< _Tp, _Up >,
       std::is_same< _Tp, _Tp >, std::is_volatile< typename >,
       std::is_volatile< _Tp volatile >, std::uses_allocator< promise< _Res >,
       _Alloc >, and std::uses_allocator< tuple< _Types... >, _Alloc >.

   Public Types
       typedef integral_constant< _Tp, __v > type
       typedef _Tp value_type

   Public Member Functions
       constexpr operator value_type () const noexcept
       constexpr value_type operator() () const noexcept

   Static Public Attributes
       static constexpr _Tp value

Detailed Description
   template<typename _Tp, _Tp __v>
       struct std::integral_constant< _Tp, __v >"integral_constant

       Definition at line 62 of file type_traits.

Member Typedef Documentation
   template<typename _Tp , _Tp __v> typedef integral_constant<_Tp, __v>
       std::integral_constant< _Tp, __v >::type
       Definition at line 66 of file type_traits.

   template<typename _Tp , _Tp __v> typedef _Tp std::integral_constant< _Tp,
       __v >::value_type
       Definition at line 65 of file type_traits.

Member Function Documentation
   template<typename _Tp , _Tp __v> constexpr std::integral_constant< _Tp, __v
       >::operator value_type () const [inline],  [constexpr],  [noexcept]
       Definition at line 67 of file type_traits.

   template<typename _Tp , _Tp __v> constexpr value_type
       std::integral_constant< _Tp, __v >::operator() () const [inline],
       [constexpr],  [noexcept]
       Definition at line 72 of file type_traits.

Member Data Documentation
   template<typename _Tp , _Tp __v> constexpr _Tp std::integral_constant< _Tp,
       __v >::value [static],  [constexpr]
       Definition at line 64 of file type_traits.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1std::integral_constant< _Tp, __v >(3)
