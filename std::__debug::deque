std::__debug::deque< _Tp, _LibraryoFustd::__debug::deque< _Tp, _Allocator >(3)

NAME
       std::__debug::deque< _Tp, _Allocator > - Class std::deque with
       safety/checking/debug instrumentation.

SYNOPSIS
       Inherits __gnu_debug::_Safe_container< _SafeContainer, _Alloc,
       _SafeBase, _IsCxx11AllocatorAware >, and deque< _Tp, std::allocator<
       _Tp > >.

   Public Types
       typedef _Allocator allocator_type
       typedef __gnu_debug::_Safe_iterator< _Base_const_iterator, deque >
           const_iterator
       typedef _Base::const_pointer const_pointer
       typedef _Base::const_reference const_reference
       typedef std::reverse_iterator< const_iterator > const_reverse_iterator
       typedef _Base::difference_type difference_type
       typedef __gnu_debug::_Safe_iterator< _Base_iterator, deque > iterator
       typedef _Base::pointer pointer
       typedef _Base::reference reference
       typedef std::reverse_iterator< iterator > reverse_iterator
       typedef _Base::size_type size_type
       typedef _Tp value_type

   Public Member Functions
       deque (_Base_ref __x)
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> deque (_InputIterator
           __first, _InputIterator __last, const _Allocator &__a=_Allocator())
       deque (const _Allocator &__a)
       deque (const deque &)=default
       deque (const deque &__d, const __type_identity_t< _Allocator > &__a)
       deque (deque &&)=default
       deque (deque &&__d, const __type_identity_t< _Allocator > &__a)
       deque (initializer_list< value_type > __l, const allocator_type
           &__a=allocator_type())
       deque (size_type __n, const __type_identity_t< _Tp > &__value, const
           _Allocator &__a=_Allocator())
       deque (size_type __n, const _Allocator &__a=_Allocator())
       const _Base & _M_base () const noexcept
       _Base & _M_base () noexcept
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> void assign (_InputIterator
           __first, _InputIterator __last)
       void assign (initializer_list< value_type > __l)
       void assign (size_type __n, const _Tp &__t)
       const_reference back () const noexcept
       reference back () noexcept
       const_iterator begin () const noexcept
       iterator begin () noexcept
       const_iterator cbegin () const noexcept
       const_iterator cend () const noexcept
       void clear () noexcept
       const_reverse_iterator crbegin () const noexcept
       const_reverse_iterator crend () const noexcept
       template<typename... _Args> iterator emplace (const_iterator
           __position, _Args &&... __args)
       template<typename... _Args> reference emplace_back (_Args &&... __args)
       template<typename... _Args> reference emplace_front (_Args &&...
           __args)
       const_iterator end () const noexcept
       iterator end () noexcept
       iterator erase (const_iterator __first, const_iterator __last)
       iterator erase (const_iterator __position)
       const_reference front () const noexcept
       reference front () noexcept
       template<class _InputIterator , typename  =
           std::_RequireInputIter<_InputIterator>> iterator insert
           (const_iterator __position, _InputIterator __first, _InputIterator
           __last)
       iterator insert (const_iterator __position, _Tp &&__x)
       iterator insert (const_iterator __position, const _Tp &__x)
       iterator insert (const_iterator __position, initializer_list<
           value_type > __l)
       iterator insert (const_iterator __position, size_type __n, const _Tp
           &__x)
       deque & operator= (const deque &)=default
       deque & operator= (deque &&)=default
       deque & operator= (initializer_list< value_type > __l)
       const_reference operator[] (size_type __n) const noexcept
       reference operator[] (size_type __n) noexcept
       void pop_back () noexcept
       void pop_front () noexcept
       void push_back (_Tp &&__x)
       void push_back (const _Tp &__x)
       void push_front (_Tp &&__x)
       void push_front (const _Tp &__x)
       const_reverse_iterator rbegin () const noexcept
       reverse_iterator rbegin () noexcept
       const_reverse_iterator rend () const noexcept
       reverse_iterator rend () noexcept
       void resize (size_type __sz)
       void resize (size_type __sz, const _Tp &__c)
       void shrink_to_fit () noexcept
       void swap (deque &__x) noexcept(/*conditional */)

   Protected Member Functions
       void _M_swap (_Safe_container &__x) noexcept

   Friends
       template<typename _ItT , typename _SeqT , typename _CatT > class
           ::__gnu_debug::_Safe_iterator

Detailed Description
   template<typename _Tp, typename _Allocator = std::allocator<_Tp>>
       class std::__debug::deque< _Tp, _Allocator >"Class std::deque with
       safety/checking/debug instrumentation.

       Definition at line 50 of file debug/deque.

Member Typedef Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Allocator std::__debug::deque< _Tp, _Allocator >::allocator_type
       Definition at line 90 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator<_Base_const_iterator, deque>
       std::__debug::deque< _Tp, _Allocator >::const_iterator
       Definition at line 84 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_pointer std::__debug::deque< _Tp, _Allocator
       >::const_pointer
       Definition at line 92 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::const_reference std::__debug::deque< _Tp, _Allocator
       >::const_reference
       Definition at line 79 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<const_iterator> std::__debug::deque< _Tp,
       _Allocator >::const_reverse_iterator
       Definition at line 94 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::difference_type std::__debug::deque< _Tp, _Allocator
       >::difference_type
       Definition at line 87 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       __gnu_debug::_Safe_iterator<_Base_iterator, deque> std::__debug::deque<
       _Tp, _Allocator >::iterator
       Definition at line 82 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::pointer std::__debug::deque< _Tp, _Allocator >::pointer
       Definition at line 91 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::reference std::__debug::deque< _Tp, _Allocator >::reference
       Definition at line 78 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       std::reverse_iterator<iterator> std::__debug::deque< _Tp, _Allocator
       >::reverse_iterator
       Definition at line 93 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Base::size_type std::__debug::deque< _Tp, _Allocator >::size_type
       Definition at line 86 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> typedef
       _Tp std::__debug::deque< _Tp, _Allocator >::value_type
       Definition at line 89 of file debug/deque.

Constructor & Destructor Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (const deque< _Tp,
       _Allocator > & __d, const __type_identity_t< _Allocator > & __a)
       [inline]
       Definition at line 111 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (deque< _Tp, _Allocator >
       && __d, const __type_identity_t< _Allocator > & __a) [inline]
       Definition at line 114 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (initializer_list<
       value_type > __l, const allocator_type & __a = allocator_type())
       [inline]
       Definition at line 117 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (const _Allocator & __a)
       [inline],  [explicit]
       Definition at line 125 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (size_type __n, const
       _Allocator & __a = _Allocator()) [inline],  [explicit]
       Definition at line 130 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (size_type __n, const
       __type_identity_t< _Tp > & __value, const _Allocator & __a =
       _Allocator()) [inline]
       Definition at line 133 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> std::__debug::deque< _Tp,
       _Allocator >::deque (_InputIterator __first, _InputIterator __last,
       const _Allocator & __a = _Allocator()) [inline]
       Definition at line 149 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       std::__debug::deque< _Tp, _Allocator >::deque (_Base_ref __x) [inline]
       Definition at line 156 of file debug/deque.

Member Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> const
       _Base & std::__debug::deque< _Tp, _Allocator >::_M_base () const
       [inline],  [noexcept]
       Definition at line 652 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> _Base &
       std::__debug::deque< _Tp, _Allocator >::_M_base () [inline],
       [noexcept]
       Definition at line 649 of file debug/deque.

   template<typename _SafeContainer , typename _Alloc , template< typename >
       class _SafeBase, bool _IsCxx11AllocatorAware = true> void
       __gnu_debug::_Safe_container< _SafeContainer, _Alloc, _SafeBase,
       _IsCxx11AllocatorAware >::_M_swap (_Safe_container< _SafeContainer,
       _Alloc, _SafeBase, _IsCxx11AllocatorAware > & __x) [inline],
       [protected],  [noexcept],  [inherited]
       Definition at line 117 of file safe_container.h.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> void std::__debug::deque< _Tp,
       _Allocator >::assign (_InputIterator __first, _InputIterator __last)
       [inline]
       Definition at line 182 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::assign (initializer_list<
       value_type > __l) [inline]
       Definition at line 204 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::assign (size_type __n, const
       _Tp & __t) [inline]
       Definition at line 196 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::deque< _Tp, _Allocator >::back () const
       [inline],  [noexcept]
       Definition at line 386 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::deque< _Tp, _Allocator >::back () [inline],
       [noexcept]
       Definition at line 378 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::deque< _Tp, _Allocator >::begin () const
       [inline],  [noexcept]
       Definition at line 221 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::begin () [inline],
       [noexcept]
       Definition at line 216 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::deque< _Tp, _Allocator >::cbegin () const
       [inline],  [noexcept]
       Definition at line 257 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::deque< _Tp, _Allocator >::cend () const
       [inline],  [noexcept]
       Definition at line 262 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::clear () [inline],  [noexcept]
       Definition at line 642 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::deque< _Tp, _Allocator >::crbegin
       () const [inline],  [noexcept]
       Definition at line 267 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::deque< _Tp, _Allocator >::crend ()
       const [inline],  [noexcept]
       Definition at line 272 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> iterator std::__debug::deque< _Tp,
       _Allocator >::emplace (const_iterator __position, _Args &&... __args)
       [inline]
       Definition at line 448 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> reference std::__debug::deque< _Tp,
       _Allocator >::emplace_back (_Args &&... __args) [inline]
       Definition at line 437 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename... _Args> reference std::__debug::deque< _Tp,
       _Allocator >::emplace_front (_Args &&... __args) [inline]
       Definition at line 422 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_iterator std::__debug::deque< _Tp, _Allocator >::end () const
       [inline],  [noexcept]
       Definition at line 231 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::end () [inline],
       [noexcept]
       Definition at line 226 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::erase (const_iterator
       __first, const_iterator __last) [inline]
       Definition at line 589 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::erase (const_iterator
       __position) [inline]
       Definition at line 563 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::deque< _Tp, _Allocator >::front () const
       [inline],  [noexcept]
       Definition at line 370 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::deque< _Tp, _Allocator >::front () [inline],
       [noexcept]
       Definition at line 362 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<class _InputIterator , typename  =
       std::_RequireInputIter<_InputIterator>> iterator std::__debug::deque<
       _Tp, _Allocator >::insert (const_iterator __position, _InputIterator
       __first, _InputIterator __last) [inline]
       Definition at line 509 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::insert (const_iterator
       __position, _Tp && __x) [inline]
       Definition at line 473 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::insert (const_iterator
       __position, const _Tp & __x) [inline]
       Definition at line 460 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::insert (const_iterator
       __position, initializer_list< value_type > __l) [inline]
       Definition at line 477 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       iterator std::__debug::deque< _Tp, _Allocator >::insert (const_iterator
       __position, size_type __n, const _Tp & __x) [inline]
       Definition at line 488 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> deque &
       std::__debug::deque< _Tp, _Allocator >::operator= (initializer_list<
       value_type > __l) [inline]
       Definition at line 167 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reference std::__debug::deque< _Tp, _Allocator >::operator[]
       (size_type __n) const [inline],  [noexcept]
       Definition at line 352 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reference std::__debug::deque< _Tp, _Allocator >::operator[] (size_type
       __n) [inline],  [noexcept]
       Definition at line 344 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::pop_back () [inline],
       [noexcept]
       Definition at line 554 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::pop_front () [inline],
       [noexcept]
       Definition at line 546 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::push_back (_Tp && __x) [inline]
       Definition at line 413 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::push_back (const _Tp & __x)
       [inline]
       Definition at line 401 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::push_front (_Tp && __x)
       [inline]
       Definition at line 409 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::push_front (const _Tp & __x)
       [inline]
       Definition at line 394 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::deque< _Tp, _Allocator >::rbegin
       () const [inline],  [noexcept]
       Definition at line 241 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::deque< _Tp, _Allocator >::rbegin ()
       [inline],  [noexcept]
       Definition at line 236 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       const_reverse_iterator std::__debug::deque< _Tp, _Allocator >::rend ()
       const [inline],  [noexcept]
       Definition at line 251 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       reverse_iterator std::__debug::deque< _Tp, _Allocator >::rend ()
       [inline],  [noexcept]
       Definition at line 246 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::resize (size_type __sz)
       [inline]
       Definition at line 291 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::resize (size_type __sz, const
       _Tp & __c) [inline]
       Definition at line 304 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::shrink_to_fit () [inline],
       [noexcept]
       Definition at line 332 of file debug/deque.

   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>> void
       std::__debug::deque< _Tp, _Allocator >::swap (deque< _Tp, _Allocator >
       & __x) [inline],  [noexcept]
       Definition at line 634 of file debug/deque.

Friends And Related Function Documentation
   template<typename _Tp , typename _Allocator  = std::allocator<_Tp>>
       template<typename _ItT , typename _SeqT , typename _CatT > friend class
       ::__gnu_debug::_Safe_iterator [friend]
       Definition at line 65 of file debug/deque.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Fstd::__debug::deque< _Tp, _Allocator >(3)
