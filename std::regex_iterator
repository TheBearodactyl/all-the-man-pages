std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >(3)                                 Library Functions Manual                                 std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >(3)

NAME
       std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >

SYNOPSIS
       #include <regex>

   Public Types
       typedef std::ptrdiff_t difference_type
       typedef std::forward_iterator_tag iterator_category
       typedef const value_type * pointer
       typedef const value_type & reference
       typedef basic_regex< _Ch_type, _Rx_traits > regex_type
       typedef match_results< _Bi_iter > value_type

   Public Member Functions
       regex_iterator ()=default
           Provides a singular iterator, useful for indicating one-past-the-end of a range.
       regex_iterator (_Bi_iter __a, _Bi_iter __b, const regex_type &__re, regex_constants::match_flag_type __m=regex_constants::match_default)
       regex_iterator (_Bi_iter, _Bi_iter, const regex_type &&, regex_constants::match_flag_type=regex_constants::match_default)=delete
       regex_iterator (const regex_iterator &)=default
           Copy constructs a regex_iterator.
       const value_type & operator* () const noexcept
           Dereferences a regex_iterator.
       regex_iterator & operator++ ()
           Increments a regex_iterator.
       regex_iterator operator++ (int)
           Postincrements a regex_iterator.
       const value_type * operator-> () const noexcept
           Selects a regex_iterator member.
       regex_iterator & operator= (const regex_iterator &)=default
           Copy assigns one regex_iterator to another.
       bool operator== (const regex_iterator &) const noexcept
           Tests the equivalence of two regex iterators.
       bool operator== (default_sentinel_t) const noexcept

Detailed Description
   template<typename _Bi_iter, typename _Ch_type = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits = regex_traits<_Ch_type>>
       class std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >"An iterator adaptor that will provide repeated calls of regex_search over a range until no more matches remain.

       Definition at line 2673 of file regex.

Member Typedef Documentation
   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef std::ptrdiff_t std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::difference_type
       Definition at line 2678 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef std::forward_iterator_tag std::regex_iterator<
       _Bi_iter, _Ch_type, _Rx_traits >::iterator_category
       Definition at line 2681 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef const value_type* std::regex_iterator<
       _Bi_iter, _Ch_type, _Rx_traits >::pointer
       Definition at line 2679 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef const value_type& std::regex_iterator<
       _Bi_iter, _Ch_type, _Rx_traits >::reference
       Definition at line 2680 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef basic_regex<_Ch_type, _Rx_traits>
       std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >::regex_type
       Definition at line 2676 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> typedef match_results<_Bi_iter> std::regex_iterator<
       _Bi_iter, _Ch_type, _Rx_traits >::value_type
       Definition at line 2677 of file regex.

Constructor & Destructor Documentation
   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits
       >::regex_iterator () [default]
       Provides a singular iterator, useful for indicating one-past-the-end of a range.

       Referenced by std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >::regex_iterator().

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits
       >::regex_iterator (_Bi_iter __a, _Bi_iter __b, const regex_type & __re, regex_constants::match_flag_type __m = regex_constants::match_default) [inline]
       Constructs a regex_iterator...

       Parameters
           __a [IN] The start of a text range to search.
           __b [IN] One-past-the-end of the text range to search.
           __re [IN] The regular expression to match.
           __m [IN] Policy flags for match rules.

       Definition at line 2696 of file regex.

       References std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >::regex_iterator(), and std::regex_search().

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits
       >::regex_iterator (const regex_iterator< _Bi_iter, _Ch_type, _Rx_traits > &) [default]
       Copy constructs a regex_iterator.

Member Function Documentation
   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> const value_type & std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::operator* () const [inline],  [noexcept]
       Dereferences a regex_iterator.

       Definition at line 2746 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> regex_iterator & std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::operator++ ()
       Increments a regex_iterator.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> regex_iterator std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::operator++ (int) [inline]
       Postincrements a regex_iterator.

       Definition at line 2766 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> const value_type * std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::operator-> () const [inline],  [noexcept]
       Selects a regex_iterator member.

       Definition at line 2753 of file regex.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> regex_iterator & std::regex_iterator< _Bi_iter,
       _Ch_type, _Rx_traits >::operator= (const regex_iterator< _Bi_iter, _Ch_type, _Rx_traits > &) [default]
       Copy assigns one regex_iterator to another.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> bool std::regex_iterator< _Bi_iter, _Ch_type,
       _Rx_traits >::operator== (const regex_iterator< _Bi_iter, _Ch_type, _Rx_traits > &) const [noexcept]
       Tests the equivalence of two regex iterators.

   template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> bool std::regex_iterator< _Bi_iter, _Ch_type,
       _Rx_traits >::operator== (default_sentinel_t) const [inline],  [noexcept]
       Definition at line 2729 of file regex.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                      std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >(3)
