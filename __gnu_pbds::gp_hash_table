__gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Re__gnu_pbds::gp_hash_table<nKey, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >(3)

NAME
       __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >

SYNOPSIS
       #include <assoc_container.hpp>

       Inherits __gnu_pbds::basic_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Resize_Policy, Store_Hash, Tag, Policy_Tl, _Alloc >.

   Public Types
       typedef Comb_Probe_Fn comb_probe_fn
       typedef gp_hash_tag container_category
       typedef Eq_Fn eq_fn
       typedef Hash_Fn hash_fn
       typedef Probe_Fn probe_fn
       typedef Resize_Policy resize_policy

   Public Member Functions
       gp_hash_table ()
           Default constructor.
       gp_hash_table (const gp_hash_table &other)
       gp_hash_table (const hash_fn &h)
           Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object.
       gp_hash_table (const hash_fn &h, const eq_fn &e)
           Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, and r_eq_fn will be copied by the eq_fn object of the container object.
       gp_hash_table (const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp)
           Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, and
           r_comb_probe_fn will be copied by the comb_probe_fn object of the container object.
       gp_hash_table (const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp, const probe_fn &p)
           Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object,
           r_comb_probe_fn will be copied by the comb_probe_fn object of the container object, and r_probe_fn will be copied by the probe_fn object of the container object.
       gp_hash_table (const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp, const probe_fn &p, const resize_policy &rp)
           Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object,
           r_comb_probe_fn will be copied by the comb_probe_fn object of the container object, r_probe_fn will be copied by the probe_fn object of the container object, and r_resize_policy will be
           copied by the Resize_Policy object of the container object.
       template<typename It > gp_hash_table (It first, It last)
           Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object.
       template<typename It > gp_hash_table (It first, It last, const hash_fn &h)
           Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be
           copied by the hash_fn object of the container object.
       template<typename It > gp_hash_table (It first, It last, const hash_fn &h, const eq_fn &e)
           Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be
           copied by the hash_fn object of the container object, and r_eq_fn will be copied by the eq_fn object of the container object.
       template<typename It > gp_hash_table (It first, It last, const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp)
           Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be
           copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, and r_comb_probe_fn will be copied by the comb_probe_fn object of the
           container object.
       template<typename It > gp_hash_table (It first, It last, const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp, const probe_fn &p)
           Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be
           copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn will be copied by the comb_probe_fn object of the
           container object, and r_probe_fn will be copied by the probe_fn object of the container object.
       template<typename It > gp_hash_table (It first, It last, const hash_fn &h, const eq_fn &e, const comb_probe_fn &cp, const probe_fn &p, const resize_policy &rp)
           Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be
           copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn will be copied by the comb_probe_fn object of the
           container object, r_probe_fn will be copied by the probe_fn object of the container object, and r_resize_policy will be copied by the resize_policy object of the container object.
       gp_hash_table & operator= (const gp_hash_table &other)
       void swap (gp_hash_table &other)

Detailed Description
   template<typename Key, typename Mapped, typename Hash_Fn = typename detail::default_hash_fn<Key>::type, typename Eq_Fn = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn =
       detail::default_comb_hash_fn::type, typename Probe_Fn = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc = std::allocator<char>>
       class __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >"A general-probing hash-based associative container.

       Template Parameters
           Key Key type.
           Mapped Map type.
           Hash_Fn Hashing functor.
           Eq_Fn Equal functor.
           Comb_Probe_Fn Combining probe functor. If Hash_Fn is not null_type, then this is the ranged-probe functor; otherwise, this is the range-hashing functor. XXX See Design::Hash-Based
           Containers::Hash Policies.
           Probe_Fn Probe functor.
           Resize_Policy Resizes hash.
           Store_Hash Indicates whether the hash value will be stored along with each key. If Hash_Fn is null_type, then the container will not compile if this value is true
           _Alloc Allocator type.

       Base tag choices are: gp_hash_tag.

       Base is basic_hash_table.

       Definition at line 368 of file assoc_container.hpp.

Member Typedef Documentation
   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef Comb_Probe_Fn __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::comb_probe_fn
       Definition at line 377 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef gp_hash_tag __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::container_category
       Definition at line 374 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef Eq_Fn __gnu_pbds::gp_hash_table< Key, Mapped,
       Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::eq_fn
       Definition at line 376 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef Hash_Fn __gnu_pbds::gp_hash_table< Key, Mapped,
       Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::hash_fn
       Definition at line 375 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef Probe_Fn __gnu_pbds::gp_hash_table< Key, Mapped,
       Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::probe_fn
       Definition at line 378 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> typedef Resize_Policy __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::resize_policy
       Definition at line 379 of file assoc_container.hpp.

Constructor & Destructor Documentation
   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table () [inline]
       Default constructor.

       Definition at line 382 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const hash_fn & h) [inline]
       Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object.

       Definition at line 386 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const hash_fn & h, const eq_fn & e) [inline]
       Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, and r_eq_fn will be copied by the eq_fn object of the container object.

       Definition at line 393 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp) [inline]
       Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, and
       r_comb_probe_fn will be copied by the comb_probe_fn object of the container object.

       Definition at line 401 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp, const probe_fn & p) [inline]
       Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn
       will be copied by the comb_probe_fn object of the container object, and r_probe_fn will be copied by the probe_fn object of the container object.

       Definition at line 410 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp, const probe_fn & p, const resize_policy & rp) [inline]
       Constructor taking some policy objects. r_hash_fn will be copied by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn
       will be copied by the comb_probe_fn object of the container object, r_probe_fn will be copied by the probe_fn object of the container object, and r_resize_policy will be copied by the
       Resize_Policy object of the container object.

       Definition at line 422 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last) [inline]
       Constructor taking __iterators to a range of value_types. The value_types between first_it and last_it will be inserted into the container object.

       Definition at line 430 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last, const hash_fn & h) [inline]
       Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be copied
       by the hash_fn object of the container object.

       Definition at line 438 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last, const hash_fn & h, const eq_fn & e) [inline]
       Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be copied
       by the hash_fn object of the container object, and r_eq_fn will be copied by the eq_fn object of the container object.

       Definition at line 449 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last, const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp) [inline]
       Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be copied
       by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, and r_comb_probe_fn will be copied by the comb_probe_fn object of the container
       object.

       Definition at line 461 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last, const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp, const
       probe_fn & p) [inline]
       Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be copied
       by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn will be copied by the comb_probe_fn object of the container
       object, and r_probe_fn will be copied by the probe_fn object of the container object.

       Definition at line 475 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> template<typename It > __gnu_pbds::gp_hash_table< Key,
       Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (It first, It last, const hash_fn & h, const eq_fn & e, const comb_probe_fn & cp, const
       probe_fn & p, const resize_policy & rp) [inline]
       Constructor taking __iterators to a range of value_types and some policy objects. The value_types between first_it and last_it will be inserted into the container object. r_hash_fn will be copied
       by the hash_fn object of the container object, r_eq_fn will be copied by the eq_fn object of the container object, r_comb_probe_fn will be copied by the comb_probe_fn object of the container
       object, r_probe_fn will be copied by the probe_fn object of the container object, and r_resize_policy will be copied by the resize_policy object of the container object.

       Definition at line 491 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn,
       Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::gp_hash_table (const gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc > &
       other) [inline]
       Definition at line 497 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> virtual __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn,
       Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::~gp_hash_table () [inline],  [virtual]
       Definition at line 502 of file assoc_container.hpp.

Member Function Documentation
   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> gp_hash_table & __gnu_pbds::gp_hash_table< Key, Mapped,
       Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::operator= (const gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash,
       _Alloc > & other) [inline]
       Definition at line 505 of file assoc_container.hpp.

   template<typename Key , typename Mapped , typename Hash_Fn  = typename detail::default_hash_fn<Key>::type, typename Eq_Fn  = typename detail::default_eq_fn<Key>::type, typename Comb_Probe_Fn  =
       detail::default_comb_hash_fn::type, typename Probe_Fn  = typename detail::default_probe_fn<Comb_Probe_Fn>::type, typename Resize_Policy  = typename
       detail::default_resize_policy<Comb_Probe_Fn>::type, bool Store_Hash = detail::default_store_hash, typename _Alloc  = std::allocator<char>> void __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn,
       Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >::swap (gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc > & other)
       [inline]
       Definition at line 516 of file assoc_container.hpp.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                          __gnu_pbds::gp_hash_table< Key, Mapped, Hash_Fn, Eq_Fn, Comb_Probe_Fn, Probe_Fn, Resize_Policy, Store_Hash, _Alloc >(3)
