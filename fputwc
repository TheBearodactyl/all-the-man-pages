fputwc(3)                                                                                Library Functions Manual                                                                                fputwc(3)

NAME
       fputwc, putwc - write a wide character to a FILE stream

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>
       #include <wchar.h>

       wint_t fputwc(wchar_t wc, FILE *stream);
       wint_t putwc(wchar_t wc, FILE *stream);

DESCRIPTION
       The fputwc() function is the wide-character equivalent of the fputc(3) function.  It writes the wide character wc to stream.  If ferror(stream) becomes true, it returns WEOF.  If a wide-character
       conversion error occurs, it sets errno to EILSEQ and returns WEOF.  Otherwise, it returns wc.

       The putwc() function or macro functions identically to fputwc().  It may be implemented as a macro, and may evaluate its argument more than once.  There is no reason ever to use it.

       For nonlocking counterparts, see unlocked_stdio(3).

RETURN VALUE
       On success, fputwc() function returns wc.  Otherwise, WEOF is returned, and errno is set to indicate the error.

ERRORS
       Apart from the usual ones, there is

       EILSEQ Conversion of wc to the stream's encoding fails.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fputwc(), putwc()                                                                                                                                                       │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       C99, POSIX.1-2001.

NOTES
       The behavior of fputwc() depends on the LC_CTYPE category of the current locale.

       In the absence of additional information passed to the fopen(3) call, it is reasonable to expect that fputwc() will actually write the multibyte sequence corresponding to the wide character wc.

SEE ALSO
       fgetwc(3), fputws(3), unlocked_stdio(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       fputwc(3)
FPUTWC(3P)                                                                               POSIX Programmer's Manual                                                                              FPUTWC(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       fputwc — put a wide-character code on a stream

SYNOPSIS
       #include <stdio.h>
       #include <wchar.h>

       wint_t fputwc(wchar_t wc, FILE *stream);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The  fputwc()  function  shall write the character corresponding to the wide-character code wc to the output stream pointed to by stream, at the position indicated by the associated file-position
       indicator for the stream (if defined), and advances the indicator appropriately. If the file cannot support positioning requests, or if the stream was opened with append mode,  the  character  is
       appended to the output stream. If an error occurs while writing the character, the shift state of the output file is left in an undefined state.

       The  last data modification and last file status change timestamps of the file shall be marked for update between the successful execution of fputwc() and the next successful completion of a call
       to fflush() or fclose() on the same stream or a call to exit() or abort().

       The fputwc() function shall not change the setting of errno if successful.

RETURN VALUE
       Upon successful completion, fputwc() shall return wc.  Otherwise, it shall return WEOF, the error indicator for the stream shall be set, and errno shall be set to indicate the error.

ERRORS
       The fputwc() function shall fail if either the stream is unbuffered or data in the stream's buffer needs to be written, and:

       EAGAIN The O_NONBLOCK flag is set for the file descriptor underlying stream and the thread would be delayed in the write operation.

       EBADF  The file descriptor underlying stream is not a valid file descriptor open for writing.

       EFBIG  An attempt was made to write to a file that exceeds the maximum file size or the file size limit of the process.

       EFBIG  The file is a regular file and an attempt was made to write at or beyond the offset maximum associated with the corresponding stream.

       EILSEQ The wide-character code wc does not correspond to a valid character.

       EINTR  The write operation was terminated due to the receipt of a signal, and no data was transferred.

       EIO    A physical I/O error has occurred, or the process is a member of a background process group attempting to write to its controlling terminal, TOSTOP is set, the calling thread is not block‐
              ing SIGTTOU, the process is not ignoring SIGTTOU, and the process group of the process is orphaned.  This error may also be returned under implementation-defined conditions.

       ENOSPC There was no free space remaining on the device containing the file.

       EPIPE  An attempt is made to write to a pipe or FIFO that is not open for reading by any process. A SIGPIPE signal shall also be sent to the thread.

       The fputwc() function may fail if:

       ENOMEM Insufficient storage space is available.

       ENXIO  A request was made of a nonexistent device, or the request was outside the capabilities of the device.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.5, Standard I/O Streams, ferror(), fopen(), setbuf(), ulimit()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                         FPUTWC(3P)
