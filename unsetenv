setenv(3)                                                                                Library Functions Manual                                                                                setenv(3)

NAME
       setenv - change or add an environment variable

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdlib.h>

       int setenv(const char *name, const char *value, int overwrite);
       int unsetenv(const char *name);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       setenv(), unsetenv():
           _POSIX_C_SOURCE >= 200112L
               || /* glibc <= 2.19: */ _BSD_SOURCE

DESCRIPTION
       The setenv() function adds the variable name to the environment with the value value, if name does not already exist.  If name does exist in the environment, then its value is changed to value if
       overwrite is nonzero; if overwrite is zero, then the value of name is not changed (and setenv() returns a success status).  This function makes copies of the strings pointed to by name and  value
       (by contrast with putenv(3)).

       The unsetenv() function deletes the variable name from the environment.  If name does not exist in the environment, then the function succeeds, and the environment is unchanged.

RETURN VALUE
       setenv() and unsetenv() functions return zero on success, or -1 on error, with errno set to indicate the error.

ERRORS
       EINVAL name is NULL, points to a string of length 0, or contains an '=' character.

       ENOMEM Insufficient memory to add a new variable to the environment.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────────────────┐
       │Interface                                                                                                                                                   │ Attribute     │ Value               │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────────────────┤
       │setenv(), unsetenv()                                                                                                                                        │ Thread safety │ MT-Unsafe const:env │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────────────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001, 4.3BSD.

       Prior to glibc 2.2.2, unsetenv() was prototyped as returning void; more recent glibc versions follow the POSIX.1-compliant prototype shown in the SYNOPSIS.

CAVEATS
       POSIX.1 does not require setenv() or unsetenv() to be reentrant.

BUGS
       POSIX.1 specifies that if name contains an '=' character, then setenv() should fail with the error EINVAL; however, versions of glibc before glibc 2.3.4 allowed an '=' sign in name.

SEE ALSO
       clearenv(3), getenv(3), putenv(3), environ(7)

Linux man-pages 6.04                                                                            2023-03-30                                                                                       setenv(3)
UNSETENV(3P)                                                                             POSIX Programmer's Manual                                                                            UNSETENV(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       unsetenv — remove an environment variable

SYNOPSIS
       #include <stdlib.h>

       int unsetenv(const char *name);

DESCRIPTION
       The unsetenv() function shall remove an environment variable from the environment of the calling process. The name argument points to a string, which is the name of the variable  to  be  removed.
       The  named  argument shall not contain an '=' character. If the named variable does not exist in the current environment, the environment shall be unchanged and the function is considered to have
       completed successfully.

       The unsetenv() function shall update the list of pointers to which environ points.

       The unsetenv() function need not be thread-safe.

RETURN VALUE
       Upon successful completion, zero shall be returned. Otherwise, -1 shall be returned, errno set to indicate the error, and the environment shall be unchanged.

ERRORS
       The unsetenv() function shall fail if:

       EINVAL The name argument points to an empty string, or points to a string containing an '=' character.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       Refer to the RATIONALE section in setenv().

FUTURE DIRECTIONS
       None.

SEE ALSO
       getenv(), setenv()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>, <sys_types.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base  Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this ver‐
       sion and the original IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be  obtained  online  at  http://www.open‐
       group.org/unix/online.html .

       Any  typographical  or  formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report such errors, see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                       UNSETENV(3P)
