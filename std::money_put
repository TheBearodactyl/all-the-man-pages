std::money_put< _CharT, _OuLibrary(Functistd::money_put< _CharT, _OutIter >(3)

NAME
       std::money_put< _CharT, _OutIter > - Primary class template money_put.

SYNOPSIS
       #include <locale>

       Inherits std::locale::facet.

   Public Types

           typedef _CharT char_type
               Public typedefs.
           typedef _OutIter iter_type
               Public typedefs.
           typedef basic_string< _CharT > string_type
               Public typedefs.

   Public Member Functions
       money_put (size_t __refs=0)
           Constructor performs initialization.
       template<bool _Intl> _OutIter _M_insert (iter_type __s, ios_base &__io,
           char_type __fill, const string_type &__digits) const
       iter_type put (iter_type __s, bool __intl, ios_base &__io, char_type
           __fill, const string_type &__digits) const
           Format and output a monetary value.
       iter_type put (iter_type __s, bool __intl, ios_base &__io, char_type
           __fill, long double __units) const
           Format and output a monetary value.

   Static Public Attributes
       static locale::id id
           Numpunct facet id.

   Protected Member Functions
       virtual ~money_put ()
           Destructor.
       template<bool _Intl> iter_type _M_insert (iter_type __s, ios_base
           &__io, char_type __fill, const string_type &__digits) const
       virtual iter_type do_put (iter_type __s, bool __intl, ios_base &__io,
           char_type __fill, const string_type &__digits) const
           Format and output a monetary value.
       virtual iter_type do_put (iter_type __s, bool __intl, ios_base &__io,
           char_type __fill, long double __units) const
           Format and output a monetary value.

   Static Protected Member Functions
       static __c_locale _S_clone_c_locale (__c_locale &__cloc)  throw ()
       static void _S_create_c_locale (__c_locale &__cloc, const char *__s,
           __c_locale __old=0)
       static void _S_destroy_c_locale (__c_locale &__cloc)
       static __c_locale _S_get_c_locale ()
       static const char * _S_get_c_name ()  throw ()
       static __c_locale _S_lc_ctype_c_locale (__c_locale __cloc, const char
           *__s)

Detailed Description
   template<typename _CharT, typename _OutIter>
       class std::money_put< _CharT, _OutIter >"Primary class template
       money_put.

       This facet encapsulates the code to format and output a monetary
       amount.

       The money_put template uses protected virtual functions to provide the
       actual results. The public accessors forward the call to the virtual
       functions. These virtual functions are hooks for developers to
       implement the behavior they require from the money_put facet.

       Definition at line 1667 of file locale.

Member Typedef Documentation
   template<typename _CharT , typename _OutIter > typedef _CharT
       std::money_put< _CharT, _OutIter >::char_type
       Public typedefs.

       Definition at line 1672 of file locale.

   template<typename _CharT , typename _OutIter > typedef _OutIter
       std::money_put< _CharT, _OutIter >::iter_type
       Public typedefs.

       Definition at line 1673 of file locale.

   template<typename _CharT , typename _OutIter > typedef basic_string<_CharT>
       std::money_put< _CharT, _OutIter >::string_type
       Public typedefs.

       Definition at line 1674 of file locale.

Constructor & Destructor Documentation
   template<typename _CharT , typename _OutIter > std::money_put< _CharT,
       _OutIter >::money_put (size_t __refs = 0) [inline],  [explicit]
       Constructor performs initialization. This is the constructor provided
       by the standard.

       Parameters
           __refs Passed to the base facet class.

       Definition at line 1688 of file locale.

   template<typename _CharT , typename _OutIter > virtual std::money_put<
       _CharT, _OutIter >::~money_put () [inline],  [protected],  [virtual]
       Destructor.

       Definition at line 1738 of file locale.

Member Function Documentation
   template<typename _CharT , typename _OutIter > template<bool _Intl>
       _OutIter std::money_put< _CharT, _OutIter >::_M_insert (iter_type __s,
       ios_base & __io, char_type __fill, const string_type & __digits) const
       Definition at line 423 of file locale_facets_nonio.tcc.

   template<typename _CharT , typename _OutIter > _OutIter std::money_put<
       _CharT, _OutIter >::do_put (iter_type __s, bool __intl, ios_base &
       __io, char_type __fill, const string_type & __digits) const
       [protected],  [virtual]
       Format and output a monetary value. This function formats digits as a
       monetary value according to moneypunct and ctype facets retrieved from
       io.getloc(), and writes the resulting characters to __s. For example,
       the string 1001 in a US locale would write $10.01 to __s.

       This function is a hook for derived classes to change the value
       returned.

       See also
           put().

       Parameters
           __s The stream to write to.
           __intl Parameter to use_facet<moneypunct<CharT,intl> >.
           __io Source of facets and io state.
           __fill char_type to use for padding.
           __digits Place to store result of parsing.

       Returns
           Iterator after writing.

       Definition at line 630 of file locale_facets_nonio.tcc.

   template<typename _CharT , typename _OutIter > _OutIter std::money_put<
       _CharT, _OutIter >::do_put (iter_type __s, bool __intl, ios_base &
       __io, char_type __fill, long double __units) const [protected],
       [virtual]
       Format and output a monetary value. This function formats units as a
       monetary value according to moneypunct and ctype facets retrieved from
       io.getloc(), and writes the resulting characters to __s. For example,
       the value 1001 in a US locale would write $10.01 to __s.

       This function is a hook for derived classes to change the value
       returned.

       See also
           put().

       Parameters
           __s The stream to write to.
           __intl Parameter to use_facet<moneypunct<CharT,intl> >.
           __io Source of facets and io state.
           __fill char_type to use for padding.
           __units Place to store result of parsing.

       Returns
           Iterator after writing.

       Definition at line 592 of file locale_facets_nonio.tcc.

       References std::ios_base::getloc(), and std::__ctype_abstract_base<
       _CharT >::widen().

       Referenced by std::money_put< _CharT, _OutIter >::put().

   template<typename _CharT , typename _OutIter > iter_type std::money_put<
       _CharT, _OutIter >::put (iter_type __s, bool __intl, ios_base & __io,
       char_type __fill, const string_type & __digits) const [inline]
       Format and output a monetary value. This function formats digits as a
       monetary value according to moneypunct and ctype facets retrieved from
       io.getloc(), and writes the resulting characters to __s. For example,
       the string 1001 in a US locale would write $10.01 to __s.

       This function works by returning the result of do_put().

       Parameters
           __s The stream to write to.
           __intl Parameter to use_facet<moneypunct<CharT,intl> >.
           __io Source of facets and io state.
           __fill char_type to use for padding.
           __digits Place to store result of parsing.

       Returns
           Iterator after writing.

       Definition at line 1731 of file locale.

       References std::money_put< _CharT, _OutIter >::do_put().

   template<typename _CharT , typename _OutIter > iter_type std::money_put<
       _CharT, _OutIter >::put (iter_type __s, bool __intl, ios_base & __io,
       char_type __fill, long double __units) const [inline]
       Format and output a monetary value. This function formats units as a
       monetary value according to moneypunct and ctype facets retrieved from
       io.getloc(), and writes the resulting characters to __s. For example,
       the value 1001 in a US locale would write $10.01 to __s.

       This function works by returning the result of do_put().

       Parameters
           __s The stream to write to.
           __intl Parameter to use_facet<moneypunct<CharT,intl> >.
           __io Source of facets and io state.
           __fill char_type to use for padding.
           __units Place to store result of parsing.

       Returns
           Iterator after writing.

       Definition at line 1708 of file locale.

       References std::money_put< _CharT, _OutIter >::do_put().

Member Data Documentation
   template<typename _CharT , typename _OutIter > locale::id std::money_put<
       _CharT, _OutIter >::id [static]
       Numpunct facet id.

       Definition at line 1678 of file locale.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1std::money_put< _CharT, _OutIter >(3)
