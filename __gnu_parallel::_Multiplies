__gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result >(3)                                    Library Functions Manual                                    __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result >(3)

NAME
       __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result > - Similar to std::multiplies, but allows two different types.

SYNOPSIS
       #include <base.h>

       Inherits std::binary_function< _Arg1, _Arg2, _Result >.

   Public Types
       typedef _Arg1 first_argument_type
           first_argument_type is the type of the first argument
       typedef _Result result_type
           result_type is the return type
       typedef _Arg2 second_argument_type
           second_argument_type is the type of the second argument

   Public Member Functions
       _Result operator() (const _Tp1 &__x, const _Tp2 &__y) const

Detailed Description
   template<typename _Tp1, typename _Tp2, typename _Result = __typeof__(*static_cast<_Tp1*>(0)              * *static_cast<_Tp2*>(0))>
       struct __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result >"Similar to std::multiplies, but allows two different types.

       Definition at line 288 of file base.h.

Member Typedef Documentation
   template<typename _Arg1 , typename _Arg2 , typename _Result > typedef _Arg1 std::binary_function< _Arg1, _Arg2, _Result >::first_argument_type [inherited]
       first_argument_type is the type of the first argument

       Definition at line 134 of file stl_function.h.

   template<typename _Arg1 , typename _Arg2 , typename _Result > typedef _Result std::binary_function< _Arg1, _Arg2, _Result >::result_type [inherited]
       result_type is the return type

       Definition at line 140 of file stl_function.h.

   template<typename _Arg1 , typename _Arg2 , typename _Result > typedef _Arg2 std::binary_function< _Arg1, _Arg2, _Result >::second_argument_type [inherited]
       second_argument_type is the type of the second argument

       Definition at line 137 of file stl_function.h.

Member Function Documentation
   template<typename _Tp1 , typename _Tp2 , typename _Result  = __typeof__(*static_cast<_Tp1*>(0)           * *static_cast<_Tp2*>(0))> _Result __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result
       >::operator() (const _Tp1 & __x, const _Tp2 & __y) const [inline]
       Definition at line 291 of file base.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                         __gnu_parallel::_Multiplies< _Tp1, _Tp2, _Result >(3)
