Fapi_NvWrite(3)                                                                                  tpm2-tss                                                                                  Fapi_NvWrite(3)

NAME
       Fapi_NvWrite - Fapi_NvWrite

SYNOPSIS
   Functions
       TSS2_RC Fapi_NvWrite (FAPI_CONTEXT *context, char const *path, uint8_t const *data, size_t size)
       TSS2_RC Fapi_NvWrite_Async (FAPI_CONTEXT *context, char const *path, uint8_t const *data, size_t size)
       TSS2_RC Fapi_NvWrite_Finish (FAPI_CONTEXT *context)

Detailed Description
       FAPI functions to invoke NvWrite either as one-call or in an asynchronous manner.

Function Documentation
   Fapi_NvWrite (FAPI_CONTEXT * context, char const * nvPath, uint8_t const * data, size_t size)
       One-Call function for Fapi_NvWrite

       Writes data to a 'regular' (not pin, extend or counter) NV index.

       Parameters
           context The FAPI_CONTEXT
           nvPath The path of the NV index to write
           data The data to write to the NV index
           size The size of data in bytes

       Return values
           TSS2_RC_SUCCESS if the function call was a success.
           TSS2_FAPI_RC_BAD_REFERENCE if context, nvPath, or data is NULL.
           TSS2_FAPI_RC_BAD_CONTEXT if context corruption is detected.
           TSS2_FAPI_RC_BAD_PATH if nvPath is not found.
           TSS2_FAPI_RC_NV_EXCEEDED if the NV is not large enough for the data to be written.
           TSS2_FAPI_RC_NV_WRONG_TYPE if the NV index is not a 'regular' one.
           TSS2_FAPI_RC_NV_NOT_WRITEABLE if the NV is not a writeable index.
           TSS2_FAPI_RC_POLICY_UNKNOWN if the policy is unknown.
           TSS2_FAPI_RC_BAD_SEQUENCE if the context has an asynchronous operation already pending.
           TSS2_FAPI_RC_IO_ERROR if the data cannot be saved.
           TSS2_FAPI_RC_MEMORY if the FAPI cannot allocate enough memory for internal operations or return parameters.
           TSS2_FAPI_RC_NO_TPM if FAPI was initialized in no-TPM-mode via its config file.
           TSS2_FAPI_RC_TRY_AGAIN if an I/O operation is not finished yet and this function needs to be called again.
           TSS2_FAPI_RC_BAD_VALUE if an invalid value was passed into the function.
           TSS2_FAPI_RC_PATH_NOT_FOUND if a FAPI object path was not found during authorization.
           TSS2_FAPI_RC_KEY_NOT_FOUND if a key was not found.
           TSS2_FAPI_RC_GENERAL_FAILURE if an internal error occurred.
           TSS2_FAPI_RC_AUTHORIZATION_UNKNOWN if a required authorization callback is not set.
           TSS2_FAPI_RC_AUTHORIZATION_FAILED if the authorization attempt fails.
           TSS2_ESYS_RC_* possible error codes of ESAPI.
           TSS2_FAPI_RC_NOT_PROVISIONED FAPI was not provisioned.

   Fapi_NvWrite_Async (FAPI_CONTEXT * context, char const * nvPath, uint8_t const * data, size_t size)
       Asynchronous function for Fapi_NvWrite

       Writes data to a 'regular' (not pin, extend or counter) NV index.

       Call Fapi_NvWrite_Finish to finish the execution of this command.

       Parameters
           context The FAPI_CONTEXT
           nvPath The path of the NV index to write
           data The data to write to the NV index
           size The size of data in bytes

       Return values
           TSS2_RC_SUCCESS if the function call was a success.
           TSS2_FAPI_RC_BAD_REFERENCE if context, nvPath, or data is NULL.
           TSS2_FAPI_RC_BAD_CONTEXT if context corruption is detected.
           TSS2_FAPI_RC_BAD_PATH if nvPath is not found.
           TSS2_FAPI_RC_NV_EXCEEDED if the NV is not large enough for the data to be written.
           TSS2_FAPI_RC_NV_WRONG_TYPE if the NV index is not a 'regular' one.
           TSS2_FAPI_RC_NV_NOT_WRITEABLE if the NV is not a writeable index.
           TSS2_FAPI_RC_POLICY_UNKNOWN if the policy is unknown.
           TSS2_FAPI_RC_BAD_SEQUENCE if the context has an asynchronous operation already pending.
           TSS2_FAPI_RC_IO_ERROR if the data cannot be saved.
           TSS2_FAPI_RC_MEMORY if the FAPI cannot allocate enough memory for internal operations or return parameters.
           TSS2_FAPI_RC_NO_TPM if FAPI was initialized in no-TPM-mode via its config file.

   Fapi_NvWrite_Finish (FAPI_CONTEXT * context)
       Asynchronous finish function for Fapi_NvWrite

       This function should be called after a previous Fapi_NvWrite.

       Parameters
           context The FAPI_CONTEXT

       Return values
           TSS2_RC_SUCCESS if the function call was a success.
           TSS2_FAPI_RC_BAD_REFERENCE if context is NULL.
           TSS2_FAPI_RC_BAD_CONTEXT if context corruption is detected.
           TSS2_FAPI_RC_BAD_SEQUENCE if the context has an asynchronous operation already pending.
           TSS2_FAPI_RC_IO_ERROR if the data cannot be saved.
           TSS2_FAPI_RC_MEMORY if the FAPI cannot allocate enough memory for internal operations or return parameters.
           TSS2_FAPI_RC_TRY_AGAIN if the asynchronous operation is not yet complete. Call this function again later.
           TSS2_FAPI_RC_BAD_VALUE if an invalid value was passed into the function.
           TSS2_FAPI_RC_BAD_PATH if a path is used in inappropriate context or contains illegal characters.
           TSS2_FAPI_RC_PATH_NOT_FOUND if a FAPI object path was not found during authorization.
           TSS2_FAPI_RC_KEY_NOT_FOUND if a key was not found.
           TSS2_FAPI_RC_GENERAL_FAILURE if an internal error occurred.
           TSS2_FAPI_RC_AUTHORIZATION_UNKNOWN if a required authorization callback is not set.
           TSS2_FAPI_RC_AUTHORIZATION_FAILED if the authorization attempt fails.
           TSS2_FAPI_RC_POLICY_UNKNOWN if policy search for a certain policy digest was not successful.
           TSS2_ESYS_RC_* possible error codes of ESAPI.
           TSS2_FAPI_RC_NOT_PROVISIONED FAPI was not provisioned.

Author
       Generated automatically by Doxygen for tpm2-tss from the source code.

Version 3.2.0                                                                                 Tue Nov 1 2022                                                                               Fapi_NvWrite(3)
