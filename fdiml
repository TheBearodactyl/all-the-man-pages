fdim(3)                                                                                  Library Functions Manual                                                                                  fdim(3)

NAME
       fdim, fdimf, fdiml - positive difference

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       double fdim(double x, double y);
       float fdimf(float x, float y);
       long double fdiml(long double x, long double y);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       fdimf(), fdiml():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       These functions return the positive difference, max(x-y,0), between their arguments.

RETURN VALUE
       On success, these functions return the positive difference.

       If x or y is a NaN, a NaN is returned.

       If the result overflows, a range error occurs, and the functions return HUGE_VAL, HUGE_VALF, or HUGE_VALL, respectively.

ERRORS
       See math_error(7) for information on how to determine whether an error has occurred when calling these functions.

       The following errors can occur:

       Range error: result overflow
              errno is set to ERANGE.  An overflow floating-point exception (FE_OVERFLOW) is raised.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                                                                                                                                               │ Attribute     │ Value   │
       ├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────────────┼─────────┤
       │fdim(), fdimf(), fdiml()                                                                                                                                                │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       glibc 2.1.  C99, POSIX.1-2001.

BUGS
       Before glibc 2.24 on certain architectures (e.g., x86, but not x86_64) these functions did not set errno.

SEE ALSO
       fmax(3)

Linux man-pages 6.04                                                                            2023-03-30                                                                                         fdim(3)
FDIM(3P)                                                                                 POSIX Programmer's Manual                                                                                FDIM(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult the corresponding Linux manual page for details of Linux behavior), or
       the interface may not be implemented on Linux.

NAME
       fdim, fdimf, fdiml — compute positive difference between two floating-point numbers

SYNOPSIS
       #include <math.h>

       double fdim(double x, double y);
       float fdimf(float x, float y);
       long double fdiml(long double x, long double y);

DESCRIPTION
       The functionality described on this reference page is aligned with the ISO C standard. Any conflict between the requirements described here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       These functions shall determine the positive difference between their arguments. If x is greater than y, x-y is returned. If x is less than or equal to y, +0 is returned.

       An  application  wishing  to check for error situations should set errno to zero and call feclearexcept(FE_ALL_EXCEPT) before calling these functions. On return, if errno is non-zero or fetestex‐
       cept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW) is non-zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return the positive difference value.

       If x-y is positive and overflows, a range error shall occur and fdim(), fdimf(), and fdiml() shall return the value of the macro HUGE_VAL, HUGE_VALF, and HUGE_VALL, respectively.

       If the correct value would cause underflow, a range error may occur, and fdim(), fdimf(), and fdiml() shall return the correct value, or (if the IEC 60559 Floating-Point option is not  supported)
       an implementation-defined value no greater in magnitude than DBL_MIN, FLT_MIN, and LDBL_MIN, respectively.

       If x or y is NaN, a NaN shall be returned.

ERRORS
       The fdim() function shall fail if:

       Range Error The result overflows.

                   If the integer expression (math_errhandling & MATH_ERRNO) is non-zero, then errno shall be set to [ERANGE].  If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
                   then the overflow floating-point exception shall be raised.

       The fdim() function may fail if:

       Range Error The result underflows.

                   If the integer expression (math_errhandling & MATH_ERRNO) is non-zero, then errno shall be set to [ERANGE].  If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
                   then the underflow floating-point exception shall be raised.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling & MATH_ERREXCEPT) are independent of each other, but at least one of them must be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept(), fetestexcept(), fmax(), fmin()

       Section 4.20, Treatment of Error Conditions for Mathematical Functions, <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1-2017, Standard for Information Technology -- Portable Operating System Interface (POSIX), The Open Group
       Base Specifications Issue 7, 2018 Edition, Copyright (C) 2018 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  In the event of any discrepancy between this  ver‐
       sion  and  the  original  IEEE and The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The original Standard can be obtained online at http://www.open‐
       group.org/unix/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during the conversion of the source files to man page format. To report  such  errors,  see
       https://www.kernel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                                                                                2017                                                                                           FDIM(3P)
