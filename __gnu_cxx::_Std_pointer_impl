__gnu_cxx::_Std_pointer_impl< _Tp >(3)                                                   Library Functions Manual                                                   __gnu_cxx::_Std_pointer_impl< _Tp >(3)

NAME
       __gnu_cxx::_Std_pointer_impl< _Tp > - A storage policy for use with _Pointer_adapter<> which yields a standard pointer.

SYNOPSIS
       #include <pointer.h>

   Public Types
       typedef _Tp element_type

   Public Member Functions
       _Tp * get () const
       bool operator< (const _Std_pointer_impl &__rarg) const
       bool operator== (const _Std_pointer_impl &__rarg) const
       void set (element_type *__arg)

Detailed Description
   template<typename _Tp>
       class __gnu_cxx::_Std_pointer_impl< _Tp >"A storage policy for use with _Pointer_adapter<> which yields a standard pointer.

       A _Storage_policy is required to provide 4 things: 1) A get() API for returning the stored pointer value. 2) An set() API for storing a pointer value. 3) An element_type typedef to define the
       type this points to. 4) An operator<() to support pointer comparison. 5) An operator==() to support pointer comparison.

       Definition at line 69 of file pointer.h.

Member Typedef Documentation
   template<typename _Tp > typedef _Tp __gnu_cxx::_Std_pointer_impl< _Tp >::element_type
       Definition at line 73 of file pointer.h.

Member Function Documentation
   template<typename _Tp > _Tp * __gnu_cxx::_Std_pointer_impl< _Tp >::get () const [inline]
       Definition at line 77 of file pointer.h.

   template<typename _Tp > bool __gnu_cxx::_Std_pointer_impl< _Tp >::operator< (const _Std_pointer_impl< _Tp > & __rarg) const [inline]
       Definition at line 86 of file pointer.h.

   template<typename _Tp > bool __gnu_cxx::_Std_pointer_impl< _Tp >::operator== (const _Std_pointer_impl< _Tp > & __rarg) const [inline]
       Definition at line 91 of file pointer.h.

   template<typename _Tp > void __gnu_cxx::_Std_pointer_impl< _Tp >::set (element_type * __arg) [inline]
       Definition at line 82 of file pointer.h.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                                        __gnu_cxx::_Std_pointer_impl< _Tp >(3)
