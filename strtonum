strtonum(3bsd)                       LOCAL                      strtonum(3bsd)

NAME
     strtonum — reliably convert string value to an integer

LIBRARY
     Utility functions from BSD systems (libbsd, -lbsd)

SYNOPSIS
     #include <limits.h>
     #include <stdlib.h>
     (See libbsd(7) for include usage.)

     long long
     strtonum(const char *nptr, long long minval, long long maxval,
         const char **errstr);

DESCRIPTION
     The strtonum() function converts the string in nptr to a long long value.

     The string may begin with an arbitrary amount of whitespace (as deter‐
     mined by isspace(3)) followed by a single optional ‘+’ or ‘-’ sign.

     The remainder of the string is converted to a long long value according
     to base 10.

     The value obtained is then checked against the provided minval and maxval
     bounds.  If errstr is non-null, strtonum() stores an error string in
     *errstr indicating the failure.

RETURN VALUES
     The strtonum() function returns the result of the conversion, unless the
     value would exceed the provided bounds or is invalid.  On error, 0 is re‐
     turned, errno is set, and errstr will point to an error message.  On suc‐
     cess, *errstr will be set to NULL; this fact can be used to differentiate
     a successful return of 0 from an error.

EXAMPLES
     Using strtonum() correctly is meant to be simpler than the alternative
     functions.

           int iterations;
           const char *errstr;

           iterations = strtonum(optarg, 1, 64, &errstr);
           if (errstr)
                   errx(1, "number of iterations is %s: %s", errstr, optarg);

     The above example will guarantee that the value of iterations is between
     1 and 64 (inclusive).

ERRORS
     [EINVAL]           The given string did not consist solely of digit char‐
                        acters; or minval was larger than maxval.

     [ERANGE]           The given string was out of range.

     If an error occurs, errstr will be set to one of the following strings:

     too large  The result was larger than the provided maximum value.
     too small  The result was smaller than the provided minimum value.
     invalid    The string did not consist solely of digit characters.

SEE ALSO
     atof(3), atoi(3), atol(3), atoll(3), sscanf(3), strtod(3), strtoi(3bsd),
     strtol(3), strtoll(3), strtou(3bsd), strtoul(3), strtoull(3)

STANDARDS
     strtonum() is an OpenBSD extension.

HISTORY
     The strtonum() function first appeared in OpenBSD 3.6.  strtonum() was
     redesigned in NetBSD 8.0 as strtoi(3bsd) and strtou(3bsd).

CAVEATS
     The strtonum() function was designed to facilitate safe, robust program‐
     ming and overcome the shortcomings of the atoi(3) and strtol(3) family of
     interfaces, however there are problems with the strtonum() API:

     -   will return 0 on failure; 0 might not be in range, so that necessi‐
         tates an error check even if you want to avoid it

     -   does not differentiate 'illegal' returns, so we can't tell the dif‐
         ference between partial and no conversions

     -   returns english strings

     -   can't set the base, or find where the conversion ended

     -   hardcodes long long integer type
     To overcome the shortcomings of strtonum() NetBSD provides strtou(3bsd)
     and strtoi(3bsd).

BSD                            January 18, 2015                            BSD
