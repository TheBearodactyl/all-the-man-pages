SD_BUS_GET_CURRENT_HANDLERsd_bus_get_current_handSD_BUS_GET_CURRENT_HANDLER(3)

NAME
       sd_bus_get_current_handler, sd_bus_get_current_message,
       sd_bus_get_current_slot, sd_bus_get_current_userdata - Query
       information of the callback a bus object is currently running

SYNOPSIS
       #include <systemd/sd-bus.h>

       typedef int (*sd_bus_message_handler_t)(sd_bus_message *m,
                                               void *userdata,
                                               sd_bus_error *ret_error);

       sd_bus_message_handler_t sd_bus_get_current_handler(sd_bus *bus);

       sd_bus_message* sd_bus_get_current_message(sd_bus *bus);

       sd_bus_slot* sd_bus_get_current_slot(sd_bus *bus);

       void* sd_bus_get_current_userdata(sd_bus *bus);

DESCRIPTION
       Whenever sd-bus is about to invoke a user-supplied callback function,
       it stores the current callback, D-Bus message, slot and userdata
       pointer and allows these to be queried via
       sd_bus_get_current_handler(), sd_bus_get_current_message(),
       sd_bus_get_current_slot() and sd_bus_get_current_userdata(),
       respectively. If bus cannot be resolved or if execution does not reside
       in a user-supplied callback of bus, these functions return NULL.

RETURN VALUE
       On success, these functions return the requested object. On failure,
       they return NULL.

NOTES
       These APIs are implemented as a shared library, which can be compiled
       and linked to with the libsystemd pkg-config(1) file.

SEE ALSO
       systemd(1), sd-bus(3)

systemd 253                                      SD_BUS_GET_CURRENT_HANDLER(3)
