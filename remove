remove(3)                  Library Functions Manual                  remove(3)

NAME
       remove - remove a file or directory

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <stdio.h>

       int remove(const char *pathname);

DESCRIPTION
       remove()  deletes  a  name from the filesystem.  It calls unlink(2) for
       files, and rmdir(2) for directories.

       If the removed name was the last link to a file and no  processes  have
       the  file  open, the file is deleted and the space it was using is made
       available for reuse.

       If the name was the last link to a file, but any processes  still  have
       the  file  open,  the file will remain in existence until the last file
       descriptor referring to it is closed.

       If the name referred to a symbolic link, the link is removed.

       If the name referred to a socket, FIFO, or device, the name is removed,
       but processes which have the object open may continue to use it.

RETURN VALUE
       On  success,  zero is returned.  On error, -1 is returned, and errno is
       set to indicate the error.

ERRORS
       The errors that occur are those for unlink(2) and rmdir(2).

ATTRIBUTES
       For an  explanation  of  the  terms  used  in  this  section,  see  at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │remove()                                    │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C89, 4.3BSD.

BUGS
       Infelicities  in  the  protocol underlying NFS can cause the unexpected
       disappearance of files which are still being used.

SEE ALSO
       rm(1), unlink(1), link(2), mknod(2), open(2), rename(2), rmdir(2),  un‐
       link(2), mkfifo(3), symlink(7)

Linux man-pages 6.04              2023-03-30                         remove(3)
REMOVE(3P)                 POSIX Programmer's Manual                REMOVE(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       remove — remove a file

SYNOPSIS
       #include <stdio.h>

       int remove(const char *path);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The  remove()  function  shall  cause  the  file  named by the pathname
       pointed to by path to be no longer accessible by that  name.  A  subse‐
       quent  attempt  to open that file using that name shall fail, unless it
       is created anew.

       If path does not name a directory, remove(path) shall be equivalent  to
       unlink(path).

       If  path  names  a  directory,  remove(path)  shall  be  equivalent  to
       rmdir(path).

RETURN VALUE
       Refer to rmdir() or unlink().

ERRORS
       Refer to rmdir() or unlink().

       The following sections are informative.

EXAMPLES
   Removing Access to a File
       The following example shows how  to  remove  access  to  a  file  named
       /home/cnd/old_mods.

           #include <stdio.h>

           int status;
           ...
           status = remove("/home/cnd/old_mods");

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       rmdir(), unlink()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                           REMOVE(3P)
