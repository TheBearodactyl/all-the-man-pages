signbit(3)                 Library Functions Manual                 signbit(3)

NAME
       signbit - test sign of a real floating-point number

LIBRARY
       Math library (libm, -lm)

SYNOPSIS
       #include <math.h>

       int signbit(x);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       signbit():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       signbit()  is a generic macro which can work on all real floating-point
       types.  It returns a nonzero value if the value of x has its  sign  bit
       set.

       This is not the same as x < 0.0, because IEEE 754 floating point allows
       zero to be signed.  The comparison -0.0  <  0.0  is  false,  but  sign‐
       bit(-0.0) will return a nonzero value.

       NaNs and infinities have a sign bit.

RETURN VALUE
       The  signbit() macro returns nonzero if the sign of x is negative; oth‐
       erwise it returns zero.

ERRORS
       No errors occur.

ATTRIBUTES
       For an  explanation  of  the  terms  used  in  this  section,  see  at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │signbit()                                   │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       C11, POSIX.1-2008.

HISTORY
       POSIX.1-2001, C99.

       This  function is defined in IEC 559 (and the appendix with recommended
       functions in IEEE 754/IEEE 854).

SEE ALSO
       copysign(3)

Linux man-pages 6.04              2023-03-30                        signbit(3)
SIGNBIT(3P)                POSIX Programmer's Manual               SIGNBIT(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       signbit — test sign

SYNOPSIS
       #include <math.h>

       int signbit(real-floating x);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The  signbit()  macro  shall determine whether the sign of its argument
       value is negative. NaNs, zeros, and infinities have a sign bit.

RETURN VALUE
       The signbit() macro shall return a non-zero value if and  only  if  the
       sign of its argument value is negative.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       fpclassify(), isfinite(), isinf(), isnan(), isnormal()

       The Base Definitions volume of POSIX.1‐2017, <math.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                          SIGNBIT(3P)
