MPI_File_write_shared(3)                                                                         Open MPI                                                                         MPI_File_write_shared(3)

NAME
       MPI_File_write_shared - Writes a file using the shared file pointer (blocking, noncollective).

SYNTAX
C Syntax
       #include <mpi.h>
       int MPI_File_write_shared(MPI_File fh, const void *buf, int count,
            MPI_Datatype datatype, MPI_Status *status)

Fortran Syntax
       USE MPI
       ! or the older form: INCLUDE 'mpif.h'
       MPI_FILE_WRITE_SHARED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR)
            <type>    BUF(*)
            INTEGER   FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR

Fortran 2008 Syntax
       USE mpi_f08
       MPI_File_write_shared(fh, buf, count, datatype, status, ierror)
            TYPE(MPI_File), INTENT(IN) :: fh
            TYPE(*), DIMENSION(..), INTENT(IN) :: buf
            INTEGER, INTENT(IN) :: count
            TYPE(MPI_Datatype), INTENT(IN) :: datatype
            TYPE(MPI_Status) :: status
            INTEGER, OPTIONAL, INTENT(OUT) :: ierror

C++ Syntax
       #include <mpi.h>
       void MPI::File::Write_shared(const void* buf, int count,
            const MPI::Datatype& datatype, MPI::Status& status)

       void MPI::File::Write_shared(const void* buf, int count,
            const MPI::Datatype& datatype)

INPUT/OUTPUT PARAMETER
       fh        File handle (handle).

INPUT PARAMETERS
       buf       Initial address of buffer (choice).

       count     Number of elements in buffer (integer).

       datatype  Data type of each buffer element (handle).

OUTPUT PARAMETERS
       status    Status object (status).

       IERROR    Fortran only: Error status (integer).

DESCRIPTION
       MPI_File_write_shared is a blocking routine that uses the shared file pointer to write files. The order of serialization is not deterministic for this noncollective routine.

ERRORS
       Almost  all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler
       is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.

       Before the error value is returned, the current MPI error handler is called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may  be  changed
       with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an er‚Äê
       ror.

4.1.5                                                                                          Feb 23, 2023                                                                       MPI_File_write_shared(3)
