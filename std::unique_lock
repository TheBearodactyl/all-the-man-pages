std::unique_lock< _Mutex >(Library Functions Manustd::unique_lock< _Mutex >(3)

NAME
       std::unique_lock< _Mutex > - A movable scoped lock type.

SYNOPSIS
       #include <mutex>

   Public Types
       typedef _Mutex mutex_type

   Public Member Functions
       unique_lock (const unique_lock &)=delete
       unique_lock (mutex_type &__m)
       unique_lock (mutex_type &__m, adopt_lock_t) noexcept
       template<typename _Rep , typename _Period > unique_lock (mutex_type
           &__m, const chrono::duration< _Rep, _Period > &__rtime)
       template<typename _Clock , typename _Duration > unique_lock (mutex_type
           &__m, const chrono::time_point< _Clock, _Duration > &__atime)
       unique_lock (mutex_type &__m, defer_lock_t) noexcept
       unique_lock (mutex_type &__m, try_to_lock_t)
       unique_lock (unique_lock &&__u) noexcept
       void lock ()
       mutex_type * mutex () const noexcept
       operator bool () const noexcept
       unique_lock & operator= (const unique_lock &)=delete
       unique_lock & operator= (unique_lock &&__u) noexcept
       bool owns_lock () const noexcept
       mutex_type * release () noexcept
       void swap (unique_lock &__u) noexcept
       bool try_lock ()
       template<typename _Rep , typename _Period > bool try_lock_for (const
           chrono::duration< _Rep, _Period > &__rtime)
       template<typename _Clock , typename _Duration > bool try_lock_until
           (const chrono::time_point< _Clock, _Duration > &__atime)
       void unlock ()

   Related Functions
       (Note that these are not member functions.)
       template<typename _Mutex > void swap (unique_lock< _Mutex > &__x,
           unique_lock< _Mutex > &__y) noexcept
           Swap overload for unique_lock objects.

Detailed Description
   template<typename _Mutex>
       class std::unique_lock< _Mutex >"A movable scoped lock type.

       A unique_lock controls mutex ownership within a scope. Ownership of the
       mutex can be delayed until after construction and can be transferred to
       another unique_lock by move construction or move assignment. If a mutex
       lock is owned when the destructor runs ownership will be released.

       Definition at line 57 of file mutex.

Member Typedef Documentation
   template<typename _Mutex > typedef _Mutex std::unique_lock< _Mutex
       >::mutex_type
       Definition at line 60 of file mutex.

Constructor & Destructor Documentation
   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock ()
       [inline],  [noexcept]
       Definition at line 62 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock
       (mutex_type & __m) [inline],  [explicit]
       Definition at line 66 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock
       (mutex_type & __m, defer_lock_t) [inline],  [noexcept]
       Definition at line 73 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock
       (mutex_type & __m, try_to_lock_t) [inline]
       Definition at line 77 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock
       (mutex_type & __m, adopt_lock_t) [inline],  [noexcept]
       Definition at line 81 of file mutex.

   template<typename _Mutex > template<typename _Clock , typename _Duration >
       std::unique_lock< _Mutex >::unique_lock (mutex_type & __m, const
       chrono::time_point< _Clock, _Duration > & __atime) [inline]
       Definition at line 88 of file mutex.

   template<typename _Mutex > template<typename _Rep , typename _Period >
       std::unique_lock< _Mutex >::unique_lock (mutex_type & __m, const
       chrono::duration< _Rep, _Period > & __rtime) [inline]
       Definition at line 95 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::~unique_lock ()
       [inline]
       Definition at line 101 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::unique_lock
       (unique_lock< _Mutex > && __u) [inline],  [noexcept]
       Definition at line 110 of file mutex.

Member Function Documentation
   template<typename _Mutex > void std::unique_lock< _Mutex >::lock ()
       [inline]
       Definition at line 131 of file mutex.

   template<typename _Mutex > mutex_type * std::unique_lock< _Mutex >::mutex
       () const [inline],  [noexcept]
       Definition at line 224 of file mutex.

   template<typename _Mutex > std::unique_lock< _Mutex >::operator bool ()
       const [inline],  [explicit],  [noexcept]
       Definition at line 220 of file mutex.

   template<typename _Mutex > unique_lock & std::unique_lock< _Mutex
       >::operator= (unique_lock< _Mutex > && __u) [inline],  [noexcept]
       Definition at line 117 of file mutex.

   template<typename _Mutex > bool std::unique_lock< _Mutex >::owns_lock ()
       const [inline],  [noexcept]
       Definition at line 217 of file mutex.

   template<typename _Mutex > mutex_type * std::unique_lock< _Mutex >::release
       () [inline],  [noexcept]
       Definition at line 208 of file mutex.

   template<typename _Mutex > void std::unique_lock< _Mutex >::swap
       (unique_lock< _Mutex > & __u) [inline],  [noexcept]
       Definition at line 201 of file mutex.

   template<typename _Mutex > bool std::unique_lock< _Mutex >::try_lock ()
       [inline]
       Definition at line 145 of file mutex.

   template<typename _Mutex > template<typename _Rep , typename _Period > bool
       std::unique_lock< _Mutex >::try_lock_for (const chrono::duration< _Rep,
       _Period > & __rtime) [inline]
       Definition at line 175 of file mutex.

   template<typename _Mutex > template<typename _Clock , typename _Duration >
       bool std::unique_lock< _Mutex >::try_lock_until (const
       chrono::time_point< _Clock, _Duration > & __atime) [inline]
       Definition at line 160 of file mutex.

   template<typename _Mutex > void std::unique_lock< _Mutex >::unlock ()
       [inline]
       Definition at line 189 of file mutex.

Friends And Related Function Documentation
   template<typename _Mutex > void swap (unique_lock< _Mutex > & __x,
       unique_lock< _Mutex > & __y) [related]
       Swap overload for unique_lock objects.

       Definition at line 236 of file mutex.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                       Wed Feb 1 2023   std::unique_lock< _Mutex >(3)
