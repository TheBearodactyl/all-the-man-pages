sem_getvalue(3)            Library Functions Manual            sem_getvalue(3)

NAME
       sem_getvalue - get the value of a semaphore

LIBRARY
       POSIX threads library (libpthread, -lpthread)

SYNOPSIS
       #include <semaphore.h>

       int sem_getvalue(sem_t *restrict sem, int *restrict sval);

DESCRIPTION
       sem_getvalue() places the current value of the semaphore pointed to sem
       into the integer pointed to by sval.

       If one or more processes or threads are blocked  waiting  to  lock  the
       semaphore  with  sem_wait(3), POSIX.1 permits two possibilities for the
       value returned in sval: either 0 is  returned;  or  a  negative  number
       whose  absolute  value  is  the  count  of  the number of processes and
       threads currently blocked in sem_wait(3).  Linux adopts the former  be‐
       havior.

RETURN VALUE
       sem_getvalue() returns 0 on success; on error, -1 is returned and errno
       is set to indicate the error.

ERRORS
       EINVAL sem is not a valid semaphore.  (The  glibc  implementation  cur‐
              rently does not check whether sem is valid.)

ATTRIBUTES
       For  an  explanation  of  the  terms  used  in  this  section,  see at‐
       tributes(7).

       ┌────────────────────────────────────────────┬───────────────┬─────────┐
       │Interface                                   │ Attribute     │ Value   │
       ├────────────────────────────────────────────┼───────────────┼─────────┤
       │sem_getvalue()                              │ Thread safety │ MT-Safe │
       └────────────────────────────────────────────┴───────────────┴─────────┘

STANDARDS
       POSIX.1-2008.

HISTORY
       POSIX.1-2001.

NOTES
       The value of the  semaphore  may  already  have  changed  by  the  time
       sem_getvalue() returns.

SEE ALSO
       sem_post(3), sem_wait(3), sem_overview(7)

Linux man-pages 6.04              2023-03-30                   sem_getvalue(3)
SEM_GETVALUE(3P)           POSIX Programmer's Manual          SEM_GETVALUE(3P)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       sem_getvalue — get the value of a semaphore

SYNOPSIS
       #include <semaphore.h>

       int sem_getvalue(sem_t *restrict sem, int *restrict sval);

DESCRIPTION
       The sem_getvalue() function shall update the location referenced by the
       sval  argument  to  have  the  value of the semaphore referenced by sem
       without affecting the state of the semaphore. The updated value  repre‐
       sents  an actual semaphore value that occurred at some unspecified time
       during the call, but it need not be the actual value of  the  semaphore
       when it is returned to the calling process.

       If  sem is locked, then the object to which sval points shall either be
       set to zero or to a negative number whose absolute value represents the
       number  of processes waiting for the semaphore at some unspecified time
       during the call.

RETURN VALUE
       Upon successful completion, the sem_getvalue() function shall return  a
       value  of  zero. Otherwise, it shall return a value of -1 and set errno
       to indicate the error.

ERRORS
       The sem_getvalue() function may fail if:

       EINVAL The sem argument does not refer to a valid semaphore.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       semctl(), semget(), semop(), sem_post(), sem_timedwait(), sem_trywait()

       The Base Definitions volume of POSIX.1‐2017, <semaphore.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                     SEM_GETVALUE(3P)
