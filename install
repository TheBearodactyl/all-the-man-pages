INSTALL(1)                                                                                     User Commands                                                                                    INSTALL(1)

NAME
       install - copy files and set attributes

SYNOPSIS
       install [OPTION]... [-T] SOURCE DEST
       install [OPTION]... SOURCE... DIRECTORY
       install [OPTION]... -t DIRECTORY SOURCE...
       install [OPTION]... -d DIRECTORY...

DESCRIPTION
       This  install  program  copies files (often just compiled) into destination locations you choose.  If you want to download and install a ready-to-use package on a GNU/Linux system, you should in‐
       stead be using a package manager like yum(1) or apt-get(1).

       In the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to the existing DIRECTORY, while setting permission modes and owner/group.  In the 4th form, create all components of the given
       DIRECTORY(ies).

       Mandatory arguments to long options are mandatory for short options too.

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -c     (ignored)

       -C, --compare
              compare content of source and destination files, and if no change to content, ownership, and permissions, do not modify the destination at all

       -d, --directory
              treat all arguments as directory names; create all components of the specified directories

       -D     create all leading components of DEST except the last, or all components of --target-directory, then copy SOURCE to DEST

       --debug
              explain how a file is copied.  Implies -v

       -g, --group=GROUP
              set group ownership, instead of process' current group

       -m, --mode=MODE
              set permission mode (as in chmod), instead of rwxr-xr-x

       -o, --owner=OWNER
              set ownership (super-user only)

       -p, --preserve-timestamps
              apply access/modification times of SOURCE files to corresponding destination files

       -s, --strip
              strip symbol tables

       --strip-program=PROGRAM
              program used to strip binaries

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -v, --verbose
              print the name of each created file or directory

       --preserve-context
              preserve SELinux security context

       -Z     set SELinux security context of destination file and each created directory to default type

       --context[=CTX]
              like -Z, or if CTX is specified then set the SELinux or SMACK security context to CTX

       --help display this help and exit

       --version
              output version information and exit

       The  backup  suffix  is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.  The version control method may be selected via the --backup option or through the VERSION_CONTROL environment vari‐
       able.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2023 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       Full documentation <https://www.gnu.org/software/coreutils/install>
       or available locally via: info '(coreutils) install invocation'

GNU coreutils 9.2                                                                               April 2023                                                                                      INSTALL(1)
INSTALL(5)                                                                                                                                                                                      INSTALL(5)

NAME
       install - Download and install node and npm

   Description
       To  publish  and  install  packages  to  and  from the public npm registry, you must install Node.js and the npm command line interface using either a Node version manager or a Node installer. We
       strongly recommend using a Node version manager to install Node.js and npm. We do not recommend using a Node installer, since the Node installation process installs npm in a directory with  local
       permissions and can cause permissions errors when you run npm packages globally.

   Overview
       • Checking your version of npm and Node.js #checking-your-version-of-npm-and-node-js

       • Using a Node version manager to install Node.js and npm #using-a-node-version-manager-to-install-node-js-and-npm

       • Using a Node installer to install Node.js and npm #using-a-node-installer-to-install-node-js-and-npm

   Checking your version of npm and Node.js
       To see if you already have Node.js and npm installed and check the installed version, run the following commands:

         node -v
         npm -v

   Using a Node version manager to install Node.js and npm
       Node version managers allow you to install and switch between multiple versions of Node.js and npm on your system so you can test your applications on multiple versions of npm to ensure they work
       for users on different versions.

   OSX or Linux Node version managers
       • nvm https://github.com/creationix/nvm

       • n https://github.com/tj/n

   Windows Node version managers
       • nodist https://github.com/marcelklehr/nodist

       • nvm-windows https://github.com/coreybutler/nvm-windows

   Using a Node installer to install Node.js and npm
       If you are unable to use a Node version manager, you can use a Node installer to install both Node.js and npm on your system.

       • Node.js installer https://nodejs.org/en/download/

       • NodeSource installer https://github.com/nodesource/distributions. If you use Linux, we recommend that you use a NodeSource installer.

   OS X or Windows Node installers
       If you're using OS X or Windows, use one of the installers from the Node.js download page https://nodejs.org/en/download/. Be sure to install the version labeled LTS. Other versions have not  yet
       been tested with npm.

   Linux or other operating systems Node installers
       If you're using Linux or another operating system, use one of the following installers:

       • NodeSource installer https://github.com/nodesource/distributions (recommended)

       • One of the installers on the Node.js download page https://nodejs.org/en/download/

       Or see this page https://nodejs.org/en/download/package-manager/ to install npm for Linux in the way many Linux developers prefer.

   Less-common operating systems
       For more information on installing Node.js on a variety of operating systems, see this page https://nodejs.org/en/download/package-manager/.

                                                                                              September 2022                                                                                    INSTALL(5)
