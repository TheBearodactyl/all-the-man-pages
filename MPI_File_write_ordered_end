MPI_File_write_ordered_end(3)                                                                    Open MPI                                                                    MPI_File_write_ordered_end(3)

NAME
       MPI_File_write_ordered_end - Writes a file at a location specified by a shared file pointer; ending part of a split collective routine (blocking).

SYNTAX
C Syntax
       #include <mpi.h>
       int MPI_File_write_ordered_end(MPI_File fh, const void *buf,
            MPI_Status *status)

Fortran Syntax
       USE MPI
       ! or the older form: INCLUDE 'mpif.h'
       MPI_FILE_WRITE_ORDERED_END(FH, BUF, STATUS, IERROR)
            <type>    BUF(*)
            INTEGER   FH, STATUS(MPI_STATUS_SIZE), IERROR

Fortran 2008 Syntax
       USE mpi_f08
       MPI_File_write_ordered_end(fh, buf, status, ierror)
            TYPE(MPI_File), INTENT(IN) :: fh
            TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf
            TYPE(MPI_Status) :: status
            INTEGER, OPTIONAL, INTENT(OUT) :: ierror

C++ Syntax
       #include <mpi.h>
       void MPI::File::Write_ordered_end(const void* buf, MPI::Status& status)

       void MPI::File::Write_ordered_end(const void* buf)

INPUT/OUTPUT PARAMETER
       fh        File handle (handle).

INPUT PARAMETER
       buf       Initial address of buffer (choice).

OUTPUT PARAMETERS
       status    Status object (status).

       IERROR    Fortran only: Error status (integer).

DESCRIPTION
       MPI_File_write_ordered_end  is the ending part of a split collective routine that must be called by all processes in the communicator group associated with the file handle fh.  MPI_File_write_or‐
       dered_end returns the number of elements written into the file associated with fh in status.

NOTES
       All the nonblocking collective routines for data access are "split" into two routines, each with _begin or _end as a suffix. These split collective routines are subject to the semantic rules  de‐
       scribed in Section 9.4.5 of the MPI-2 standard.

ERRORS
       Almost  all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler
       is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.

       Before the error value is returned, the current MPI error handler is called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may  be  changed
       with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an er‐
       ror.

4.1.5                                                                                          Feb 23, 2023                                                                  MPI_File_write_ordered_end(3)
