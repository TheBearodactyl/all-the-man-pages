__gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >(3)                            Library Functions Manual                            __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >(3)

NAME
       __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >

SYNOPSIS
   Public Types
       typedef _Ht::allocator_type allocator_type
       typedef _Ht::const_iterator const_iterator
       typedef _Alloc_traits::const_pointer const_pointer
       typedef _Alloc_traits::const_reference const_reference
       typedef _Ht::difference_type difference_type
       typedef _Ht::hasher hasher
       typedef _Ht::const_iterator iterator
       typedef _Ht::key_equal key_equal
       typedef _Ht::key_type key_type
       typedef _Alloc_traits::pointer pointer
       typedef _Alloc_traits::reference reference
       typedef _Ht::size_type size_type
       typedef _Ht::value_type value_type

   Public Member Functions
       template<class _InputIterator > hash_set (_InputIterator __f, _InputIterator __l)
       template<class _InputIterator > hash_set (_InputIterator __f, _InputIterator __l, size_type __n)
       template<class _InputIterator > hash_set (_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf)
       template<class _InputIterator > hash_set (_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
       hash_set (size_type __n)
       hash_set (size_type __n, const hasher &__hf)
       hash_set (size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
       iterator begin () const
       size_type bucket_count () const
       void clear ()
       size_type count (const key_type &__key) const
       size_type elems_in_bucket (size_type __n) const
       bool empty () const
       iterator end () const
       pair< iterator, iterator > equal_range (const key_type &__key) const
       size_type erase (const key_type &__key)
       void erase (iterator __f, iterator __l)
       void erase (iterator __it)
       iterator find (const key_type &__key) const
       allocator_type get_allocator () const
       hasher hash_funct () const
       template<class _InputIterator > void insert (_InputIterator __f, _InputIterator __l)
       pair< iterator, bool > insert (const value_type &__obj)
       pair< iterator, bool > insert_noresize (const value_type &__obj)
       key_equal key_eq () const
       size_type max_bucket_count () const
       size_type max_size () const
       void resize (size_type __hint)
       size_type size () const
       void swap (hash_set &__hs)

   Friends
       template<class _Val , class _HF , class _EqK , class _Al > bool operator== (const hash_set< _Val, _HF, _EqK, _Al > &, const hash_set< _Val, _HF, _EqK, _Al > &)

Detailed Description
   template<class _Value, class _HashFcn = hash<_Value>, class _EqualKey = equal_to<_Value>, class _Alloc = allocator<_Value>>
       class __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >"This is an SGI extension.

       Todo
           Needs documentation! See http://gcc.gnu.org/onlinedocs/libstdc++/manual/documentation_style.html

       Definition at line 84 of file hash_set.

Member Typedef Documentation
   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::allocator_type __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::allocator_type
       Definition at line 114 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::const_iterator __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::const_iterator
       Definition at line 112 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Alloc_traits::const_pointer __gnu_cxx::hash_set< _Value,
       _HashFcn, _EqualKey, _Alloc >::const_pointer
       Definition at line 107 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Alloc_traits::const_reference __gnu_cxx::hash_set< _Value,
       _HashFcn, _EqualKey, _Alloc >::const_reference
       Definition at line 109 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::difference_type __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::difference_type
       Definition at line 105 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::hasher __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey,
       _Alloc >::hasher
       Definition at line 101 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::const_iterator __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::iterator
       Definition at line 111 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::key_equal __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::key_equal
       Definition at line 102 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::key_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey,
       _Alloc >::key_type
       Definition at line 99 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Alloc_traits::pointer __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::pointer
       Definition at line 106 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Alloc_traits::reference __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::reference
       Definition at line 108 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::size_type __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::size_type
       Definition at line 104 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> typedef _Ht::value_type __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::value_type
       Definition at line 100 of file hash_set.

Constructor & Destructor Documentation
   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::hash_set ()
       [inline]
       Definition at line 128 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::hash_set
       (size_type __n) [inline],  [explicit]
       Definition at line 132 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::hash_set
       (size_type __n, const hasher & __hf) [inline]
       Definition at line 135 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::hash_set
       (size_type __n, const hasher & __hf, const key_equal & __eql, const allocator_type & __a = allocator_type()) [inline]
       Definition at line 138 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> template<class _InputIterator > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::hash_set (_InputIterator __f, _InputIterator __l) [inline]
       Definition at line 143 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> template<class _InputIterator > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::hash_set (_InputIterator __f, _InputIterator __l, size_type __n) [inline]
       Definition at line 148 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> template<class _InputIterator > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::hash_set (_InputIterator __f, _InputIterator __l, size_type __n, const hasher & __hf) [inline]
       Definition at line 153 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> template<class _InputIterator > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::hash_set (_InputIterator __f, _InputIterator __l, size_type __n, const hasher & __hf, const key_equal & __eql, const allocator_type & __a = allocator_type()) [inline]
       Definition at line 159 of file hash_set.

Member Function Documentation
   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> iterator __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::begin () const [inline]
       Definition at line 187 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::bucket_count () const [inline]
       Definition at line 247 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> void __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::clear
       () [inline]
       Definition at line 239 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::count (const key_type & __key) const [inline]
       Definition at line 219 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::elems_in_bucket (size_type __n) const [inline]
       Definition at line 255 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> bool __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::empty
       () const [inline]
       Definition at line 174 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> iterator __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::end () const [inline]
       Definition at line 191 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> pair< iterator, iterator > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::equal_range (const key_type & __key) const [inline]
       Definition at line 223 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::erase (const key_type & __key) [inline]
       Definition at line 227 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> void __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::erase
       (iterator __f, iterator __l) [inline]
       Definition at line 235 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> void __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::erase
       (iterator __it) [inline]
       Definition at line 231 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> iterator __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::find (const key_type & __key) const [inline]
       Definition at line 215 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> allocator_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::get_allocator () const [inline]
       Definition at line 125 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> hasher __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::hash_funct () const [inline]
       Definition at line 117 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> template<class _InputIterator > void __gnu_cxx::hash_set< _Value,
       _HashFcn, _EqualKey, _Alloc >::insert (_InputIterator __f, _InputIterator __l) [inline]
       Definition at line 203 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> pair< iterator, bool > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::insert (const value_type & __obj) [inline]
       Definition at line 195 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> pair< iterator, bool > __gnu_cxx::hash_set< _Value, _HashFcn,
       _EqualKey, _Alloc >::insert_noresize (const value_type & __obj) [inline]
       Definition at line 207 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> key_equal __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::key_eq () const [inline]
       Definition at line 121 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::max_bucket_count () const [inline]
       Definition at line 251 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::max_size () const [inline]
       Definition at line 170 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> void __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::resize
       (size_type __hint) [inline]
       Definition at line 243 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> size_type __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc
       >::size () const [inline]
       Definition at line 166 of file hash_set.

   template<class _Value , class _HashFcn  = hash<_Value>, class _EqualKey  = equal_to<_Value>, class _Alloc  = allocator<_Value>> void __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >::swap
       (hash_set< _Value, _HashFcn, _EqualKey, _Alloc > & __hs) [inline]
       Definition at line 178 of file hash_set.

Author
       Generated automatically by Doxygen for libstdc++ from the source code.

libstdc++                                                                                     Wed Feb 1 2023                                 __gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >(3)
